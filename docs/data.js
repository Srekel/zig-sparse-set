zigAnalysis={"typeKinds": ["Type","Void","Bool","NoReturn","Int","Float","Pointer","Array","Struct","ComptimeFloat","ComptimeInt","Undefined","Null","Optional","ErrorUnion","ErrorSet","Enum","Union","Fn","BoundFn","ArgTuple","Opaque","Frame","AnyFrame","Vector","EnumLiteral"],"params": {"zigId": "aVRjmHyeBBWAoFH0qYL7v1aZR3HSRzP8cNs-1-wTnPYPQcPQ-9XzSLnDRu2ivbXK","zigVersion": "0.5.0+57b8614a5","builds": [{"target": "x86_64-windows-msvc"}],"rootName": "test"},"rootPkg": 0,"calls": [{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 563,"result": {"type": 383,"value": 387},"args": [{"type": 383,"value": 388}]},{"fn": 563,"result": {"type": 383,"value": 389},"args": [{"type": 383,"value": 390}]},{"fn": 563,"result": {"type": 383,"value": 391},"args": [{"type": 383,"value": 392}]},{"fn": 564,"result": {"type": 383,"value": 394},"args": [{"type": 383,"value": 395}]},{"fn": 565,"result": {"type": 383,"value": 397},"args": [{"type": 383,"value": 397},{"type": 383,"value": 398}]},{"fn": 565,"result": {"type": 383,"value": 398},"args": [{"type": 383,"value": 399},{"type": 383,"value": 398}]},{"fn": 565,"result": {"type": 383,"value": 398},"args": [{"type": 383,"value": 398},{"type": 383,"value": 398}]},{"fn": 566,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 398}]},{"fn": 567,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 402}]},{"fn": 568,"result": {"type": 383,"value": 404},"args": [{"type": 383,"value": 405}]},{"fn": 569,"result": {"type": 383,"value": 389},"args": [{"type": 383,"value": 390},{"type": 407,"value": null}]},{"fn": 569,"result": {"type": 383,"value": 391},"args": [{"type": 383,"value": 392},{"type": 407,"value": null}]},{"fn": 569,"result": {"type": 383,"value": 387},"args": [{"type": 383,"value": 388},{"type": 407,"value": null}]},{"fn": 570,"result": {"type": 409,"value": null},"args": [{"type": 409,"value": null},{"type": 409,"value": null}]},{"fn": 570,"result": {"type": 409,"value": null},"args": [{"type": 409,"value": null},{"type": 409,"value": null}]},{"fn": 570,"result": {"type": 409,"value": null},"args": [{"type": 409,"value": null},{"type": 409,"value": null}]},{"fn": 570,"result": {"type": 409,"value": null},"args": [{"type": 409,"value": null},{"type": 409,"value": null}]},{"fn": 570,"result": {"type": 409,"value": null},"args": [{"type": 409,"value": null},{"type": 409,"value": null}]},{"fn": 570,"result": {"type": 409,"value": null},"args": [{"type": 409,"value": null},{"type": 409,"value": null}]},{"fn": 571,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 402}]},{"fn": 572,"result": {"type": 412,"value": 567},"args": [{"type": 413,"value": null}]},{"fn": 573,"result": {"type": 383,"value": 415},"args": [{"type": 383,"value": 416}]},{"fn": 574,"result": {"type": 383,"value": 418},"args": [{"type": 383,"value": 419}]},{"fn": 567,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 398}]},{"fn": 575,"result": {"type": 383,"value": 421},"args": [{"type": 383,"value": 422},{"type": 383,"value": 423},{"type": 323,"value": 431},{"type": 324,"value": 432}]},{"fn": 563,"result": {"type": 383,"value": 424},"args": [{"type": 383,"value": 398}]},{"fn": 563,"result": {"type": 383,"value": 425},"args": [{"type": 383,"value": 384}]},{"fn": 563,"result": {"type": 383,"value": 426},"args": [{"type": 383,"value": 427}]},{"fn": 569,"result": {"type": 383,"value": 425},"args": [{"type": 383,"value": 384},{"type": 407,"value": null}]},{"fn": 569,"result": {"type": 383,"value": 426},"args": [{"type": 383,"value": 427},{"type": 407,"value": null}]},{"fn": 569,"result": {"type": 383,"value": 424},"args": [{"type": 383,"value": 398},{"type": 407,"value": null}]},{"fn": 576,"result": {"type": 323,"value": 431},"args": [{"type": 383,"value": 422}]},{"fn": 577,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 402}]},{"fn": 578,"result": {"type": 383,"value": 398},"args": [{"type": 383,"value": 402}]},{"fn": 3,"result": {"type": 431,"value": null},"args": [{"type": 382,"value": null}]},{"fn": 579,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 397}]},{"fn": 579,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 398}]},{"fn": 579,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 399}]},{"fn": 580,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 434}]},{"fn": 581,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 402}]},{"fn": 582,"result": {"type": 383,"value": 437},"args": [{"type": 383,"value": 438}]},{"fn": 582,"result": {"type": 383,"value": 439},"args": [{"type": 383,"value": 440}]},{"fn": 580,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 398}]},{"fn": 580,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 397}]},{"fn": 580,"result": {"type": 409,"value": null},"args": [{"type": 383,"value": 399}]},{"fn": 583,"result": {"type": 383,"value": 442},"args": [{"type": 383,"value": 416}]},{"fn": 584,"result": {"type": 383,"value": 444},"args": [{"type": 445,"value": null}]},{"fn": 585,"result": {"type": 383,"value": 447},"args": [{"type": 383,"value": 448}]},{"fn": 586,"result": {"type": 324,"value": 432},"args": [{"type": 383,"value": 422}]},{"fn": 587,"result": {"type": 383,"value": 451},"args": [{"type": 383,"value": 402}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]},{"fn": 562,"result": {"type": 382,"value": null},"args": [{"type": 383,"value": 384},{"type": 385,"value": null},{"type": 385,"value": null}]}],"packages": [{"name": "","file": 0,"main": 452,"table": {"builtin": 1,"std": 2,"root": 0}},{"name": "builtin","file": 1,"main": 453,"table": {"std": 2}},{"name": "std","file": 2,"main": 454,"table": {"builtin": 1,"std": 2,"root": 3}},{"name": "std.special","file": 3,"main": 455,"table": {"builtin": 1,"std": 2}}],"types": [{"kind": 18,"name": "fn([]const u8, ?*std.builtin.StackTrace) noreturn","generic": false,"ret": 456,"args": [385,457]},{"kind": 18,"name": "fn() anyerror!void","generic": false,"ret": 458},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize, []const u8) noreturn","generic": false,"ret": 456,"args": [459,460,385]},{"kind": 18,"name": "fn(bool) void","generic": false,"ret": 431,"args": [382]},{"kind": 18,"name": "fn(*std.mem.Allocator, u32, u8) @typeOf(SparseSet((struct SparseSetConfig constant)).init).ReturnType.ErrorSet!SparseSet((struct SparseSetConfig constant))","generic": false,"ret": 461,"args": [462,397,384]},{"kind": 18,"name": "fn([]u8) std.heap.ThreadSafeFixedBufferAllocator","generic": false,"ret": 463,"args": [395]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29) @typeOf(std.heap.ThreadSafeFixedBufferAllocator.realloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 464,"args": [462,395,465,398,465]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29) @typeOf(std.heap.ThreadSafeFixedBufferAllocator.alloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 466,"args": [462,398,465]},{"kind": 18,"name": "fn(usize, usize) usize","generic": false,"ret": 398,"args": [398,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29) []u8","generic": false,"ret": 395,"args": [462,395,465,398,465]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32) @typeOf(SparseSet((struct SparseSetConfig constant)).addOrError).ReturnType.ErrorSet!u8","generic": false,"ret": 467,"args": [468,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u32) @typeOf(SparseSet((struct SparseSetConfig constant)).hasSparseOrError).ReturnType.ErrorSet!bool","generic": false,"ret": 469,"args": [444,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u32) bool","generic": false,"ret": 382,"args": [444,397]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32) u8","generic": false,"ret": 384,"args": [468,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant))) void","generic": false,"ret": 431,"args": [444]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32, i32) @typeOf(struct:226:40.addValueOrError).ReturnType.ErrorSet!u8","generic": false,"ret": 470,"args": [468,397,471]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32, i32) u8","generic": false,"ret": 384,"args": [468,397,471]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant))) u8","generic": false,"ret": 384,"args": [444]},{"kind": 18,"name": "fn(u8, u8) void","generic": false,"ret": 431,"args": [384,384]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32) @typeOf(SparseSet((struct SparseSetConfig constant)).removeOrError).ReturnType.ErrorSet!void","generic": false,"ret": 472,"args": [468,397]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32) void","generic": false,"ret": 431,"args": [468,397]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32, *u8, *u8) @typeOf(SparseSet((struct SparseSetConfig constant)).removeWithInfoOrError).ReturnType.ErrorSet!void","generic": false,"ret": 473,"args": [468,397,474,474]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant)), u32, *u8, *u8) void","generic": false,"ret": 431,"args": [468,397,474,474]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant))) []u32","generic": false,"ret": 475,"args": [444]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant))) []i32","generic": false,"ret": 476,"args": [444]},{"kind": 18,"name": "fn(*SparseSet((struct SparseSetConfig constant))) void","generic": false,"ret": 431,"args": [468]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u32) @typeOf(SparseSet((struct SparseSetConfig constant)).getBySparseOrError).ReturnType.ErrorSet!u8","generic": false,"ret": 477,"args": [444,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u32) u8","generic": false,"ret": 384,"args": [444,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u32) @typeOf(struct:389:40.getValueBySparseOrError).ReturnType.ErrorSet!*i32","generic": false,"ret": 478,"args": [444,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u32) *i32","generic": false,"ret": 479,"args": [444,397]},{"kind": 18,"name": "fn(i32, i32) void","generic": false,"ret": 431,"args": [471,471]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u8) @typeOf(SparseSet((struct SparseSetConfig constant)).getByDenseOrError).ReturnType.ErrorSet!u32","generic": false,"ret": 480,"args": [444,384]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u8) u32","generic": false,"ret": 397,"args": [444,384]},{"kind": 18,"name": "fn(u32, u32) void","generic": false,"ret": 431,"args": [397,397]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u8) @typeOf(struct:389:40.getValueByDenseOrError).ReturnType.ErrorSet!*i32","generic": false,"ret": 481,"args": [444,384]},{"kind": 18,"name": "fn(SparseSet((struct SparseSetConfig constant)), u8) *i32","generic": false,"ret": 479,"args": [444,384]},{"kind": 18,"name": "fn() void","generic": false,"ret": 431},{"kind": 18,"name": "fn() noreturn","generic": false,"ret": 456},{"kind": 18,"name": "fn() *std.io.out_stream.OutStream(std.os.WriteError)","generic": false,"ret": 482},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,385]},{"kind": 18,"name": "fn(std.builtin.StackTrace) void","generic": false,"ret": 431,"args": [484]},{"kind": 18,"name": "fn(?usize) void","generic": false,"ret": 431,"args": [460]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]u32","generic": false,"ret": 485,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]u8","generic": false,"ret": 486,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]i32","generic": false,"ret": 487,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u32) void","generic": false,"ret": 431,"args": [462,475]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8) void","generic": false,"ret": 431,"args": [462,395]},{"kind": 18,"name": "fn(*std.mem.Allocator, []i32) void","generic": false,"ret": 431,"args": [462,476]},{"kind": 18,"name": "fn(u8, u8) noreturn","generic": false,"ret": 456,"args": [384,384]},{"kind": 18,"name": "fn(i32, i32) noreturn","generic": false,"ret": 456,"args": [471,471]},{"kind": 18,"name": "fn(u32, u32) noreturn","generic": false,"ret": 456,"args": [397,397]},{"kind": 18,"name": "fn() std.fs.file.File","generic": false,"ret": 488},{"kind": 18,"name": "fn(std.fs.file.File) std.fs.file.OutStream","generic": false,"ret": 489,"args": [488]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,385]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, []u8) @typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet!usize","generic": false,"ret": 490,"args": [491,395]},{"kind": 18,"name": "fn() @typeOf(std.debug.getSelfDebugInfo).ReturnType.ErrorSet!*std.debug.DebugInfo","generic": false,"ret": 492},{"kind": 18,"name": "fn(*std.mem.Allocator) @typeOf(std.debug.openSelfDebugInfo).ReturnType.ErrorSet!std.debug.DebugInfo","generic": false,"ret": 493,"args": [462]},{"kind": 18,"name": "fn() *std.mem.Allocator","generic": false,"ret": 462},{"kind": 18,"name": "fn(*std.mem.Allocator) @typeOf(std.debug.openSelfDebugInfoWindows).ReturnType.ErrorSet!std.debug.DebugInfo","generic": false,"ret": 494,"args": [462]},{"kind": 18,"name": "fn() std.fs.OpenSelfExeError!std.fs.file.File","generic": false,"ret": 495},{"kind": 18,"name": "fn(*std.mem.Allocator) std.mem.Error!*std.coff.Coff","generic": false,"ret": 496,"args": [462]},{"kind": 18,"name": "fn(std.fs.file.File) void","generic": false,"ret": 431,"args": [488]},{"kind": 18,"name": "fn(*std.mem.Allocator, std.fs.file.File) std.coff.Coff","generic": false,"ret": 497,"args": [462,488]},{"kind": 18,"name": "fn(*std.coff.Coff) @typeOf(std.coff.Coff.loadHeader).ReturnType.ErrorSet!void","generic": false,"ret": 498,"args": [499]},{"kind": 18,"name": "fn(std.fs.file.File) std.fs.file.InStream","generic": false,"ret": 500,"args": [488]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError), []u8) @typeOf(std.io.in_stream.InStream(std.os.ReadError).readNoEof).ReturnType.ErrorSet!void","generic": false,"ret": 501,"args": [502,395]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError), []u8) std.os.ReadError!usize","generic": false,"ret": 503,"args": [502,395]},{"kind": 18,"name": "fn([]const u8, []const u8) bool","generic": false,"ret": 382,"args": [385,385]},{"kind": 18,"name": "fn(std.fs.file.File, u64) std.os.SeekError!void","generic": false,"ret": 504,"args": [488,399]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError)) @typeOf(std.io.in_stream.InStream(std.os.ReadError).readIntLittle).ReturnType.ErrorSet!u32","generic": false,"ret": 505,"args": [502]},{"kind": 18,"name": "fn(*const [4]u8) u32","generic": false,"ret": 397,"args": [506]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError)) @typeOf(std.io.in_stream.InStream(std.os.ReadError).readIntLittle).ReturnType.ErrorSet!u16","generic": false,"ret": 507,"args": [502]},{"kind": 18,"name": "fn(*const [2]u8) u16","generic": false,"ret": 427,"args": [508]},{"kind": 18,"name": "fn(*std.coff.Coff, *std.fs.file.InStream) @typeOf(std.coff.Coff.loadOptionalHeader).ReturnType.ErrorSet!void","generic": false,"ret": 509,"args": [499,510]},{"kind": 18,"name": "fn(std.fs.file.File, i64) std.os.SeekError!void","generic": false,"ret": 504,"args": [488,511]},{"kind": 18,"name": "fn(*std.coff.Coff, []u8) @typeOf(std.coff.Coff.getPdbPath).ReturnType.ErrorSet!usize","generic": false,"ret": 512,"args": [499,395]},{"kind": 18,"name": "fn(*std.coff.Coff) @typeOf(std.coff.Coff.loadSections).ReturnType.ErrorSet!void","generic": false,"ret": 513,"args": [499]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.coff.Section,null), usize) @typeOf(std.array_list.AlignedArrayList(std.coff.Section,null).ensureCapacity).ReturnType.ErrorSet!void","generic": false,"ret": 514,"args": [515,398]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(std.coff.Section,null)) usize","generic": false,"ret": 398,"args": [387]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.coff.Section, usize) std.mem.Error![]std.coff.Section","generic": false,"ret": 516,"args": [462,517,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.coff.Section,null), std.coff.Section) @typeOf(std.array_list.AlignedArrayList(std.coff.Section,null).append).ReturnType.ErrorSet!void","generic": false,"ret": 518,"args": [515,388]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.coff.Section,null)) @typeOf(std.array_list.AlignedArrayList(std.coff.Section,null).addOne).ReturnType.ErrorSet!*std.coff.Section","generic": false,"ret": 519,"args": [515]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.coff.Section,null)) *std.coff.Section","generic": false,"ret": 520,"args": [515]},{"kind": 18,"name": "fn(*std.coff.Coff) ?*std.coff.Section","generic": false,"ret": 521,"args": [499]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError)) @typeOf(std.io.in_stream.InStream(std.os.ReadError).readStruct).ReturnType.ErrorSet!std.coff.DebugDirectoryEntry","generic": false,"ret": 522,"args": [502]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(std.coff.Section,null)) []std.coff.Section","generic": false,"ret": 517,"args": [387]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError)) @typeOf(std.io.in_stream.InStream(std.os.ReadError).readByte).ReturnType.ErrorSet!u8","generic": false,"ret": 523,"args": [502]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const []const u8) @typeOf(std.fs.path.resolve).ReturnType.ErrorSet![]u8","generic": false,"ret": 524,"args": [462,525]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const []const u8) @typeOf(std.fs.path.resolveWindows).ReturnType.ErrorSet![]u8","generic": false,"ret": 526,"args": [462,525]},{"kind": 18,"name": "fn(*std.mem.Allocator) @typeOf(std.process.getCwdAlloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 527,"args": [462]},{"kind": 18,"name": "fn([]const u8) std.fs.path.WindowsPath","generic": false,"ret": 528,"args": [385]},{"kind": 18,"name": "fn(u8) u8","generic": false,"ret": 384,"args": [384]},{"kind": 18,"name": "fn(std.fs.path.Kind, []const u8, []const u8) bool","generic": false,"ret": 382,"args": [529,385,385]},{"kind": 18,"name": "fn([]u8, []const u8) void","generic": false,"ret": 431,"args": [395,385]},{"kind": 18,"name": "fn([]const u8, []const u8) std.mem.TokenIterator","generic": false,"ret": 530,"args": [385,385]},{"kind": 18,"name": "fn(*std.mem.TokenIterator) ?[]const u8","generic": false,"ret": 531,"args": [532]},{"kind": 18,"name": "fn([]u8) std.os.GetCwdError![]u8","generic": false,"ret": 533,"args": [395]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u8) @typeOf(std.mem.dupe).ReturnType.ErrorSet![]u8","generic": false,"ret": 534,"args": [462,385]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, usize) []u8","generic": false,"ret": 395,"args": [462,395,398]},{"kind": 18,"name": "fn(*std.pdb.Pdb, *std.coff.Coff, []u8) @typeOf(std.pdb.Pdb.openFile).ReturnType.ErrorSet!void","generic": false,"ret": 535,"args": [536,499,395]},{"kind": 18,"name": "fn([]const u8) std.fs.file.OpenError!std.fs.file.File","generic": false,"ret": 537,"args": [385]},{"kind": 18,"name": "fn(*std.pdb.Msf, *std.mem.Allocator, std.fs.file.File) @typeOf(std.pdb.Msf.openFile).ReturnType.ErrorSet!void","generic": false,"ret": 538,"args": [539,462,488]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError)) @typeOf(std.io.in_stream.InStream(std.os.ReadError).readStruct).ReturnType.ErrorSet!std.pdb.SuperBlock","generic": false,"ret": 540,"args": [502]},{"kind": 18,"name": "fn(std.fs.file.File) std.fs.file.GetPosError!u64","generic": false,"ret": 541,"args": [488]},{"kind": 18,"name": "fn(u32, u32) u32","generic": false,"ret": 397,"args": [397,397]},{"kind": 18,"name": "fn(u32, std.fs.file.File, []u32) std.pdb.MsfStream","generic": false,"ret": 542,"args": [397,488,475]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readIntLittle).ReturnType.ErrorSet!u32","generic": false,"ret": 543,"args": [544]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet), []u8) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readNoEof).ReturnType.ErrorSet!void","generic": false,"ret": 545,"args": [544,395]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet), []u8) @typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet!usize","generic": false,"ret": 490,"args": [544,395]},{"kind": 18,"name": "fn(u64, usize) usize","generic": false,"ret": 398,"args": [399,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]std.pdb.MsfStream","generic": false,"ret": 546,"args": [462,398]},{"kind": 18,"name": "fn(*std.pdb.Pdb, std.pdb.StreamType) ?*std.pdb.MsfStream","generic": false,"ret": 547,"args": [536,548]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet!std.debug.HashTableHeader","generic": false,"ret": 549,"args": [544]},{"kind": 18,"name": "fn(u32) u32","generic": false,"ret": 397,"args": [397]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet), *std.mem.Allocator) @typeOf(std.debug.readSparseBitVector).ReturnType.ErrorSet![]usize","generic": false,"ret": 550,"args": [544,462]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.AlignedArrayList(usize,null)","generic": false,"ret": 424,"args": [462]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(usize,null), usize) @typeOf(std.array_list.AlignedArrayList(usize,null).append).ReturnType.ErrorSet!void","generic": false,"ret": 551,"args": [552,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(usize,null)) @typeOf(std.array_list.AlignedArrayList(usize,null).addOne).ReturnType.ErrorSet!*usize","generic": false,"ret": 553,"args": [552]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(usize,null), usize) @typeOf(std.array_list.AlignedArrayList(usize,null).ensureCapacity).ReturnType.ErrorSet!void","generic": false,"ret": 554,"args": [552,398]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(usize,null)) usize","generic": false,"ret": 398,"args": [424]},{"kind": 18,"name": "fn(*std.mem.Allocator, []usize, usize) std.mem.Error![]usize","generic": false,"ret": 555,"args": [462,556,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(usize,null)) *usize","generic": false,"ret": 557,"args": [552]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(usize,null)) []usize","generic": false,"ret": 556,"args": [552]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]std.debug.Bucket","generic": false,"ret": 558,"args": [462,398]},{"kind": 18,"name": "fn([*]u8) []u8","generic": false,"ret": 395,"args": [559]},{"kind": 18,"name": "fn(*std.pdb.Pdb, u32) ?*std.pdb.MsfStream","generic": false,"ret": 547,"args": [536,397]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet!std.pdb.DbiStreamHeader","generic": false,"ret": 560,"args": [544]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.AlignedArrayList(std.debug.Module,null)","generic": false,"ret": 389,"args": [462]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet!std.pdb.ModInfo","generic": false,"ret": 561,"args": [544]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, *std.mem.Allocator) @typeOf(std.pdb.MsfStream.readNullTermString).ReturnType.ErrorSet![]u8","generic": false,"ret": 562,"args": [491,462]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.AlignedArrayList(u8,null)","generic": false,"ret": 425,"args": [462]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readByte).ReturnType.ErrorSet!u8","generic": false,"ret": 563,"args": [544]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(u8,null)) []u8","generic": false,"ret": 395,"args": [425]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u8,null), u8) @typeOf(std.array_list.AlignedArrayList(u8,null).append).ReturnType.ErrorSet!void","generic": false,"ret": 564,"args": [565,384]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u8,null)) @typeOf(std.array_list.AlignedArrayList(u8,null).addOne).ReturnType.ErrorSet!*u8","generic": false,"ret": 566,"args": [565]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u8,null), usize) @typeOf(std.array_list.AlignedArrayList(u8,null).ensureCapacity).ReturnType.ErrorSet!void","generic": false,"ret": 567,"args": [565,398]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(u8,null)) usize","generic": false,"ret": 398,"args": [425]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, usize) std.mem.Error![]u8","generic": false,"ret": 486,"args": [462,395,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u8,null)) *u8","generic": false,"ret": 474,"args": [565]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, i64) @typeOf(std.pdb.MsfStream.seekBy).ReturnType.ErrorSet!void","generic": false,"ret": 568,"args": [491,511]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.debug.Module,null), std.debug.Module) @typeOf(std.array_list.AlignedArrayList(std.debug.Module,null).append).ReturnType.ErrorSet!void","generic": false,"ret": 569,"args": [570,390]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.debug.Module,null)) @typeOf(std.array_list.AlignedArrayList(std.debug.Module,null).addOne).ReturnType.ErrorSet!*std.debug.Module","generic": false,"ret": 571,"args": [570]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.debug.Module,null), usize) @typeOf(std.array_list.AlignedArrayList(std.debug.Module,null).ensureCapacity).ReturnType.ErrorSet!void","generic": false,"ret": 572,"args": [570,398]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(std.debug.Module,null)) usize","generic": false,"ret": 398,"args": [389]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.debug.Module, usize) std.mem.Error![]std.debug.Module","generic": false,"ret": 573,"args": [462,574,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.debug.Module,null)) *std.debug.Module","generic": false,"ret": 575,"args": [570]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.debug.Module,null)) []std.debug.Module","generic": false,"ret": 574,"args": [570]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null)","generic": false,"ret": 391,"args": [462]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null)) @typeOf(std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null).addOne).ReturnType.ErrorSet!*std.pdb.SectionContribEntry","generic": false,"ret": 576,"args": [577]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null), usize) @typeOf(std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null).ensureCapacity).ReturnType.ErrorSet!void","generic": false,"ret": 578,"args": [577,398]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null)) usize","generic": false,"ret": 398,"args": [391]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry, usize) std.mem.Error![]std.pdb.SectionContribEntry","generic": false,"ret": 579,"args": [462,580,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null)) *std.pdb.SectionContribEntry","generic": false,"ret": 581,"args": [577]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)) @typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet!std.pdb.SectionContribEntry","generic": false,"ret": 582,"args": [544]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null)) []std.pdb.SectionContribEntry","generic": false,"ret": 580,"args": [577]},{"kind": 18,"name": "fn() bool","generic": false,"ret": 382},{"kind": 18,"name": "fn(std.builtin.StackTrace, *std.io.out_stream.OutStream(std.os.WriteError), *std.mem.Allocator, *std.debug.DebugInfo, bool) @typeOf(std.debug.writeStackTrace).ReturnType.ErrorSet!void","generic": false,"ret": 583,"args": [484,482,462,584,382]},{"kind": 18,"name": "fn(*std.debug.DebugInfo, *std.io.out_stream.OutStream(std.os.WriteError), usize, bool) @typeOf(std.debug.printSourceAtAddress).ReturnType.ErrorSet!void","generic": false,"ret": 585,"args": [584,482,398,382]},{"kind": 18,"name": "fn(*std.debug.DebugInfo, *std.io.out_stream.OutStream(std.os.WriteError), usize, bool) @typeOf(std.debug.printSourceAtAddressWindows).ReturnType.ErrorSet!void","generic": false,"ret": 586,"args": [584,482,398,382]},{"kind": 18,"name": "fn() usize","generic": false,"ret": 398},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError)) std.os.WriteError!void","generic": false,"ret": 483,"args": [482]},{"kind": 18,"name": "fn(std.debug.TtyColor) void","generic": false,"ret": 431,"args": [587]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,398]},{"kind": 18,"name": "fn(*std.debug.DebugInfo, *std.debug.Module) @typeOf(std.debug.populateModule).ReturnType.ErrorSet!void","generic": false,"ret": 588,"args": [584,575]},{"kind": 18,"name": "fn([]const u8) []const u8","generic": false,"ret": 385,"args": [385]},{"kind": 18,"name": "fn([*]const u8) []const u8","generic": false,"ret": 385,"args": [589]},{"kind": 18,"name": "fn(*std.pdb.MsfStream, u64) @typeOf(std.pdb.MsfStream.seekTo).ReturnType.ErrorSet!void","generic": false,"ret": 590,"args": [491,399]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8, u64, u64) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,385,399,399]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), usize, []const u8, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,398,385,385]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), std.debug.LineInfo) @typeOf(std.debug.printLineFromFileAnyOs).ReturnType.ErrorSet!void","generic": false,"ret": 591,"args": [482,592]},{"kind": 18,"name": "fn(std.fs.file.File, []u8) std.os.ReadError!usize","generic": false,"ret": 503,"args": [488,395]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,384]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8, u64, u64, usize, []const u8, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,385,399,399,398,385,385]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), *std.debug.DebugInfo, bool, ?usize) @typeOf(std.debug.writeCurrentStackTrace).ReturnType.ErrorSet!void","generic": false,"ret": 593,"args": [482,584,382,460]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), *std.debug.DebugInfo, bool, ?usize) @typeOf(std.debug.writeCurrentStackTraceWindows).ReturnType.ErrorSet!void","generic": false,"ret": 594,"args": [482,584,382,460]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize, u8, u8) noreturn","generic": false,"ret": 456,"args": [459,460,384,384]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize, i32, i32) noreturn","generic": false,"ret": 456,"args": [459,460,471,471]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize, u32, u32) noreturn","generic": false,"ret": 456,"args": [459,460,397,397]},{"kind": 18,"name": "fn(*c_void) std.fs.file.File","generic": false,"ret": 488,"args": [405]},{"kind": 18,"name": "fn() *std.os.windows.bits.PEB","generic": false,"ret": 595},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [385,596,482,39,398]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.heap.ArenaAllocator","generic": false,"ret": 597,"args": [462]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29) @typeOf(std.heap.DirectAllocator.realloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 598,"args": [462,395,465,398,465]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29) std.heap.error:43:63![]u8","generic": false,"ret": 599,"args": [462,398,465]},{"kind": 18,"name": "fn(?*c_void, usize, u32) void","generic": false,"ret": 431,"args": [600,398,397]},{"kind": 18,"name": "fn(*[32767]u16) std.fs.SelfExePathError![]u16","generic": false,"ret": 601,"args": [602]},{"kind": 18,"name": "fn([*]const u16) std.fs.file.OpenError!std.fs.file.File","generic": false,"ret": 537,"args": [603]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]std.coff.Coff","generic": false,"ret": 604,"args": [462,398]},{"kind": 18,"name": "fn(*c_void) void","generic": false,"ret": 431,"args": [405]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.AlignedArrayList(std.coff.Section,null)","generic": false,"ret": 387,"args": [462]},{"kind": 18,"name": "fn(*c_void, u64) std.os.SeekError!void","generic": false,"ret": 504,"args": [405,399]},{"kind": 18,"name": "fn(*c_void, i64) std.os.SeekError!void","generic": false,"ret": 504,"args": [405,511]},{"kind": 18,"name": "fn([]const u8) bool","generic": false,"ret": 382,"args": [385]},{"kind": 18,"name": "fn(std.mem.TokenIterator, u8) bool","generic": false,"ret": 382,"args": [530,384]},{"kind": 18,"name": "fn([]u8) std.os.windows.GetCurrentDirectoryError![]u8","generic": false,"ret": 605,"args": [395]},{"kind": 18,"name": "fn([]const u8) @typeOf(std.os.windows.sliceToPrefixedFileW).ReturnType.ErrorSet![32768]u16","generic": false,"ret": 606,"args": [385]},{"kind": 18,"name": "fn([]const u8) @typeOf(std.os.windows.sliceToPrefixedSuffixedFileW).ReturnType.ErrorSet![32768]u16","generic": false,"ret": 607,"args": [385]},{"kind": 18,"name": "fn([]u16, []const u16) void","generic": false,"ret": 431,"args": [608,609]},{"kind": 18,"name": "fn([]u16, []const u8) @typeOf(std.unicode.utf8ToUtf16Le).ReturnType.ErrorSet!usize","generic": false,"ret": 610,"args": [608,385]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8DecodeError!u32","generic": false,"ret": 611,"args": [385]},{"kind": 18,"name": "fn(*c_void) std.os.windows.GetFileSizeError!u64","generic": false,"ret": 612,"args": [405]},{"kind": 18,"name": "fn(*std.mem.Allocator, []usize, usize) []usize","generic": false,"ret": 556,"args": [462,556,398]},{"kind": 18,"name": "fn([*]const u8) usize","generic": false,"ret": 398,"args": [589]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.debug.Module, usize) []std.debug.Module","generic": false,"ret": 574,"args": [462,574,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry, usize) []std.pdb.SectionContribEntry","generic": false,"ret": 580,"args": [462,580,398]},{"kind": 18,"name": "fn([]u8) std.heap.FixedBufferAllocator","generic": false,"ret": 613,"args": [395]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u8) std.process.GetEnvVarOwnedError![]u8","generic": false,"ret": 614,"args": [462,385]},{"kind": 18,"name": "fn(std.fs.file.File) bool","generic": false,"ret": 382,"args": [488]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39]},{"kind": 18,"name": "fn(std.fs.file.File, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [488,385]},{"kind": 18,"name": "fn(*c_void, u16) std.os.windows.SetConsoleTextAttributeError!void","generic": false,"ret": 615,"args": [405,427]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,398]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, []const u8, u64, u64) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,385,399,399]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize, []const u8, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,398,385,385]},{"kind": 18,"name": "fn(*c_void, []u8) std.os.ReadError!usize","generic": false,"ret": 503,"args": [405,395]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, []const u8, u64, u64, usize, []const u8, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,385,399,399,398,385,385]},{"kind": 18,"name": "fn(usize, usize) std.math.error:315:43!usize","generic": false,"ret": 616,"args": [398,398]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), u8, u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,384,384]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), i32, i32) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,471,471]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), u32, u32) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,397,397]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [385,596,482,39]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29) @typeOf(std.heap.ArenaAllocator.realloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 617,"args": [462,395,465,398,465]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29) @typeOf(std.heap.ArenaAllocator.alloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 618,"args": [462,398,465]},{"kind": 18,"name": "fn(*std.heap.ArenaAllocator, usize, usize) @typeOf(std.heap.ArenaAllocator.createNode).ReturnType.ErrorSet!*std.linked_list.Node","generic": false,"ret": 619,"args": [620,398,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]align(8) u8","generic": false,"ret": 621,"args": [462,398]},{"kind": 18,"name": "fn(*std.linked_list.SinglyLinkedList([]u8), *std.linked_list.Node) void","generic": false,"ret": 431,"args": [622,623]},{"kind": 18,"name": "fn() std.linked_list.SinglyLinkedList([]u8)","generic": false,"ret": 394},{"kind": 18,"name": "fn(?*c_void, usize, u32, u32) std.os.windows.VirtualAllocError!*c_void","generic": false,"ret": 624,"args": [600,398,397,397]},{"kind": 18,"name": "fn(?*std.os.windows.bits.HMODULE, [*]u16, u32) std.os.windows.GetModuleFileNameError![]u16","generic": false,"ret": 625,"args": [626,627,397]},{"kind": 18,"name": "fn([*]const u16, u32, u32, ?*std.os.windows.bits.SECURITY_ATTRIBUTES, u32, u32, ?*c_void) std.os.windows.CreateFileError!*c_void","generic": false,"ret": 628,"args": [603,397,397,629,397,397,600]},{"kind": 18,"name": "fn(*c_void, u64) std.os.windows.SetFilePointerError!void","generic": false,"ret": 630,"args": [405,399]},{"kind": 18,"name": "fn(*c_void, i64) std.os.windows.SetFilePointerError!void","generic": false,"ret": 630,"args": [405,511]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]std.coff.Section","generic": false,"ret": 516,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.coff.Section) void","generic": false,"ret": 431,"args": [462,517]},{"kind": 18,"name": "fn(u32) std.os.UnexpectedError","generic": false,"ret": 631,"args": [397]},{"kind": 18,"name": "fn([]const u16) std.unicode.Utf16LeIterator","generic": false,"ret": 632,"args": [609]},{"kind": 18,"name": "fn(*std.unicode.Utf16LeIterator) @typeOf(std.unicode.Utf16LeIterator.nextCodepoint).ReturnType.ErrorSet!?u32","generic": false,"ret": 633,"args": [634]},{"kind": 18,"name": "fn(u32) @typeOf(std.unicode.utf8CodepointSequenceLength).ReturnType.ErrorSet!u3","generic": false,"ret": 635,"args": [397]},{"kind": 18,"name": "fn(u32, []u8) @typeOf(std.unicode.utf8Encode).ReturnType.ErrorSet!u3","generic": false,"ret": 636,"args": [397,395]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8Decode2Error!u32","generic": false,"ret": 637,"args": [385]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8Decode3Error!u32","generic": false,"ret": 638,"args": [385]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8Decode4Error!u32","generic": false,"ret": 639,"args": [385]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]usize","generic": false,"ret": 555,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []usize) void","generic": false,"ret": 431,"args": [462,556]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]std.debug.Module","generic": false,"ret": 573,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.debug.Module) void","generic": false,"ret": 431,"args": [462,574]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]std.pdb.SectionContribEntry","generic": false,"ret": 579,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []std.pdb.SectionContribEntry) void","generic": false,"ret": 431,"args": [462,580]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29) @typeOf(std.heap.FixedBufferAllocator.realloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 640,"args": [462,395,465,398,465]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize, u29) @typeOf(std.heap.FixedBufferAllocator.alloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 641,"args": [462,398,465]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u8) @typeOf(std.unicode.utf8ToUtf16LeWithNull).ReturnType.ErrorSet![]u16","generic": false,"ret": 642,"args": [462,385]},{"kind": 18,"name": "fn(*std.mem.Allocator) std.array_list.AlignedArrayList(u16,null)","generic": false,"ret": 426,"args": [462]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u16,null), usize) @typeOf(std.array_list.AlignedArrayList(u16,null).ensureCapacity).ReturnType.ErrorSet!void","generic": false,"ret": 643,"args": [644,398]},{"kind": 18,"name": "fn(std.array_list.AlignedArrayList(u16,null)) usize","generic": false,"ret": 398,"args": [426]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u16, usize) std.mem.Error![]u16","generic": false,"ret": 645,"args": [462,608,398]},{"kind": 18,"name": "fn([]const u8) @typeOf(std.unicode.Utf8View.init).ReturnType.ErrorSet!std.unicode.Utf8View","generic": false,"ret": 646,"args": [385]},{"kind": 18,"name": "fn([]const u8) std.unicode.Utf8View","generic": false,"ret": 647,"args": [385]},{"kind": 18,"name": "fn(std.unicode.Utf8View) std.unicode.Utf8Iterator","generic": false,"ret": 648,"args": [647]},{"kind": 18,"name": "fn(*std.unicode.Utf8Iterator) ?u32","generic": false,"ret": 649,"args": [650]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u16,null), u16) @typeOf(std.array_list.AlignedArrayList(u16,null).append).ReturnType.ErrorSet!void","generic": false,"ret": 651,"args": [644,427]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u16,null)) @typeOf(std.array_list.AlignedArrayList(u16,null).addOne).ReturnType.ErrorSet!*u16","generic": false,"ret": 652,"args": [644]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u16,null)) *u16","generic": false,"ret": 653,"args": [644]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u16,null)) []u16","generic": false,"ret": 608,"args": [644]},{"kind": 18,"name": "fn(*std.mem.Allocator, usize) std.mem.Error![]u16","generic": false,"ret": 645,"args": [462,398]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u16) void","generic": false,"ret": 431,"args": [462,608]},{"kind": 18,"name": "fn(usize) std.math.error:719:40!u32","generic": false,"ret": 654,"args": [398]},{"kind": 18,"name": "fn([*]u16, [*]u16, u32) std.os.windows.GetEnvironmentVariableError!u32","generic": false,"ret": 655,"args": [627,627,397]},{"kind": 18,"name": "fn(*std.mem.Allocator, []const u16) @typeOf(std.unicode.utf16leToUtf8Alloc).ReturnType.ErrorSet![]u8","generic": false,"ret": 656,"args": [462,609]},{"kind": 18,"name": "fn([]const u8) u16","generic": false,"ret": 427,"args": [385]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u8,null), usize) @typeOf(std.array_list.AlignedArrayList(u8,null).resize).ReturnType.ErrorSet!void","generic": false,"ret": 657,"args": [565,398]},{"kind": 18,"name": "fn(*std.array_list.AlignedArrayList(u8,null)) []u8","generic": false,"ret": 395,"args": [565]},{"kind": 18,"name": "fn(*c_void) bool","generic": false,"ret": 382,"args": [405]},{"kind": 18,"name": "fn(*c_void, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [405,385]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [398,596,482,39,398]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [399,596,482,39,398]},{"kind": 18,"name": "fn(*c_void, []u8) std.os.windows.ReadFileError!usize","generic": false,"ret": 658,"args": [405,395]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, u8, u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,384,384]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, i32, i32) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,471,471]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, u32, u32) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,397,397]},{"kind": 18,"name": "fn(c_ushort, c_ushort) c_ushort","generic": false,"ret": 659,"args": [659,659]},{"kind": 18,"name": "fn([]u8, []const u16) @typeOf(std.unicode.utf16leToUtf8).ReturnType.ErrorSet!usize","generic": false,"ret": 660,"args": [395,609]},{"kind": 18,"name": "fn(u32, []u8) void","generic": false,"ret": 431,"args": [397,395]},{"kind": 18,"name": "fn(u8) @typeOf(std.unicode.utf8ByteSequenceLength).ReturnType.ErrorSet!u3","generic": false,"ret": 661,"args": [384]},{"kind": 18,"name": "fn(*std.unicode.Utf8Iterator) ?[]const u8","generic": false,"ret": 531,"args": [650]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u16, usize) []u16","generic": false,"ret": 608,"args": [462,608,398]},{"kind": 18,"name": "fn([]const u16, []const u16) ?usize","generic": false,"ret": 460,"args": [609,609]},{"kind": 18,"name": "fn(*c_void, []const u8) std.os.windows.WriteFileError!void","generic": false,"ret": 662,"args": [405,385]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [398,596,482,39]},{"kind": 18,"name": "fn(u64, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [399,596,482,39]},{"kind": 18,"name": "fn(u32, usize) u32","generic": false,"ret": 397,"args": [397,398]},{"kind": 18,"name": "fn(u8, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [384,596,482,39,398]},{"kind": 18,"name": "fn(i32, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [471,596,482,39,398]},{"kind": 18,"name": "fn(u32, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [397,596,482,39,398]},{"kind": 18,"name": "fn() std.mutex.Mutex","generic": false,"ret": 663},{"kind": 18,"name": "fn() std.parker.WindowsParker","generic": false,"ret": 664},{"kind": 18,"name": "fn(*std.mutex.Mutex) std.mutex.Held","generic": false,"ret": 665,"args": [666]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), u32, []u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,397,395]},{"kind": 18,"name": "fn(std.mutex.Held) void","generic": false,"ret": 431,"args": [665]},{"kind": 18,"name": "fn([]const u16, usize, []const u16) ?usize","generic": false,"ret": 460,"args": [609,398,609]},{"kind": 18,"name": "fn(u8, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [384,596,482,39]},{"kind": 18,"name": "fn(i32, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [471,596,482,39]},{"kind": 18,"name": "fn(u32, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [397,596,482,39]},{"kind": 18,"name": "fn(usize) void","generic": false,"ret": 431,"args": [398]},{"kind": 18,"name": "fn() std.os.SchedYieldError!void","generic": false,"ret": 667},{"kind": 18,"name": "fn(u64) void","generic": false,"ret": 431,"args": [399]},{"kind": 18,"name": "fn(*std.parker.WindowsParker, *const u32, u32) void","generic": false,"ret": 431,"args": [668,669,397]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, u32, []u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,397,395]},{"kind": 18,"name": "fn(*std.parker.WindowsParker, *const u32) void","generic": false,"ret": 431,"args": [668,669]},{"kind": 18,"name": "fn([]const u16, []const u16) bool","generic": false,"ret": 382,"args": [609,609]},{"kind": 18,"name": "fn(usize, u8, bool, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [398,384,382,596,482,39]},{"kind": 18,"name": "fn(u64, u8, bool, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [399,384,382,596,482,39]},{"kind": 18,"name": "fn(u64) std.math.error:719:40!u32","generic": false,"ret": 670,"args": [399]},{"kind": 18,"name": "fn() std.spinlock.Backoff","generic": false,"ret": 671},{"kind": 18,"name": "fn() ?*c_void","generic": false,"ret": 600},{"kind": 18,"name": "fn(*std.spinlock.Backoff) void","generic": false,"ret": 431,"args": [672]},{"kind": 18,"name": "fn([]u8, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [395,596,482,39,398]},{"kind": 18,"name": "fn(u8, u8, bool, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [384,384,382,596,482,39]},{"kind": 18,"name": "fn(i32, u8, bool, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [471,384,382,596,482,39]},{"kind": 18,"name": "fn(u32, u8, bool, std.fmt.FormatOptions, *std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void) std.os.WriteError!void","generic": false,"ret": 483,"args": [397,384,382,596,482,39]},{"kind": 18,"name": "fn(*std.lazy_init.LazyInit(*c_void)) ?**c_void","generic": false,"ret": 673,"args": [674]},{"kind": 18,"name": "fn(*std.lazy_init.LazyInit(*c_void)) void","generic": false,"ret": 431,"args": [674]},{"kind": 18,"name": "fn(u8, bool) u8","generic": false,"ret": 384,"args": [384,382]},{"kind": 18,"name": "fn([]u8, u8) void","generic": false,"ret": 431,"args": [395,384]},{"kind": 18,"name": "fn(*std.macho.nlist_64) u32","generic": false,"ret": 397,"args": [422]},{"kind": 18,"name": "fn(*std.macho.nlist_64, *std.macho.nlist_64) bool","generic": false,"ret": 382,"args": [422,422]},{"kind": 18,"name": "fn() fn(usize) u32","generic": false,"ret": 326},{"kind": 18,"name": "fn(usize) u32","generic": false,"ret": 397,"args": [398]},{"kind": 18,"name": "fn(u64) std.hash.wyhash.Wyhash","generic": false,"ret": 675,"args": [399]},{"kind": 18,"name": "fn(*std.hash.wyhash.Wyhash, usize) void","generic": false,"ret": 431,"args": [676,398]},{"kind": 18,"name": "fn(*std.hash.wyhash.Wyhash) u64","generic": false,"ret": 399,"args": [676]},{"kind": 18,"name": "fn(u64) std.hash.wyhash.WyhashStateless","generic": false,"ret": 677,"args": [399]},{"kind": 18,"name": "fn(*std.hash.wyhash.WyhashStateless, []const u8) u64","generic": false,"ret": 399,"args": [678,385]},{"kind": 18,"name": "fn(*std.hash.wyhash.Wyhash, []const u8) void","generic": false,"ret": 431,"args": [676,385]},{"kind": 18,"name": "fn(*const usize) *align(8) const [8]u8","generic": false,"ret": 451,"args": [402]},{"kind": 18,"name": "fn(u64, u64, u64) u64","generic": false,"ret": 399,"args": [399,399,399]},{"kind": 18,"name": "fn([]const u8) u64","generic": false,"ret": 399,"args": [385]},{"kind": 18,"name": "fn(u64, u64) u64","generic": false,"ret": 399,"args": [399,399]},{"kind": 18,"name": "fn(*std.hash.wyhash.WyhashStateless, []const u8) void","generic": false,"ret": 431,"args": [678,385]},{"kind": 18,"name": "fn([]const u8) u8","generic": false,"ret": 384,"args": [385]},{"kind": 18,"name": "fn([]const u8) u32","generic": false,"ret": 397,"args": [385]},{"kind": 18,"name": "fn(u64, u64) u128","generic": false,"ret": 679,"args": [399,399]},{"kind": 18,"name": "fn(*const [1]u8) u8","generic": false,"ret": 384,"args": [680]},{"kind": 18,"name": "fn(*const [8]u8) u64","generic": false,"ret": 399,"args": [681]},{"kind": 18,"name": "extern fn() noreturn","generic": false,"ret": 456},{"kind": 18,"name": "fn() u8","generic": false,"ret": 384},{"kind": 18,"name": "stdcallcc fn(*std.os.windows.bits.EXCEPTION_POINTERS) c_long","generic": false,"ret": 682,"args": [683]},{"kind": 18,"name": "fn([]const u8) void","generic": false,"ret": 431,"args": [385]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize) noreturn","generic": false,"ret": 456,"args": [459,460]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace, ?usize, usize) noreturn","generic": false,"ret": 456,"args": [459,460,398]},{"kind": 18,"name": "fn(*std.progress.Progress, []const u8, ?usize) @typeOf(std.progress.Progress.start).ReturnType.ErrorSet!*std.progress.Node","generic": false,"ret": 684,"args": [685,385,460]},{"kind": 18,"name": "fn() std.time.Error!std.time.Timer","generic": false,"ret": 686},{"kind": 18,"name": "fn(*std.progress.Node, []const u8, ?usize) std.progress.Node","generic": false,"ret": 687,"args": [688,385,460]},{"kind": 18,"name": "fn(*std.progress.Node) void","generic": false,"ret": 431,"args": [688]},{"kind": 18,"name": "fn(*std.progress.Progress) void","generic": false,"ret": 431,"args": [685]},{"kind": 18,"name": "fn(usize, usize, []const u8) void","generic": false,"ret": 431,"args": [398,398,385]},{"kind": 18,"name": "fn(*std.progress.Progress, []const u8) void","generic": false,"ret": 431,"args": [685,385]},{"kind": 18,"name": "fn(usize, usize) void","generic": false,"ret": 431,"args": [398,398]},{"kind": 18,"name": "fn() u64","generic": false,"ret": 399},{"kind": 18,"name": "fn([]u8, usize) std.fmt.BufPrintError![]u8","generic": false,"ret": 689,"args": [395,398]},{"kind": 18,"name": "fn([]u8) std.fmt.BufPrintError![]u8","generic": false,"ret": 689,"args": [395]},{"kind": 18,"name": "fn(*std.progress.Progress, *usize) void","generic": false,"ret": 431,"args": [685,557]},{"kind": 18,"name": "fn(*std.progress.Progress, *usize, []const u8) void","generic": false,"ret": 431,"args": [685,557,385]},{"kind": 18,"name": "fn(*std.progress.Progress, *usize, usize, usize) void","generic": false,"ret": 431,"args": [685,557,398,398]},{"kind": 18,"name": "fn(*std.progress.Progress, *usize, usize) void","generic": false,"ret": 431,"args": [685,557,398]},{"kind": 18,"name": "fn(*std.time.Timer) u64","generic": false,"ret": 399,"args": [690]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), usize, usize, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,398,398,385]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), usize, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,398,398]},{"kind": 18,"name": "fn(*std.fmt.BufPrintContext, []const u8) @typeOf(std.fmt.bufPrintWrite).ReturnType.ErrorSet!void","generic": false,"ret": 691,"args": [692,385]},{"kind": 18,"name": "fn(*std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void, usize) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [692,694,398]},{"kind": 18,"name": "fn(*std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [692,694]},{"kind": 18,"name": "fn([]u8, []const u8) std.fmt.BufPrintError![]u8","generic": false,"ret": 689,"args": [395,385]},{"kind": 18,"name": "fn([]u8, usize, usize) std.fmt.BufPrintError![]u8","generic": false,"ret": 689,"args": [395,398,398]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize, usize, []const u8) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,398,398,385]},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError), fn(*std.io.out_stream.OutStream(std.os.WriteError), []const u8) std.os.WriteError!void, usize, usize) std.os.WriteError!void","generic": false,"ret": 483,"args": [482,39,398,398]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, *std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void, usize) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [398,596,692,694,398]},{"kind": 18,"name": "fn(*std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void, []const u8) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [692,694,385]},{"kind": 18,"name": "fn(*std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void, usize, usize) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [692,694,398,398]},{"kind": 18,"name": "fn(usize, std.fmt.FormatOptions, *std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [398,596,692,694]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, *std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void, usize) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [385,596,692,694,398]},{"kind": 18,"name": "fn([]const u8, std.fmt.FormatOptions, *std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [385,596,692,694]},{"kind": 18,"name": "fn(usize, u8, bool, std.fmt.FormatOptions, *std.fmt.BufPrintContext, fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [398,384,382,596,692,694]},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 2},{"kind": 0},{"kind": 4,"u": 8},{"kind": 6,"len": 2,"const": true,"elem": 384},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.array_list.AlignedArrayList(std.coff.Section,null)","src": 301,"pubDecls": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"privDecls": [30],"fields": [517,398,462]},{"kind": 8,"name": "std.coff.Section","src": 302,"pubDecls": [],"privDecls": [],"fields": [696]},{"kind": 8,"name": "std.array_list.AlignedArrayList(std.debug.Module,null)","src": 301,"pubDecls": [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"privDecls": [61],"fields": [574,398,462]},{"kind": 8,"name": "std.debug.Module","src": 303,"pubDecls": [],"privDecls": [],"fields": [697,395,395,382,395,395,460]},{"kind": 8,"name": "std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null)","src": 301,"pubDecls": [62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"privDecls": [92],"fields": [580,398,462]},{"kind": 8,"name": "std.pdb.SectionContribEntry","src": 304,"pubDecls": [],"privDecls": [],"fields": [427,698,397,397,397,427,698,397,397]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.linked_list.SinglyLinkedList([]u8)","src": 305,"pubDecls": [93,94,95,96,97,98,99,100,101],"privDecls": [102],"fields": [701]},{"kind": 6,"len": 2,"elem": 384},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 4,"u": 32},{"kind": 4,"u": 64},{"kind": 4,"u": 64},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 6,"const": true,"elem": 398},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.lazy_init.LazyInit(*c_void)","src": 306,"pubDecls": [103,104],"privDecls": [105,106,107,108],"fields": [703,405]},{"kind": 6,"elem": 705},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 13,"child": 465},{"kind": 18,"name": "fn(var,var)var","generic": true,"args": [null,null]},{"kind": 10,"name": "comptime_int"},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(@TagType(std.builtin.TypeInfo))var","generic": true,"args": [413]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 16,"name": "@TagType(std.builtin.TypeInfo)","src": 307,"pubDecls": [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.atomic.queue.Queue(anyframe)","src": 308,"pubDecls": [130,131,132,133,134,135,136,137,138,139],"privDecls": [],"fields": [730,730,663]},{"kind": 23,"name": "anyframe"},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.atomic.stack.Stack(std.event.loop.EventFd)","src": 309,"pubDecls": [140,141,142,143,144,145,146],"privDecls": [147],"fields": [733,384]},{"kind": 8,"name": "std.event.loop.EventFd","src": 310,"pubDecls": [],"privDecls": [],"fields": [734,398]},{"kind": 18,"name": "fn(type,var,var,var)var","generic": true,"args": [383,null,null,null]},{"kind": 8,"name": "std.hash_map.HashMap(*std.macho.nlist_64,std.debug.MachOFile,std.hash_map.getHashPtrAddrFn(*std.macho.nlist_64).hash,std.hash_map.getTrivialEqlFn(*std.macho.nlist_64).eql)","src": 311,"pubDecls": [148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"privDecls": [168,169,170,171,172,173,174,175,176,177,178,179],"fields": [738,398,398,462,397]},{"kind": 6,"elem": 739},{"kind": 8,"name": "std.debug.MachOFile","src": 312,"pubDecls": [],"privDecls": [],"fields": [740,741,741]},{"kind": 8,"name": "std.array_list.AlignedArrayList(usize,null)","src": 301,"pubDecls": [180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"privDecls": [210],"fields": [556,398,462]},{"kind": 8,"name": "std.array_list.AlignedArrayList(u8,null)","src": 301,"pubDecls": [211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"privDecls": [241],"fields": [395,398,462]},{"kind": 8,"name": "std.array_list.AlignedArrayList(u16,null)","src": 301,"pubDecls": [242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"privDecls": [272],"fields": [608,398,462]},{"kind": 4,"u": 16},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 1,"name": "void"},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 4,"u": 5},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet)","src": 313,"pubDecls": [273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"privDecls": [294],"fields": [108]},{"kind": 15,"name": "@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet","fn": 57,"errors": [0,1,2,3,4,5,6,7,8]},{"kind": 8,"name": "std.io.in_stream.InStream(std.os.ReadError)","src": 313,"pubDecls": [295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"privDecls": [316],"fields": [66]},{"kind": 15,"name": "std.os.ReadError","errors": [0,1,2,3,4,5,6,7]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.linked_list.TailQueue(anyframe)","src": 314,"pubDecls": [317,318,319,320,321,322,323,324,325,326,327,328,329],"privDecls": [330],"fields": [730,730,398]},{"kind": 18,"name": "fn(SparseSetConfig)var","generic": true,"args": [445]},{"kind": 8,"name": "SparseSet((struct SparseSetConfig constant))","src": 315,"pubDecls": [331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"privDecls": [356],"fields": [462,475,395,476,384,384,397]},{"kind": 8,"name": "SparseSetConfig","src": 316,"pubDecls": [],"privDecls": [],"fields": [383,383,383,747,748,749]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.io.out_stream.OutStream(std.os.WriteError)","src": 317,"pubDecls": [357,358,359,360,361,362,363,364,365,366,367],"privDecls": [368],"fields": [39]},{"kind": 15,"name": "std.os.WriteError","errors": [9,10,11,12,13,14,15,16,17,7]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 6,"align": 8,"const": true,"elem": 752},{"kind": 8,"name": "(root)","src": 318,"pubDecls": [369,370,371,372,373],"privDecls": [374,375,376],"file": 0},{"kind": 8,"name": "builtin","src": 319,"pubDecls": [377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"privDecls": [412],"file": 1},{"kind": 8,"name": "std","src": 320,"pubDecls": [413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"privDecls": [],"file": 2},{"kind": 8,"name": "std.special","src": 321,"pubDecls": [479],"privDecls": [480,481,482,483],"file": 3},{"kind": 3,"name": "noreturn"},{"kind": 13,"child": 789},{"kind": 14,"err": 790,"payload": 431},{"kind": 13,"child": 791},{"kind": 13,"child": 398},{"kind": 14,"err": 792,"payload": 444},{"kind": 6,"elem": 753},{"kind": 8,"name": "std.heap.ThreadSafeFixedBufferAllocator","src": 322,"pubDecls": [484],"privDecls": [485,486,487],"fields": [753,398,395]},{"kind": 14,"err": 793,"payload": 395},{"kind": 4,"u": 29},{"kind": 14,"err": 794,"payload": 395},{"kind": 14,"err": 795,"payload": 384},{"kind": 6,"elem": 444},{"kind": 14,"err": 796,"payload": 382},{"kind": 14,"err": 797,"payload": 384},{"kind": 4,"i": 32},{"kind": 14,"err": 798,"payload": 431},{"kind": 14,"err": 799,"payload": 431},{"kind": 6,"elem": 384},{"kind": 6,"len": 2,"elem": 397},{"kind": 6,"len": 2,"elem": 471},{"kind": 14,"err": 800,"payload": 384},{"kind": 14,"err": 801,"payload": 479},{"kind": 6,"elem": 471},{"kind": 14,"err": 802,"payload": 397},{"kind": 14,"err": 803,"payload": 479},{"kind": 6,"elem": 447},{"kind": 14,"err": 448,"payload": 431},{"kind": 8,"name": "std.builtin.StackTrace","src": 323,"pubDecls": [],"privDecls": [],"fields": [398,556]},{"kind": 14,"err": 804,"payload": 475},{"kind": 14,"err": 804,"payload": 395},{"kind": 14,"err": 804,"payload": 476},{"kind": 8,"name": "std.fs.file.File","src": 324,"pubDecls": [488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532],"privDecls": [],"fields": [405]},{"kind": 8,"name": "std.fs.file.OutStream","src": 325,"pubDecls": [533,534],"privDecls": [535],"fields": [488,447]},{"kind": 14,"err": 438,"payload": 398},{"kind": 6,"elem": 542},{"kind": 14,"err": 809,"payload": 584},{"kind": 14,"err": 810,"payload": 811},{"kind": 14,"err": 812,"payload": 811},{"kind": 14,"err": 813,"payload": 488},{"kind": 14,"err": 804,"payload": 499},{"kind": 8,"name": "std.coff.Coff","src": 326,"pubDecls": [536,537,538,539,540],"privDecls": [541],"fields": [488,462,815,816,387,817,397]},{"kind": 14,"err": 818,"payload": 431},{"kind": 6,"elem": 497},{"kind": 8,"name": "std.fs.file.InStream","src": 327,"pubDecls": [542,543],"privDecls": [544],"fields": [488,439]},{"kind": 14,"err": 819,"payload": 431},{"kind": 6,"elem": 439},{"kind": 14,"err": 440,"payload": 398},{"kind": 14,"err": 807,"payload": 431},{"kind": 14,"err": 820,"payload": 397},{"kind": 6,"const": true,"elem": 821},{"kind": 14,"err": 822,"payload": 427},{"kind": 6,"const": true,"elem": 698},{"kind": 14,"err": 823,"payload": 431},{"kind": 6,"elem": 500},{"kind": 4,"i": 64},{"kind": 14,"err": 824,"payload": 398},{"kind": 14,"err": 825,"payload": 431},{"kind": 14,"err": 826,"payload": 431},{"kind": 6,"elem": 387},{"kind": 14,"err": 804,"payload": 517},{"kind": 6,"len": 2,"elem": 388},{"kind": 14,"err": 827,"payload": 431},{"kind": 14,"err": 828,"payload": 520},{"kind": 6,"elem": 388},{"kind": 13,"child": 520},{"kind": 14,"err": 829,"payload": 830},{"kind": 14,"err": 831,"payload": 384},{"kind": 14,"err": 832,"payload": 395},{"kind": 6,"len": 2,"const": true,"elem": 385},{"kind": 14,"err": 833,"payload": 395},{"kind": 14,"err": 834,"payload": 395},{"kind": 8,"name": "std.fs.path.WindowsPath","src": 328,"pubDecls": [545],"privDecls": [],"fields": [382,529,385]},{"kind": 16,"name": "std.fs.path.Kind","src": 329,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 8,"name": "std.mem.TokenIterator","src": 330,"pubDecls": [546,547],"privDecls": [548],"fields": [385,385,398]},{"kind": 13,"child": 385},{"kind": 6,"elem": 530},{"kind": 14,"err": 836,"payload": 395},{"kind": 14,"err": 837,"payload": 395},{"kind": 14,"err": 838,"payload": 431},{"kind": 6,"elem": 839},{"kind": 14,"err": 806,"payload": 488},{"kind": 14,"err": 840,"payload": 431},{"kind": 6,"elem": 841},{"kind": 14,"err": 842,"payload": 843},{"kind": 14,"err": 808,"payload": 399},{"kind": 8,"name": "std.pdb.MsfStream","src": 331,"pubDecls": [549,550],"privDecls": [551,552,553,554,555,556,557,558],"fields": [488,399,475,397,437]},{"kind": 14,"err": 844,"payload": 397},{"kind": 6,"elem": 437},{"kind": 14,"err": 845,"payload": 431},{"kind": 14,"err": 804,"payload": 846},{"kind": 13,"child": 491},{"kind": 16,"name": "std.pdb.StreamType","src": 332,"pubDecls": [],"privDecls": [],"fields": [1,2,3,4]},{"kind": 14,"err": 847,"payload": 848},{"kind": 14,"err": 849,"payload": 556},{"kind": 14,"err": 850,"payload": 431},{"kind": 6,"elem": 424},{"kind": 14,"err": 851,"payload": 557},{"kind": 14,"err": 852,"payload": 431},{"kind": 14,"err": 804,"payload": 556},{"kind": 6,"len": 2,"elem": 398},{"kind": 6,"elem": 398},{"kind": 14,"err": 804,"payload": 853},{"kind": 6,"len": 1,"elem": 384},{"kind": 14,"err": 854,"payload": 855},{"kind": 14,"err": 856,"payload": 697},{"kind": 14,"err": 857,"payload": 395},{"kind": 14,"err": 858,"payload": 384},{"kind": 14,"err": 859,"payload": 431},{"kind": 6,"elem": 425},{"kind": 14,"err": 860,"payload": 474},{"kind": 14,"err": 861,"payload": 431},{"kind": 14,"err": 862,"payload": 431},{"kind": 14,"err": 863,"payload": 431},{"kind": 6,"elem": 389},{"kind": 14,"err": 864,"payload": 575},{"kind": 14,"err": 865,"payload": 431},{"kind": 14,"err": 804,"payload": 574},{"kind": 6,"len": 2,"elem": 390},{"kind": 6,"elem": 390},{"kind": 14,"err": 866,"payload": 581},{"kind": 6,"elem": 391},{"kind": 14,"err": 867,"payload": 431},{"kind": 14,"err": 804,"payload": 580},{"kind": 6,"len": 2,"elem": 392},{"kind": 6,"elem": 392},{"kind": 14,"err": 868,"payload": 392},{"kind": 14,"err": 869,"payload": 431},{"kind": 6,"elem": 811},{"kind": 14,"err": 870,"payload": 431},{"kind": 14,"err": 871,"payload": 431},{"kind": 16,"name": "std.debug.TtyColor","src": 333,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6]},{"kind": 14,"err": 872,"payload": 431},{"kind": 6,"len": 1,"const": true,"elem": 384},{"kind": 14,"err": 873,"payload": 431},{"kind": 14,"err": 874,"payload": 431},{"kind": 8,"name": "std.debug.LineInfo","src": 334,"pubDecls": [],"privDecls": [559],"fields": [399,399,385,875]},{"kind": 14,"err": 876,"payload": 431},{"kind": 14,"err": 877,"payload": 431},{"kind": 6,"elem": 878},{"kind": 8,"name": "std.fmt.FormatOptions","src": 335,"pubDecls": [],"privDecls": [],"fields": [460,460,879,384]},{"kind": 8,"name": "std.heap.ArenaAllocator","src": 336,"pubDecls": [560,561],"privDecls": [562,563,564,565,566],"fields": [753,462,394,398]},{"kind": 14,"err": 880,"payload": 395},{"kind": 14,"err": 881,"payload": 395},{"kind": 13,"child": 405},{"kind": 14,"err": 882,"payload": 608},{"kind": 6,"elem": 883},{"kind": 6,"len": 1,"const": true,"elem": 427},{"kind": 14,"err": 804,"payload": 884},{"kind": 14,"err": 885,"payload": 395},{"kind": 14,"err": 886,"payload": 887},{"kind": 14,"err": 888,"payload": 887},{"kind": 6,"len": 2,"elem": 427},{"kind": 6,"len": 2,"const": true,"elem": 427},{"kind": 14,"err": 889,"payload": 398},{"kind": 14,"err": 890,"payload": 397},{"kind": 14,"err": 891,"payload": 399},{"kind": 8,"name": "std.heap.FixedBufferAllocator","src": 337,"pubDecls": [567,568],"privDecls": [569,570,571],"fields": [753,398,395]},{"kind": 14,"err": 892,"payload": 395},{"kind": 14,"err": 893,"payload": 431},{"kind": 14,"err": 894,"payload": 398},{"kind": 14,"err": 895,"payload": 395},{"kind": 14,"err": 896,"payload": 395},{"kind": 14,"err": 897,"payload": 623},{"kind": 6,"elem": 597},{"kind": 14,"err": 804,"payload": 898},{"kind": 6,"elem": 394},{"kind": 6,"elem": 700},{"kind": 14,"err": 899,"payload": 405},{"kind": 14,"err": 900,"payload": 608},{"kind": 13,"child": 901},{"kind": 6,"len": 1,"elem": 427},{"kind": 14,"err": 902,"payload": 405},{"kind": 13,"child": 903},{"kind": 14,"err": 904,"payload": 431},{"kind": 15,"name": "std.os.UnexpectedError","errors": [7]},{"kind": 8,"name": "std.unicode.Utf16LeIterator","src": 338,"pubDecls": [572,573],"privDecls": [],"fields": [385,398]},{"kind": 14,"err": 905,"payload": 649},{"kind": 6,"elem": 632},{"kind": 14,"err": 906,"payload": 907},{"kind": 14,"err": 908,"payload": 907},{"kind": 14,"err": 909,"payload": 397},{"kind": 14,"err": 910,"payload": 397},{"kind": 14,"err": 911,"payload": 397},{"kind": 14,"err": 912,"payload": 395},{"kind": 14,"err": 913,"payload": 395},{"kind": 14,"err": 914,"payload": 608},{"kind": 14,"err": 915,"payload": 431},{"kind": 6,"elem": 426},{"kind": 14,"err": 804,"payload": 608},{"kind": 14,"err": 916,"payload": 647},{"kind": 8,"name": "std.unicode.Utf8View","src": 339,"pubDecls": [574,575,576,577],"privDecls": [],"fields": [385]},{"kind": 8,"name": "std.unicode.Utf8Iterator","src": 340,"pubDecls": [578,579],"privDecls": [],"fields": [385,398]},{"kind": 13,"child": 397},{"kind": 6,"elem": 648},{"kind": 14,"err": 917,"payload": 431},{"kind": 14,"err": 918,"payload": 653},{"kind": 6,"elem": 427},{"kind": 14,"err": 919,"payload": 397},{"kind": 14,"err": 920,"payload": 397},{"kind": 14,"err": 921,"payload": 395},{"kind": 14,"err": 922,"payload": 431},{"kind": 14,"err": 923,"payload": 398},{"kind": 4,"u": 16},{"kind": 14,"err": 924,"payload": 398},{"kind": 14,"err": 925,"payload": 907},{"kind": 14,"err": 926,"payload": 431},{"kind": 8,"name": "std.mutex.Mutex","src": 341,"pubDecls": [580,581,582,583],"privDecls": [584,585,586,587],"fields": [928,664]},{"kind": 8,"name": "std.parker.WindowsParker","src": 342,"pubDecls": [588,589,590,591],"privDecls": [592,593],"fields": [397]},{"kind": 8,"name": "std.mutex.Held","src": 343,"pubDecls": [594],"privDecls": [],"fields": [666]},{"kind": 6,"elem": 663},{"kind": 14,"err": 930,"payload": 431},{"kind": 6,"elem": 664},{"kind": 6,"const": true,"elem": 397},{"kind": 14,"err": 931,"payload": 397},{"kind": 8,"name": "std.spinlock.Backoff","src": 344,"pubDecls": [595,596],"privDecls": [],"fields": [398]},{"kind": 6,"elem": 671},{"kind": 13,"child": 704},{"kind": 6,"elem": 404},{"kind": 8,"name": "std.hash.wyhash.Wyhash","src": 345,"pubDecls": [597,598,599,600],"privDecls": [],"fields": [677,934,398]},{"kind": 6,"elem": 675},{"kind": 8,"name": "std.hash.wyhash.WyhashStateless","src": 346,"pubDecls": [601,602,603,604],"privDecls": [605],"fields": [399,398]},{"kind": 6,"elem": 677},{"kind": 4,"u": 128},{"kind": 6,"const": true,"elem": 935},{"kind": 6,"const": true,"elem": 752},{"kind": 4,"i": 32},{"kind": 6,"elem": 936},{"kind": 14,"err": 937,"payload": 688},{"kind": 6,"elem": 784},{"kind": 14,"err": 938,"payload": 939},{"kind": 8,"name": "std.progress.Node","src": 347,"pubDecls": [606,607,608,609],"privDecls": [],"fields": [685,941,398,385,941,460]},{"kind": 6,"elem": 687},{"kind": 14,"err": 942,"payload": 395},{"kind": 6,"elem": 939},{"kind": 14,"err": 943,"payload": 431},{"kind": 6,"elem": 944},{"kind": 14,"err": 942,"payload": 431},{"kind": 18,"name": "fn(*std.fmt.BufPrintContext, []const u8) std.fmt.BufPrintError!void","generic": false,"ret": 693,"args": [692,385]},{"kind": 8,"name": "std.array_list","src": 348,"pubDecls": [610,611],"privDecls": [612,613,614,615,616,617,618],"file": 4},{"kind": 8,"name": "std.coff.SectionHeader","src": 349,"pubDecls": [],"privDecls": [619],"fields": [752,945,397,397,397,397,397,427,427,397]},{"kind": 8,"name": "std.pdb.ModInfo","src": 350,"pubDecls": [],"privDecls": [],"fields": [397,392,427,427,397,397,397,427,698,397,397,397]},{"kind": 7,"len": 2,"elem": 384},{"kind": 8,"name": "std.linked_list","src": 351,"pubDecls": [620,621],"privDecls": [622,623,624,625,626,627],"file": 5},{"kind": 8,"name": "std.linked_list.Node","src": 352,"pubDecls": [628,629,630],"privDecls": [],"fields": [701,395]},{"kind": 13,"child": 623},{"kind": 8,"name": "std.lazy_init","src": 353,"pubDecls": [631],"privDecls": [632,633,634,635,636,637],"file": 6},{"kind": 16,"name": "std.lazy_init.State","src": 354,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 6,"elem": 405},{"kind": 21,"name": "c_void"},{"kind": 8,"name": "std.builtin","src": 355,"pubDecls": [377,379,378,381,380,382,383,386,384,385,387,388,389,391,390,392,393,394,395,397,396,398,399,400,401,402,403,404,406,407,405,408,409,410,411],"privDecls": [638,639],"file": 7},{"kind": 8,"name": "std.builtin.Struct","src": 356,"pubDecls": [],"privDecls": [],"fields": [712,947,948]},{"kind": 8,"name": "std.builtin.Array","src": 357,"pubDecls": [],"privDecls": [],"fields": [409,383]},{"kind": 8,"name": "std.builtin.ErrorUnion","src": 358,"pubDecls": [],"privDecls": [],"fields": [383,383]},{"kind": 8,"name": "std.builtin.Pointer","src": 359,"pubDecls": [640],"privDecls": [],"fields": [949,382,382,409,383,382]},{"kind": 8,"name": "std.builtin.EnumField","src": 360,"pubDecls": [],"privDecls": [],"fields": [385,409]},{"kind": 16,"name": "std.builtin.ContainerLayout","src": 361,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 8,"name": "std.builtin.Declaration","src": 362,"pubDecls": [641],"privDecls": [],"fields": [385,382,950]},{"kind": 8,"name": "std.builtin.Union","src": 363,"pubDecls": [],"privDecls": [],"fields": [712,951,952,948]},{"kind": 13,"child": 953},{"kind": 8,"name": "std.builtin.Optional","src": 364,"pubDecls": [],"privDecls": [],"fields": [383]},{"kind": 8,"name": "std.builtin.Enum","src": 365,"pubDecls": [],"privDecls": [],"fields": [712,383,954,948]},{"kind": 16,"name": "std.builtin.CallingConvention","src": 366,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5]},{"kind": 8,"name": "std.builtin.Vector","src": 367,"pubDecls": [],"privDecls": [],"fields": [409,383]},{"kind": 8,"name": "std.builtin.Float","src": 368,"pubDecls": [],"privDecls": [],"fields": [409]},{"kind": 8,"name": "std.builtin.UnionField","src": 369,"pubDecls": [],"privDecls": [],"fields": [385,955,383]},{"kind": 8,"name": "std.builtin.StructField","src": 370,"pubDecls": [],"privDecls": [],"fields": [385,956,383]},{"kind": 8,"name": "std.builtin.AnyFrame","src": 371,"pubDecls": [],"privDecls": [],"fields": [951]},{"kind": 8,"name": "std.builtin.Error","src": 372,"pubDecls": [],"privDecls": [],"fields": [385,409]},{"kind": 8,"name": "std.builtin.Fn","src": 373,"pubDecls": [],"privDecls": [],"fields": [718,382,382,951,957]},{"kind": 8,"name": "std.builtin.FnArg","src": 374,"pubDecls": [],"privDecls": [],"fields": [382,382,951]},{"kind": 8,"name": "std.builtin.Int","src": 375,"pubDecls": [],"privDecls": [],"fields": [382,409]},{"kind": 8,"name": "std.atomic.queue","src": 376,"pubDecls": [642],"privDecls": [643,644,645,646,647,648,649,650,651,652,653],"file": 8},{"kind": 8,"name": "std.linked_list.Node","src": 377,"pubDecls": [654],"privDecls": [],"fields": [730,730,416]},{"kind": 13,"child": 958},{"kind": 8,"name": "std.atomic.stack","src": 378,"pubDecls": [655],"privDecls": [656,657,658,659,660,661,662,663,664,665],"file": 9},{"kind": 8,"name": "std.atomic.stack.Node","src": 379,"pubDecls": [],"privDecls": [],"fields": [733,419]},{"kind": 13,"child": 959},{"kind": 8,"name": "std.event.loop.ResumeNode","src": 380,"pubDecls": [666,667,668,669,670],"privDecls": [671,672],"fields": [961,416,962]},{"kind": 8,"name": "std.hash_map","src": 381,"pubDecls": [673,674,675,676,677,678,679,680,681,682],"privDecls": [683,684,685,686,687,688,689,690,691,692,693,694,695],"file": 10},{"kind": 8,"name": "std.hash_map.KV","src": 382,"pubDecls": [],"privDecls": [],"fields": [422,423]},{"kind": 8,"name": "std.hash_map.Entry","src": 383,"pubDecls": [],"privDecls": [],"fields": [382,398,736]},{"kind": 6,"len": 2,"elem": 737},{"kind": 8,"name": "std.macho.nlist_64","src": 384,"pubDecls": [],"privDecls": [],"fields": [397,384,384,427,399]},{"kind": 6,"len": 2,"align": 4,"const": true,"elem": 384},{"kind": 13,"child": 965},{"kind": 8,"name": "std.io.in_stream","src": 385,"pubDecls": [696,697,698],"privDecls": [699,700,701,702,703,704,705],"file": 11},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet),type)var","generic": true,"args": [544,383]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet),type)var","generic": true,"args": [544,383]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError),type)var","generic": true,"args": [502,383]},{"kind": 18,"name": "fn(*std.io.in_stream.InStream(std.os.ReadError),type)var","generic": true,"args": [502,383]},{"kind": 17,"name": "ValueLayout","src": 386,"pubDecls": [],"privDecls": [],"fields": [431,431]},{"kind": 17,"name": "ValueInitialization","src": 387,"pubDecls": [],"privDecls": [],"fields": [431,431]},{"kind": 17,"name": "AllowResize","src": 388,"pubDecls": [],"privDecls": [],"fields": [431,431]},{"kind": 8,"name": "std.io.out_stream","src": 389,"pubDecls": [706,707,708],"privDecls": [709,710,711,712],"file": 12},{"kind": 18,"name": "fn(*std.io.out_stream.OutStream(std.os.WriteError),[]const u8,var)var","generic": true,"args": [482,385,null]},{"kind": 7,"len": 8,"elem": 384},{"kind": 8,"name": "std.mem.Allocator","src": 390,"pubDecls": [713,714,715,716,717,718,719,720,721,722],"privDecls": [],"fields": [974,9]},{"kind": 6,"len": 2,"const": true,"elem": 764},{"kind": 16,"name": "std.builtin.AtomicRmwOp","src": 391,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8]},{"kind": 16,"name": "@TagType(std.target.Arch)","src": 392,"pubDecls": [723,724,725,726],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]},{"kind": 16,"name": "std.builtin.Endian","src": 393,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 16,"name": "std.builtin.Mode","src": 394,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 16,"name": "std.target.Os","src": 395,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]},{"kind": 16,"name": "std.builtin.AtomicOrder","src": 396,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5]},{"kind": 17,"name": "std.target.Arch","src": 392,"pubDecls": [723,724,725,726],"privDecls": [],"fields": [976,976,978,978,978,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,976,976,431,431,431,431,431,431,431,431,431,431,431,431,431,977,431,431,431,431,431,431]},{"kind": 16,"name": "std.builtin.GlobalLinkage","src": 397,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 17,"name": "std.builtin.TypeInfo","src": 307,"pubDecls": [109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"privDecls": [],"fields": [431,431,431,431,727,720,710,708,707,431,431,431,431,716,709,715,717,714,725,725,431,431,431,723,719,431]},{"kind": 8,"name": "builtin.TestFn","src": 398,"pubDecls": [],"privDecls": [],"fields": [385,1]},{"kind": 8,"name": "std.mem","src": 399,"pubDecls": [727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801],"privDecls": [802,803,804,805,806,807,808,809,810,811,812,813,814,815],"file": 13},{"kind": 8,"name": "std.math","src": 400,"pubDecls": [816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964],"privDecls": [965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980],"file": 14},{"kind": 8,"name": "std.thread.Thread","src": 401,"pubDecls": [981,982,983,984,985,986,987,988,989,990,991],"privDecls": [],"fields": [997]},{"kind": 8,"name": "std.os","src": 402,"pubDecls": [992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315],"privDecls": [1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326],"file": 15},{"kind": 8,"name": "std.debug","src": 403,"pubDecls": [1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363],"privDecls": [1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457],"file": 16},{"kind": 8,"name": "std.testing","src": 404,"pubDecls": [1458,1459,1460,1461],"privDecls": [1462,1463,1464],"file": 17},{"kind": 8,"name": "std.event","src": 405,"pubDecls": [1465,1466,1467,1468,1469,1470,1471,1472,1473],"privDecls": [],"file": 18},{"kind": 8,"name": "std.unicode","src": 406,"pubDecls": [1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488],"privDecls": [1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511],"file": 19},{"kind": 8,"name": "std.io","src": 407,"pubDecls": [1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546],"privDecls": [1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563],"file": 20},{"kind": 8,"name": "std.fmt","src": 408,"pubDecls": [1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588],"privDecls": [1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612],"file": 21},{"kind": 8,"name": "std.atomic","src": 409,"pubDecls": [1613,1614,1615],"privDecls": [],"file": 22},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 8,"name": "std.pdb","src": 410,"pubDecls": [1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637],"privDecls": [1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651],"file": 23},{"kind": 8,"name": "std.coff","src": 411,"pubDecls": [1652,1653,1654],"privDecls": [1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673],"file": 24},{"kind": 8,"name": "std.hash","src": 412,"pubDecls": [1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692],"privDecls": [1693,1694,1695,1696,1697],"file": 25},{"kind": 8,"name": "std.meta","src": 413,"pubDecls": [1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716],"privDecls": [1717,1718,1719,1720,1721,1722,1723,1724],"file": 26},{"kind": 8,"name": "std.fs","src": 414,"pubDecls": [1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766],"privDecls": [1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777],"file": 27},{"kind": 8,"name": "std.heap","src": 415,"pubDecls": [1778,1779,1780,1781,1782,1783,1784,1785,1786,1787],"privDecls": [1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811],"file": 28},{"kind": 8,"name": "std.time","src": 416,"pubDecls": [1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830],"privDecls": [1831,1832,1833,1834,1835,1836],"file": 29},{"kind": 8,"name": "std.progress.Progress","src": 417,"pubDecls": [1837,1838,1839,1840,1841],"privDecls": [1842],"fields": [1052,687,939,399,1053,399,399,382,398]},{"kind": 17,"name": "std.target.Target","src": 418,"pubDecls": [1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884],"privDecls": [1885],"fields": [431,1055]},{"kind": 8,"name": "std.spinlock.SpinLock","src": 419,"pubDecls": [1886,1887,1888,1889,1890],"privDecls": [],"fields": [384]},{"kind": 8,"name": "std.process","src": 420,"pubDecls": [1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909],"privDecls": [1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921],"file": 30},{"kind": 8,"name": "std.macho","src": 421,"pubDecls": [1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072],"privDecls": [2073],"file": 31},{"kind": 6,"elem": 484},{"kind": 15},{"kind": 6,"const": true,"elem": 484},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).init).ReturnType.ErrorSet","fn": 4,"errors": [18]},{"kind": 15,"name": "@typeOf(std.heap.ThreadSafeFixedBufferAllocator.realloc).ReturnType.ErrorSet","fn": 6,"errors": [18]},{"kind": 15,"name": "@typeOf(std.heap.ThreadSafeFixedBufferAllocator.alloc).ReturnType.ErrorSet","fn": 7,"errors": [18]},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).addOrError).ReturnType.ErrorSet","fn": 11,"errors": [19,20]},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).hasSparseOrError).ReturnType.ErrorSet","fn": 12,"errors": [20]},{"kind": 15,"name": "@typeOf(struct:226:40.addValueOrError).ReturnType.ErrorSet","fn": 16,"errors": [19,20]},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).removeOrError).ReturnType.ErrorSet","fn": 20,"errors": [21,20]},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).removeWithInfoOrError).ReturnType.ErrorSet","fn": 22,"errors": [21,20]},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).getBySparseOrError).ReturnType.ErrorSet","fn": 28,"errors": [20]},{"kind": 15,"name": "@typeOf(struct:389:40.getValueBySparseOrError).ReturnType.ErrorSet","fn": 30,"errors": [20]},{"kind": 15,"name": "@typeOf(SparseSet((struct SparseSetConfig constant)).getByDenseOrError).ReturnType.ErrorSet","fn": 33,"errors": [20]},{"kind": 15,"name": "@typeOf(struct:389:40.getValueByDenseOrError).ReturnType.ErrorSet","fn": 36,"errors": [20]},{"kind": 15,"name": "std.mem.Error","errors": [18]},{"kind": 8,"name": "std.fs.file","src": 422,"pubDecls": [2074],"privDecls": [2075,2076,2077,2078,2079,2080,2081,2082,2083,2084],"file": 32},{"kind": 15,"name": "std.fs.file.OpenError","errors": [22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]},{"kind": 15,"name": "std.os.SeekError","errors": [8,7]},{"kind": 15,"name": "std.fs.file.GetPosError","errors": [8,7,41]},{"kind": 15,"name": "@typeOf(std.debug.getSelfDebugInfo).ReturnType.ErrorSet","fn": 58,"errors": [42,43,44,45,46,47,48,18,49,8,7,41,50,51,0,2,3,4,5,6,22,23,24,25,26,27,28,29,31,32,33,34,36,38,39,40,52,53,54,55,56,57,58]},{"kind": 15,"name": "@typeOf(std.debug.openSelfDebugInfo).ReturnType.ErrorSet","fn": 59,"errors": [42,43,44,45,46,47,48,18,49,8,7,41,50,51,0,2,3,4,5,6,22,23,24,25,26,27,28,29,31,32,33,34,36,38,39,40,52,53,54,55,56,57,58]},{"kind": 8,"name": "std.debug.DebugInfo","src": 423,"pubDecls": [],"privDecls": [],"fields": [839,499,580,574]},{"kind": 15,"name": "@typeOf(std.debug.openSelfDebugInfoWindows).ReturnType.ErrorSet","fn": 61,"errors": [42,43,44,45,46,47,48,18,49,8,7,41,50,51,0,2,3,4,5,6,22,23,24,25,26,27,28,29,31,32,33,34,36,38,39,40,52,53,54,55,56,57,58]},{"kind": 15,"name": "std.fs.OpenSelfExeError","errors": [59,31,32,33,34,60,61,35,36,37,38,39,62,40,7,22,26,28,29,57,58]},{"kind": 18,"name": "fn(*std.coff.Coff,[]const u8)var","generic": true,"args": [499,385]},{"kind": 8,"name": "std.coff.CoffHeader","src": 424,"pubDecls": [],"privDecls": [],"fields": [427,427,397,397,397,427,427]},{"kind": 8,"name": "std.coff.OptionalHeader","src": 425,"pubDecls": [],"privDecls": [2085],"fields": [427,1060]},{"kind": 7,"len": 16,"elem": 384},{"kind": 15,"name": "@typeOf(std.coff.Coff.loadHeader).ReturnType.ErrorSet","fn": 66,"errors": [55,56,8,7,53,51,0,1,2,3,4,5,6]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(std.os.ReadError).readNoEof).ReturnType.ErrorSet","fn": 68,"errors": [51,0,1,2,3,4,5,6,7]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(std.os.ReadError).readIntLittle).ReturnType.ErrorSet","fn": 72,"errors": [51,0,1,2,3,4,5,6,7]},{"kind": 7,"len": 4,"elem": 384},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(std.os.ReadError).readIntLittle).ReturnType.ErrorSet","fn": 74,"errors": [51,0,1,2,3,4,5,6,7]},{"kind": 15,"name": "@typeOf(std.coff.Coff.loadOptionalHeader).ReturnType.ErrorSet","fn": 76,"errors": [56,8,7,53,51,0,1,2,3,4,5,6]},{"kind": 15,"name": "@typeOf(std.coff.Coff.getPdbPath).ReturnType.ErrorSet","fn": 78,"errors": [61,53,8,7,54,18,51,0,1,2,3,4,5,6]},{"kind": 15,"name": "@typeOf(std.coff.Coff.loadSections).ReturnType.ErrorSet","fn": 79,"errors": [18,51,0,1,2,3,4,5,6,7]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.coff.Section,null).ensureCapacity).ReturnType.ErrorSet","fn": 80,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.coff.Section,null).append).ReturnType.ErrorSet","fn": 83,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.coff.Section,null).addOne).ReturnType.ErrorSet","fn": 84,"errors": [18]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(std.os.ReadError).readStruct).ReturnType.ErrorSet","fn": 88,"errors": [51,0,1,2,3,4,5,6,7]},{"kind": 8,"name": "std.coff.DebugDirectoryEntry","src": 426,"pubDecls": [],"privDecls": [],"fields": [397,397,427,427,397,397,397,397]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(std.os.ReadError).readByte).ReturnType.ErrorSet","fn": 90,"errors": [51,0,1,2,3,4,5,6,7]},{"kind": 15,"name": "@typeOf(std.fs.path.resolve).ReturnType.ErrorSet","fn": 91,"errors": [18,63,52,7]},{"kind": 15,"name": "@typeOf(std.fs.path.resolveWindows).ReturnType.ErrorSet","fn": 92,"errors": [18,63,52,7]},{"kind": 15,"name": "@typeOf(std.process.getCwdAlloc).ReturnType.ErrorSet","fn": 93,"errors": [18,63,52,7]},{"kind": 8,"name": "std.fs.path","src": 427,"pubDecls": [2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116],"privDecls": [2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146],"file": 33},{"kind": 15,"name": "std.os.GetCwdError","errors": [63,52,7]},{"kind": 15,"name": "@typeOf(std.mem.dupe).ReturnType.ErrorSet","fn": 101,"errors": [18]},{"kind": 15,"name": "@typeOf(std.pdb.Pdb.openFile).ReturnType.ErrorSet","fn": 103,"errors": [47,48,18,49,8,7,41,50,51,0,2,3,4,5,6,22,23,24,25,26,27,28,29,31,32,33,34,36,38,39,40]},{"kind": 8,"name": "std.pdb.Pdb","src": 428,"pubDecls": [2147,2148,2149],"privDecls": [],"fields": [488,462,499,491,491,841]},{"kind": 15,"name": "@typeOf(std.pdb.Msf.openFile).ReturnType.ErrorSet","fn": 105,"errors": [47,48,18,49,8,7,41,50,51,0,2,3,4,5,6]},{"kind": 8,"name": "std.pdb.Msf","src": 429,"pubDecls": [],"privDecls": [2150],"fields": [542,846]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(std.os.ReadError).readStruct).ReturnType.ErrorSet","fn": 106,"errors": [51,0,1,2,3,4,5,6,7]},{"kind": 8,"name": "std.pdb.SuperBlock","src": 430,"pubDecls": [],"privDecls": [2151],"fields": [934,397,397,397,397,397,397]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readIntLittle).ReturnType.ErrorSet","fn": 110,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readNoEof).ReturnType.ErrorSet","fn": 111,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 6,"len": 2,"elem": 542},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet","fn": 117,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 8,"name": "std.debug.HashTableHeader","src": 431,"pubDecls": [],"privDecls": [2152],"fields": [397,397]},{"kind": 15,"name": "@typeOf(std.debug.readSparseBitVector).ReturnType.ErrorSet","fn": 119,"errors": [18,51,0,1,2,3,4,5,6,7,8]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(usize,null).append).ReturnType.ErrorSet","fn": 121,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(usize,null).addOne).ReturnType.ErrorSet","fn": 122,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(usize,null).ensureCapacity).ReturnType.ErrorSet","fn": 123,"errors": [18]},{"kind": 6,"len": 2,"elem": 1061},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet","fn": 131,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 8,"name": "std.pdb.DbiStreamHeader","src": 432,"pubDecls": [],"privDecls": [],"fields": [471,397,397,427,427,427,427,427,427,397,397,397,471,471,397,471,471,427,427,397]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet","fn": 133,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 15,"name": "@typeOf(std.pdb.MsfStream.readNullTermString).ReturnType.ErrorSet","fn": 134,"errors": [51,0,1,2,3,4,5,6,7,8,18]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readByte).ReturnType.ErrorSet","fn": 136,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u8,null).append).ReturnType.ErrorSet","fn": 138,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u8,null).addOne).ReturnType.ErrorSet","fn": 139,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u8,null).ensureCapacity).ReturnType.ErrorSet","fn": 140,"errors": [18]},{"kind": 15,"name": "@typeOf(std.pdb.MsfStream.seekBy).ReturnType.ErrorSet","fn": 144,"errors": [42]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.debug.Module,null).append).ReturnType.ErrorSet","fn": 145,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.debug.Module,null).addOne).ReturnType.ErrorSet","fn": 146,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.debug.Module,null).ensureCapacity).ReturnType.ErrorSet","fn": 147,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null).addOne).ReturnType.ErrorSet","fn": 153,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(std.pdb.SectionContribEntry,null).ensureCapacity).ReturnType.ErrorSet","fn": 154,"errors": [18]},{"kind": 15,"name": "@typeOf(std.io.in_stream.InStream(@typeOf(std.pdb.MsfStream.read).ReturnType.ErrorSet).readStruct).ReturnType.ErrorSet","fn": 158,"errors": [51,0,1,2,3,4,5,6,7,8]},{"kind": 15,"name": "@typeOf(std.debug.writeStackTrace).ReturnType.ErrorSet","fn": 162,"errors": [9,10,11,12,13,14,15,16,17,7,50,44,51,2,5,8,18,42,22,23,24,26,27,28,29,31,32,33,34,39,40,64]},{"kind": 15,"name": "@typeOf(std.debug.printSourceAtAddress).ReturnType.ErrorSet","fn": 163,"errors": [9,10,11,12,13,14,15,16,17,7,50,44,51,2,5,8,18,42,22,23,24,26,27,28,29,31,32,33,34,39,40,64]},{"kind": 15,"name": "@typeOf(std.debug.printSourceAtAddressWindows).ReturnType.ErrorSet","fn": 164,"errors": [9,10,11,12,13,14,15,16,17,7,50,44,51,2,5,8,18,42,22,23,24,26,27,28,29,31,32,33,34,39,40,64]},{"kind": 15,"name": "@typeOf(std.debug.populateModule).ReturnType.ErrorSet","fn": 171,"errors": [50,44,51,0,1,2,3,4,5,6,7,8,18]},{"kind": 15,"name": "@typeOf(std.pdb.MsfStream.seekTo).ReturnType.ErrorSet","fn": 174,"errors": [42]},{"kind": 15,"name": "@typeOf(std.debug.printLineFromFileAnyOs).ReturnType.ErrorSet","fn": 180,"errors": [9,10,11,12,13,14,15,16,17,7,2,5,22,23,24,26,27,28,29,31,32,33,34,39,40,64]},{"kind": 13,"child": 462},{"kind": 15,"name": "@typeOf(std.debug.writeCurrentStackTrace).ReturnType.ErrorSet","fn": 187,"errors": [9,10,11,12,13,14,15,16,17,7,50,44,51,2,5,8,18,42,22,23,24,26,27,28,29,31,32,33,34,39,40,64]},{"kind": 15,"name": "@typeOf(std.debug.writeCurrentStackTraceWindows).ReturnType.ErrorSet","fn": 188,"errors": [9,10,11,12,13,14,15,16,17,7,50,44,51,2,5,8,18,42,22,23,24,26,27,28,29,31,32,33,34,39,40,64]},{"kind": 8,"name": "std.os.windows.bits.PEB","src": 433,"pubDecls": [],"privDecls": [],"fields": [698,384,935,1062,1063,1064,1065,405,405,397,405,397,397,1066,1067,1068,1069,1070,397]},{"kind": 13,"child": 1029},{"kind": 15,"name": "@typeOf(std.heap.DirectAllocator.realloc).ReturnType.ErrorSet","fn": 200,"errors": [65]},{"kind": 15,"name": "std.heap.error:43:63","errors": [65]},{"kind": 15,"name": "std.fs.SelfExePathError","errors": [66,57,67,68,69,70,71,7,58]},{"kind": 7,"len": 32767,"elem": 427},{"kind": 6,"len": 2,"elem": 497},{"kind": 15,"name": "std.os.windows.GetCurrentDirectoryError","errors": [72,73]},{"kind": 15,"name": "@typeOf(std.os.windows.sliceToPrefixedFileW).ReturnType.ErrorSet","fn": 220,"errors": [61,28,29]},{"kind": 7,"len": 32768,"elem": 427},{"kind": 15,"name": "@typeOf(std.os.windows.sliceToPrefixedSuffixedFileW).ReturnType.ErrorSet","fn": 221,"errors": [61,28,29]},{"kind": 15,"name": "@typeOf(std.unicode.utf8ToUtf16Le).ReturnType.ErrorSet","fn": 224,"errors": [28]},{"kind": 15,"name": "std.unicode.Utf8DecodeError","errors": [74,75,76,77]},{"kind": 15,"name": "std.os.windows.GetFileSizeError","errors": [78]},{"kind": 15,"name": "std.process.GetEnvVarOwnedError","errors": [79,80,81]},{"kind": 15,"name": "std.os.windows.SetConsoleTextAttributeError","errors": [82]},{"kind": 15,"name": "std.math.error:315:43","errors": [83]},{"kind": 15,"name": "@typeOf(std.heap.ArenaAllocator.realloc).ReturnType.ErrorSet","fn": 269,"errors": [18]},{"kind": 15,"name": "@typeOf(std.heap.ArenaAllocator.alloc).ReturnType.ErrorSet","fn": 270,"errors": [18]},{"kind": 15,"name": "@typeOf(std.heap.ArenaAllocator.createNode).ReturnType.ErrorSet","fn": 271,"errors": [18]},{"kind": 6,"len": 2,"align": 8,"elem": 384},{"kind": 15,"name": "std.os.windows.VirtualAllocError","errors": [84]},{"kind": 15,"name": "std.os.windows.GetModuleFileNameError","errors": [85]},{"kind": 6,"elem": 1071},{"kind": 15,"name": "std.os.windows.CreateFileError","errors": [22,23,24,25,26,27,28,29,30]},{"kind": 6,"elem": 1072},{"kind": 15,"name": "std.os.windows.SetFilePointerError","errors": [86]},{"kind": 15,"name": "@typeOf(std.unicode.Utf16LeIterator.nextCodepoint).ReturnType.ErrorSet","fn": 287,"errors": [87,88,89]},{"kind": 15,"name": "@typeOf(std.unicode.utf8CodepointSequenceLength).ReturnType.ErrorSet","fn": 288,"errors": [90]},{"kind": 4,"u": 3},{"kind": 15,"name": "@typeOf(std.unicode.utf8Encode).ReturnType.ErrorSet","fn": 289,"errors": [91,90]},{"kind": 15,"name": "std.unicode.Utf8Decode2Error","errors": [74,75]},{"kind": 15,"name": "std.unicode.Utf8Decode3Error","errors": [92,93,76]},{"kind": 15,"name": "std.unicode.Utf8Decode4Error","errors": [94,95,77]},{"kind": 15,"name": "@typeOf(std.heap.FixedBufferAllocator.realloc).ReturnType.ErrorSet","fn": 304,"errors": [18]},{"kind": 15,"name": "@typeOf(std.heap.FixedBufferAllocator.alloc).ReturnType.ErrorSet","fn": 305,"errors": [18]},{"kind": 15,"name": "@typeOf(std.unicode.utf8ToUtf16LeWithNull).ReturnType.ErrorSet","fn": 307,"errors": [28,18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u16,null).ensureCapacity).ReturnType.ErrorSet","fn": 309,"errors": [18]},{"kind": 15,"name": "@typeOf(std.unicode.Utf8View.init).ReturnType.ErrorSet","fn": 312,"errors": [28]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u16,null).append).ReturnType.ErrorSet","fn": 317,"errors": [18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u16,null).addOne).ReturnType.ErrorSet","fn": 318,"errors": [18]},{"kind": 15,"name": "std.math.error:719:40","errors": [96]},{"kind": 15,"name": "std.os.windows.GetEnvironmentVariableError","errors": [97,98]},{"kind": 15,"name": "@typeOf(std.unicode.utf16leToUtf8Alloc).ReturnType.ErrorSet","fn": 325,"errors": [87,88,89,18]},{"kind": 15,"name": "@typeOf(std.array_list.AlignedArrayList(u8,null).resize).ReturnType.ErrorSet","fn": 327,"errors": [18]},{"kind": 15,"name": "std.os.windows.ReadFileError","errors": [99]},{"kind": 15,"name": "@typeOf(std.unicode.utf16leToUtf8).ReturnType.ErrorSet","fn": 350,"errors": [91,90,87,88,89]},{"kind": 15,"name": "@typeOf(std.unicode.utf8ByteSequenceLength).ReturnType.ErrorSet","fn": 357,"errors": [100]},{"kind": 15,"name": "std.os.windows.WriteFileError","errors": [101,102,103,104]},{"kind": 8,"name": "std.mutex","src": 434,"pubDecls": [2153],"privDecls": [2154,2155,2156,2157,2158,2159,2160],"file": 34},{"kind": 16,"name": "std.mutex.State","src": 435,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 8,"name": "std.parker","src": 436,"pubDecls": [2161],"privDecls": [2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173],"file": 35},{"kind": 15,"name": "std.os.SchedYieldError","errors": [105]},{"kind": 15,"name": "std.math.error:719:40","errors": [106]},{"kind": 8,"name": "std.spinlock","src": 437,"pubDecls": [2174],"privDecls": [2175,2176,2177,2178,2179],"file": 36},{"kind": 8,"name": "std.hash.wyhash","src": 438,"pubDecls": [2180],"privDecls": [2181,2182,2183,2184,2185,2186,2187,2188,2189,2190],"file": 37},{"kind": 7,"len": 32,"elem": 384},{"kind": 7,"len": 1,"elem": 384},{"kind": 8,"name": "std.os.windows.bits.EXCEPTION_POINTERS","src": 439,"pubDecls": [],"privDecls": [],"fields": [1075,405]},{"kind": 15,"name": "@typeOf(std.progress.Progress.start).ReturnType.ErrorSet","fn": 471,"errors": [107]},{"kind": 15,"name": "std.time.Error","errors": [107]},{"kind": 8,"name": "std.time.Timer","src": 440,"pubDecls": [2191,2192,2193,2194],"privDecls": [2195,2196,2197],"fields": [399,399,399]},{"kind": 8,"name": "std.progress","src": 441,"pubDecls": [2198],"privDecls": [2199,2200,2201],"file": 38},{"kind": 13,"child": 688},{"kind": 15,"name": "std.fmt.BufPrintError","errors": [108]},{"kind": 15,"name": "@typeOf(std.fmt.bufPrintWrite).ReturnType.ErrorSet","fn": 513,"errors": [108]},{"kind": 8,"name": "std.fmt.BufPrintContext","src": 442,"pubDecls": [],"privDecls": [],"fields": [395]},{"kind": 17,"name": "std.coff.Misc","src": 443,"pubDecls": [],"privDecls": [],"fields": [397,397]},{"kind": 8,"name": "std.special","src": 444,"pubDecls": [2202],"privDecls": [2203,2204,2205,2206],"file": 3},{"kind": 6,"len": 2,"elem": 722},{"kind": 6,"len": 2,"elem": 713},{"kind": 16,"name": "std.builtin.Size","src": 445,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3]},{"kind": 17,"name": "std.builtin.Data","src": 446,"pubDecls": [2207],"privDecls": [],"fields": [383,383,1076]},{"kind": 13,"child": 383},{"kind": 6,"len": 2,"elem": 721},{"kind": 6,"len": 2,"elem": 724},{"kind": 6,"len": 2,"elem": 711},{"kind": 13,"child": 711},{"kind": 13,"child": 409},{"kind": 6,"len": 2,"elem": 726},{"kind": 6,"elem": 729},{"kind": 6,"elem": 732},{"kind": 8,"name": "std.event.loop","src": 447,"pubDecls": [2208],"privDecls": [2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223],"file": 39},{"kind": 16,"name": "std.event.loop.Id","src": 448,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 8,"name": "std.os.windows.bits.OVERLAPPED","src": 449,"pubDecls": [],"privDecls": [],"fields": [398,398,397,397,600]},{"kind": 18,"name": "fn(type)var","generic": true,"args": [383]},{"kind": 18,"name": "fn(var,var)var","generic": true,"args": [null,null]},{"kind": 6,"const": true,"elem": 1056},{"kind": 18,"name": "fn(*std.mem.Allocator,var,var)var","generic": true,"args": [462,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,var,var)var","generic": true,"args": [462,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,var,var,var)var","generic": true,"args": [462,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,var,var)var","generic": true,"args": [462,383,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,var)var","generic": true,"args": [462,383,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,var,var,var)var","generic": true,"args": [462,null,null,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,var)var","generic": true,"args": [462,null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type)var","generic": true,"args": [462,383]},{"kind": 18,"name": "fn(*std.mem.Allocator, []u8, u29, usize, u29) std.mem.Error![]u8","generic": false,"ret": 486,"args": [462,395,465,398,465]},{"kind": 8,"name": "std.target","src": 450,"pubDecls": [2224],"privDecls": [2225,2226,2227],"file": 40},{"kind": 16,"name": "std.target.Arm32","src": 451,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]},{"kind": 16,"name": "std.target.Kalimba","src": 452,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 16,"name": "std.target.Arm64","src": 453,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8]},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 18,"name": "fn(var)var","generic": true,"args": [null]},{"kind": 18,"name": "fn(*std.mem.Allocator,type,var)var","generic": true,"args": [462,383,null]},{"kind": 18,"name": "fn(type,var,var,var)var","generic": true,"args": [383,null,null,null]},{"kind": 8,"name": "std.meta.trait","src": 454,"pubDecls": [2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245],"privDecls": [2246,2247,2248,2249,2250,2251,2252,2253],"file": 41},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 18,"name": "fn(type,var)var","generic": true,"args": [383,null]},{"kind": 18,"name": "fn(var,var)var","generic": true,"args": [null,null]},{"kind": 18,"name": "fn(type,var,var)var","generic": true,"args": [383,null,null]},{"kind": 8,"name": "std.thread","src": 455,"pubDecls": [2254],"privDecls": [2255,2256,2257,2258,2259,2260,2261],"file": 42},{"kind": 8,"name": "std.thread.Data","src": 456,"pubDecls": [],"privDecls": [],"fields": [405,405,405]},{"kind": 8,"name": "std.os.bits.windows","src": 457,"pubDecls": [993,2262,994,995,2263,2264,996,2265,998,2266,2267,2268,2269,999,2270,2271,1000,1001,2272,1003,2273,1004,1006,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,1011,2288,2289,1012,2290,2291,2292,2293,1014,2294,1015,2295,1016,2296,2297,2298,2299,2300,2301,2302,2303,2304,1020,2305,2306,2307,2308,1022,1023,2309,1025,1027,2310,2311,2312,1028,2313,2314,2315,1029,2316,2317,1031,1032,2318,2319,1034,1036,2320,2321,1037,2322,2323,2324,2325,2326,2327,2328,1040,2329,2330,2331,2332,1044,2333,1045,2334,2335,1046,2336,2337,2338,1051,2339,2340,2341,1052,2342,2343,2344,2345,1055,1056,2346,2347,1061,2348,1062,2349,2350,2351,2352,1064,1065,2353,1066,2354,1068,2355,2356,2357,1071,2358,1072,2359,2360,2361,2362,2363,1076,2364,2365,1077,2366,1078,1079,2367,2368,2369,2370,2371,1080,2372,2373,1082,1083,2374,2375,2376,2377,1085,1086,2378,2379,2380,2381,1087,2382,1089,2383,1091,2384,2385,1094,1095,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,1101,2399,2400,2401,2402,2403,2404,1105,1106,2405,1107,2406,2407,2408,1108,2409,2410,1110,2411,2412,2413,2414,2415,2416,1114,2417,2418,1115,2419,2420,2421,2422,2423,2424,2425,1119,1120,1121,1122,2426,2427,1125,2428,2429,2430,2431,2432,2433,1128,2434,2435,1130,2436,2437,1131,2438,1132,2439,1133,2440,2441,1135,1137,1136,1138,1140,2442,1141,2443,2444,2445,2446,1148,1149,1151,2447,2448,2449,2450,1152,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,1154,2461,2462,2463,2464,2465,2466,2467,2468,2469,1159,2470,1161,1162,2471,2472,2473,2474,1166,2475,2476,2477,2478,2479,1172,2480,2481,2482,2483,1175,2484,2485,2486,2487,2488,2489,2490,2491,2492,1183,2493,2494,1186,2495,2496,1188,2497,1191,2498,1192,2499,2500,2501,2502,2503,2504,2505,1197,2506,1199,2507,2508,1200,1202,1204,2509,2510,2511,2512,2513,2514,2515,2516,1212,2517,2518,2519,2520,2521,1214,1215,2522,2523,2524,2525,2526,1221,1222,1223,2527,2528,1226,2529,1227,2530,2531,2532,1230,2533,2534,1231,2535,2536,2537,2538,2539,2540,2541,1233,1234,2542,2543,2544,2545,2546,1240,2547,2548,1243,2549,2550,2551,1246,1247,2552,2553,2554,1249,2555,1251,2556,1252,2557,2558,2559,2560,2561,2562,2563,2564,1258,2565,1260,2566,2567,1263,2568,1266,2569,2570,1270,2571,2572,2573,1272,2574,2575,1273,1274,2576,2577,2578,1276,2579,2580,2581,1278,1279,1280,1282,1283,2582,2583,2584,2585,2586,1285,2587,2588,2589,2590,2591,2592,2593,1289,2594,2595,1290,2596,1292,1293,2597,1295,2598,2599,2600,2601,1298,2602,1301,1302,2603,2604,1304,1305,1306,2605,2606,1308,2607,2608,2609,1310,2610,2611,2612,2613,2614,2615,1315,992],"privDecls": [],"file": 43},{"kind": 15,"name": "std.os.OpenError","errors": [59,31,32,33,34,60,61,35,36,37,38,39,62,40,7]},{"kind": 8,"name": "std.os.bits","src": 458,"pubDecls": [993,994,995,996,1148,1149,1151,998,999,1152,1000,1001,1003,1004,1154,1006,1156,1159,1011,1012,1161,1162,1014,1166,1015,1016,1020,1172,1021,1175,1022,1023,1025,1027,1028,1029,1183,1031,1186,1032,1188,1034,1191,1192,1036,1037,1197,1199,1040,1200,1202,1204,1044,1045,1046,1051,1212,1214,1052,1215,1221,1222,1055,1223,1056,1226,1227,1061,1062,1064,1065,1066,1230,1068,1231,1233,1234,1071,1072,1076,1077,1240,1078,1243,1079,1080,1246,1082,1247,1083,1249,1251,1085,1252,1086,1087,1089,1091,1258,1260,1094,1095,1263,1266,1101,1270,1272,1105,1106,1107,1273,1274,1108,1276,1278,1279,1280,1282,1283,1110,1285,1114,1289,1115,1290,1292,1293,1295,1119,1120,1121,1298,1122,1301,1302,1304,1305,1125,1306,1308,1128,1310,1130,1131,1132,1133,1135,1136,1137,1138,1140,1141,1315,992],"privDecls": [2616],"file": 44},{"kind": 15,"name": "std.os.SysCtlError","errors": [58,109,110,7]},{"kind": 15,"name": "std.os.ReadLinkError","errors": [66,57,67,68,69,70,71,7]},{"kind": 8,"name": "std.os.windows","src": 459,"pubDecls": [2262,2263,2264,2265,2617,2266,2267,2268,2269,2270,2271,2618,2272,2273,2619,2620,2274,2275,2276,2277,2278,2621,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2622,2290,2291,2623,2292,2624,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2625,2304,2626,2305,2627,2306,2307,2308,2628,2309,2310,2311,2629,2312,2313,2314,2315,2630,2631,2316,2317,2632,2318,2319,2633,2320,2321,2322,2323,2324,2325,2326,2327,2634,2328,2635,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2636,2342,2343,2637,2344,2345,2346,2347,2348,2349,2350,2351,2638,2352,2353,2354,2355,2639,2356,2640,2641,2357,2642,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2643,2644,2377,2645,2378,2379,2380,2381,2382,2383,2384,2646,2385,2386,2387,2647,2388,2389,2648,2390,2391,2392,2393,2649,2394,2395,2396,2397,2398,2399,2650,2400,2651,2401,2402,2403,2404,2405,2652,2406,2653,2407,2408,2409,2654,2655,2410,2411,2412,2413,2414,2415,2656,2416,2417,2418,2419,2420,2421,2657,2422,2423,2658,2424,2425,2659,2426,2427,2428,2429,2430,2431,2432,2660,2433,2434,2435,2661,2662,2436,2437,2438,2439,2440,2441,2663,2664,2442,2443,2665,2444,2445,2666,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2667,2469,2668,2470,2471,2472,2473,2474,2669,2475,2476,2477,2670,2478,2671,2479,2672,2480,2481,2482,2483,2673,2484,2485,2486,2674,2487,2488,2489,2490,2675,2491,2492,2676,2493,2494,2495,2496,2497,2677,2498,2678,2499,2500,2679,2501,2502,2503,2680,2504,2505,2506,2681,2682,2507,2683,2508,2509,2510,2511,2512,2513,2684,2514,2515,2516,2685,2686,2517,2518,2519,2520,2521,2687,2522,2523,2524,2525,2526,2688,2527,2528,2529,2530,2689,2531,2532,2533,2534,2535,2536,2537,2538,2690,2539,2540,2541,2691,2542,2543,2544,2692,2545,2546,2547,2693,2548,2694,2695,2549,2550,2551,2696,2552,2553,2697,2554,2555,2556,2557,2698,2558,2559,2560,2561,2562,2563,2699,2564,2565,2566,2567,2700,2568,2701,2569,2570,2702,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2703,2582,2583,2584,2585,2586,2587,2704,2705,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2706,2598,2707,2599,2708,2600,2601,2709,2710,2711,2602,2603,2604,2605,2606,2607,2712,2608,2609,2713,2714,2610,2611,2612,2613,2614,2715,2615,2716,2717],"privDecls": [2718,2719,2720,2721,2722,2723,2724,2725],"file": 45},{"kind": 15,"name": "std.os.FStatError","errors": [41,7]},{"kind": 18,"name": "fn(var,var,var,var)var","generic": true,"args": [null,null,null,null]},{"kind": 18,"name": "fn(var,var,var,var)var","generic": true,"args": [null,null,null,null]},{"kind": 18,"name": "fn(std.builtin.StackTrace,var,var,var,var)var","generic": true,"args": [484,null,null,null,null]},{"kind": 18,"name": "fn([]const u8,var)var","generic": true,"args": [385,null]},{"kind": 18,"name": "fn(*std.debug.DebugInfo,var,var,var)var","generic": true,"args": [584,null,null,null]},{"kind": 18,"name": "fn(?*const std.builtin.StackTrace,?usize,[]const u8,var)var","generic": true,"args": [459,460,385,null]},{"kind": 18,"name": "fn([]const u8,var)var","generic": true,"args": [385,null]},{"kind": 7,"len": 7,"elem": 384},{"kind": 18,"name": "fn(var,var)var","generic": true,"args": [null,null]},{"kind": 8,"name": "std.debug.MachoSymbol","src": 460,"pubDecls": [],"privDecls": [2726,2727],"fields": [422,1099,399]},{"kind": 18,"name": "fn(var,var)var","generic": true,"args": [null,null]},{"kind": 7,"len": 102400,"elem": 384},{"kind": 13,"child": 482},{"kind": 18,"name": "fn(*std.debug.DebugInfo,var,var,var)var","generic": true,"args": [584,null,null,null]},{"kind": 13,"child": 811},{"kind": 18,"name": "fn(var,var)var","generic": true,"args": [null,null]},{"kind": 8,"name": "std.event.loop.Loop","src": 461,"pubDecls": [2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752],"privDecls": [2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766],"fields": [462,415,1101,734,398,1102,418,1103]},{"kind": 16,"name": "std.io.Mode","src": 462,"pubDecls": [],"privDecls": [],"fields": [0,1]},{"kind": 18,"name": "fn([]u8,[]const u8,var)var","generic": true,"args": [395,385,null]},{"kind": 18,"name": "fn(var,var,var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null,null,null]},{"kind": 18,"name": "fn(var,var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null,null]},{"kind": 18,"name": "fn(var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null]},{"kind": 18,"name": "fn(var,var,var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null,null,null]},{"kind": 18,"name": "fn([]const u8,[]const u8,var,var,var,var)var","generic": true,"args": [385,385,null,null,null,null]},{"kind": 16,"name": "std.fmt.Alignment","src": 463,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 18,"name": "fn(*u32,var,var)var","generic": true,"args": [1104,null,null]},{"kind": 18,"name": "fn(var,var,var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null,null,null]},{"kind": 18,"name": "fn(var,var,var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null,null,null]},{"kind": 18,"name": "fn(var,var,var,var,var,var)var","generic": true,"args": [null,null,null,null,null,null]},{"kind": 16,"name": "std.pdb.DebugSubsectionKind","src": 464,"pubDecls": [],"privDecls": [],"fields": [0,241,242,243,244,245,246,247,248,249,250,251,252,253]},{"kind": 8,"name": "std.pdb.LineFragmentHeader","src": 465,"pubDecls": [],"privDecls": [],"fields": [397,427,1047,397]},{"kind": 8,"name": "std.pdb.LineBlockFragmentHeader","src": 466,"pubDecls": [],"privDecls": [],"fields": [397,397,397]},{"kind": 8,"name": "std.pdb.PDBStringTableHeader","src": 467,"pubDecls": [],"privDecls": [],"fields": [397,397,397]},{"kind": 8,"name": "std.pdb.ColumnNumberEntry","src": 468,"pubDecls": [],"privDecls": [],"fields": [427,427]},{"kind": 8,"name": "std.pdb.LineNumberEntry","src": 469,"pubDecls": [2767],"privDecls": [],"fields": [397,397]},{"kind": 8,"name": "std.pdb.DebugSubsectionHeader","src": 470,"pubDecls": [],"privDecls": [],"fields": [1034,397]},{"kind": 8,"name": "std.pdb.ProcSymFlags","src": 471,"pubDecls": [],"privDecls": [],"fields": [382,382,382,382,382,382,382,382]},{"kind": 8,"name": "std.pdb.RecordPrefix","src": 472,"pubDecls": [],"privDecls": [],"fields": [427,1043]},{"kind": 16,"name": "std.pdb.SymbolKind","src": 473,"pubDecls": [],"privDecls": [],"fields": [1,2,3,4,5,7,8,9,10,11,12,13,14,256,257,258,259,260,261,262,263,264,265,266,267,268,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,768,769,1024,1025,1026,1027,1028,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4352,4356,4362,4372,4373,4375,4376,4377,4378,4379,4382,4383,4384,4385,4386,4387,4388,4390,4392,4393,4394,4395,4398,4399,4400,4401,4402,4403,4404,4405,4411,4424,4425,4426,4427,4432,4433,4434,4436,4439,4440,4441,4444,4445,4447,4448,4449,4450,4451,4452,4453,4455,4456,6,4430,4431,4354,4396,4406,4407,4408,4367,4368,4422,4423,4437,4438,4358,4366,4389,4391,4413,4429,4414,4415,4416,4417,4418,4419,4420,4421,4355,4357,4353,4374,4412,4114,4409,4435,4446,4410,4442,4443,4360,4361,4428,4363,4369,4359,4397,4364,4365,4380,4381,4370,4371]},{"kind": 8,"name": "std.pdb.ProcSym","src": 474,"pubDecls": [],"privDecls": [],"fields": [397,397,397,397,397,397,397,397,427,1041]},{"kind": 8,"name": "std.pdb.FileChecksumEntryHeader","src": 475,"pubDecls": [],"privDecls": [],"fields": [397,384,384]},{"kind": 16,"name": "std.pdb.SectionContrSubstreamVersion","src": 476,"pubDecls": [],"privDecls": [],"fields": [4046371373,4046541284]},{"kind": 8,"name": "std.pdb.LineFlags","src": 477,"pubDecls": [],"privDecls": [],"fields": [382,1106]},{"kind": 8,"name": "std.hash.auto_hash","src": 478,"pubDecls": [2768,2769,2770,2771,2772],"privDecls": [2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783],"file": 46},{"kind": 8,"name": "std.heap.DirectAllocator","src": 479,"pubDecls": [],"privDecls": [2784,2785,2786]},{"kind": 18,"name": "fn(*std.progress.Progress,[]const u8,var)var","generic": true,"args": [685,385,null]},{"kind": 18,"name": "fn(*std.progress.Progress,*usize,[]const u8,var)var","generic": true,"args": [685,557,385,null]},{"kind": 13,"child": 488},{"kind": 7,"len": 100,"elem": 384},{"kind": 16,"name": "std.target.Abi","src": 480,"pubDecls": [],"privDecls": [],"fields": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]},{"kind": 8,"name": "std.target.Cross","src": 481,"pubDecls": [],"privDecls": [],"fields": [761,759,1054]},{"kind": 8,"name": "std.macho.section_64","src": 482,"pubDecls": [],"privDecls": [],"fields": [817,817,399,399,397,397,397,397,397,397,397,397]},{"kind": 4,"i": 32},{"kind": 8,"name": "std.macho.mach_header_64","src": 483,"pubDecls": [],"privDecls": [],"fields": [397,1057,1057,397,397,397,397,397]},{"kind": 8,"name": "std.coff.DataDirectory","src": 484,"pubDecls": [],"privDecls": [],"fields": [397,397]},{"kind": 7,"len": 16,"elem": 1059},{"kind": 8,"name": "std.debug.Bucket","src": 485,"pubDecls": [],"privDecls": [],"fields": [397,397]},{"kind": 7,"len": 2,"elem": 405},{"kind": 6,"elem": 1081},{"kind": 6,"elem": 1090},{"kind": 7,"len": 3,"elem": 405},{"kind": 7,"len": 45,"elem": 405},{"kind": 7,"len": 96,"elem": 384},{"kind": 13,"child": 1109},{"kind": 7,"len": 128,"elem": 384},{"kind": 7,"len": 1,"elem": 405},{"kind": 21,"name": "std.os.windows.bits.HMODULE"},{"kind": 8,"name": "std.os.windows.bits.SECURITY_ATTRIBUTES","src": 486,"pubDecls": [],"privDecls": [],"fields": [397,600,1057]},{"kind": 7,"len": 5,"elem": 399},{"kind": 18,"name": "fn(u8,var)var","generic": true,"args": [384,null]},{"kind": 6,"elem": 1084},{"kind": 8,"name": "std.builtin.FnDecl","src": 487,"pubDecls": [2787],"privDecls": [],"fields": [383,1110,718,382,382,382,531,383,1111]},{"kind": 8,"name": "std.os.windows.bits","src": 488,"pubDecls": [2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615],"privDecls": [2788,2789,2790,2791],"file": 47},{"kind": 8,"name": "std.os.windows.bits.RTL_DRIVE_LETTER_CURDIR","src": 489,"pubDecls": [],"privDecls": [],"fields": [659,659,397,1085]},{"kind": 8,"name": "std.os.windows.lang","src": 490,"pubDecls": [2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931],"privDecls": [],"file": 48},{"kind": 4,"u": 32},{"kind": 8,"name": "std.os.windows.bits.PEB_LDR_DATA","src": 491,"pubDecls": [],"privDecls": [],"fields": [752,1065,1088]},{"kind": 4,"i": 16},{"kind": 8,"name": "std.os.windows.sublang","src": 492,"pubDecls": [2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175],"privDecls": [],"file": 49},{"kind": 8,"name": "std.os.windows.bits.EXCEPTION_RECORD","src": 493,"pubDecls": [],"privDecls": [],"fields": [397,397,1075,405,397,1112]},{"kind": 8,"name": "std.os.windows.bits.UNICODE_STRING","src": 494,"pubDecls": [],"privDecls": [],"fields": [659,659,627]},{"kind": 8,"name": "std.os.windows.bits.COORD","src": 495,"pubDecls": [],"privDecls": [],"fields": [1082,1082]},{"kind": 8,"name": "std.os.windows.error","src": 496,"pubDecls": [3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,4266,4267,4268,4269,4270,4271,4272,4273,4274,4275,4276,4277,4278,4279,4280,4281,4282,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4294,4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,4327,4328,4329,4330,4331,4332,4333,4334,4335,4336,4337,4338,4339,4340,4341,4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,4358,4359,4360,4361,4362,4363,4364],"privDecls": [],"file": 50},{"kind": 8,"name": "std.os.windows.bits.LIST_ENTRY","src": 497,"pubDecls": [],"privDecls": [],"fields": [1113,1113]},{"kind": 8,"name": "std.os.windows.bits.CURDIR","src": 498,"pubDecls": [],"privDecls": [],"fields": [1085,405]},{"kind": 8,"name": "std.os.windows.bits.RTL_USER_PROCESS_PARAMETERS","src": 499,"pubDecls": [],"privDecls": [],"fields": [397,397,397,397,405,397,405,405,405,1089,1085,1085,1085,627,397,397,397,397,397,397,397,397,397,1085,1085,1085,1085,1114]},{"kind": 8,"name": "std.os.windows.bits.CONSOLE_SCREEN_BUFFER_INFO","src": 500,"pubDecls": [],"privDecls": [],"fields": [1086,1086,427,1095,1086]},{"kind": 6,"elem": 1115},{"kind": 13,"child": 1116},{"kind": 8,"name": "std.os.windows.bits.FILE_NAME_INFO","src": 501,"pubDecls": [],"privDecls": [],"fields": [397,1117]},{"kind": 8,"name": "std.os.windows.bits.SMALL_RECT","src": 502,"pubDecls": [],"privDecls": [],"fields": [1082,1082,1082,1082]},{"kind": 8,"name": "std.os.windows.ntdll","src": 503,"pubDecls": [2262,4365,2264,2263,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2281,2280,2282,2283,2284,4366,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2300,2299,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2368,2367,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,4367,2411,2412,2413,2414,2415,2416,2417,2418,4368,2419,2420,2421,2422,2423,2424,2425,4369,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,4370,2475,2476,4371,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,4372,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,4373,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,4374,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615],"privDecls": [],"file": 51},{"kind": 18,"name": "fn([]const u8,[]const u16)var","generic": true,"args": [385,609]},{"kind": 8,"name": "std.os.windows.kernel32","src": 504,"pubDecls": [2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,4375,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,4376,2290,2291,4377,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,4378,2304,4379,2305,4380,2306,2307,4381,2308,2309,2310,2311,2312,4382,2313,2314,2315,4383,2316,2317,2318,2319,4384,4385,2320,2321,2322,2323,4386,2324,4387,2325,2326,2327,4388,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,4389,2347,2348,2349,2350,2351,4390,2352,4391,2353,2354,2355,4392,4393,2356,4394,2357,2358,2359,2360,2361,2362,2363,4395,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,4396,2374,2375,2376,4397,2377,4398,2378,2379,2380,2381,2382,4399,2383,2384,4400,2385,2386,2387,2388,2389,4401,2390,2391,2392,2393,2394,2395,2396,2397,4402,2398,2399,2400,4403,2401,2402,2403,4404,2404,2405,2406,2407,2408,2409,4405,2410,2411,2412,2413,2414,2415,4406,2416,2417,2418,2419,2420,2421,2422,2423,4407,2424,2425,4408,2426,2427,2428,2429,2430,2431,4409,4410,2432,2433,4411,2434,2435,4412,4413,2436,2437,2438,2439,2440,2441,4414,4415,2442,4416,2443,2444,2445,4417,4418,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,4419,4420,2467,2468,2469,2470,2471,2472,2473,4421,2474,4422,4423,2475,2476,2477,2478,2479,2480,2481,4424,2482,2483,4425,2484,2485,2486,4426,2487,2488,2489,2490,2491,2492,4427,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,4428,4429,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,4430,4431,2522,2523,2524,2525,2526,4432,2527,2528,2529,2530,2531,2532,2533,2534,4433,2535,2536,2537,2538,2539,2540,2541,4434,2542,2543,4435,2544,4436,2545,2546,2547,2548,2549,2550,2551,4437,4438,2552,2553,4439,2554,4440,2555,2556,4441,2557,2558,4442,2559,2560,2561,2562,2563,4443,2564,2565,2566,2567,4444,2568,2569,4445,4446,2570,4447,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,4448,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,4449,2598,2599,4450,2600,2601,4451,4452,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,4453,2612,2613,2614,2615,4454],"privDecls": [],"file": 52},{"kind": 13,"child": 422},{"kind": 13,"child": 1145},{"kind": 8,"name": "std.event.loop.OsData","src": 505,"pubDecls": [],"privDecls": [],"fields": [405,398]},{"kind": 6,"len": 2,"elem": 1146},{"kind": 6,"len": 2,"elem": 732},{"kind": 6,"elem": 397},{"kind": 8,"name": "std.pdb.Flags","src": 506,"pubDecls": [],"privDecls": [],"fields": [1147,1148,382]},{"kind": 4,"u": 15},{"kind": 16,"name": "std.hash.auto_hash.HashStrategy","src": 507,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 18,"name": "fn(var,var,var)var","generic": true,"args": [null,null,null]},{"kind": 18,"name": "extern fn() void","generic": false,"ret": 431},{"kind": 16,"name": "std.builtin.Inline","src": 508,"pubDecls": [],"privDecls": [],"fields": [0,1,2]},{"kind": 6,"len": 2,"elem": 385},{"kind": 7,"len": 15,"elem": 398},{"kind": 6,"elem": 1088},{"kind": 7,"len": 32,"elem": 1078},{"kind": 21,"name": "std.os.windows.bits.va_list"},{"kind": 18,"name": "extern fn(*c_void, u32, *c_void) void","generic": false,"ret": 431,"args": [405,397,405]},{"kind": 7,"len": 1,"elem": 427},{"kind": 18,"name": "stdcallcc fn(*c_void, *const c_void, u8, ?*i64) u32","generic": false,"ret": 397,"args": [405,1149,384,1150]},{"kind": 18,"name": "stdcallcc fn(u32, u32, **c_void, ?*u32) u16","generic": false,"ret": 427,"args": [397,397,704,1151]},{"kind": 18,"name": "stdcallcc fn(**c_void, u32, ?*c_void, u32) u32","generic": false,"ret": 397,"args": [704,397,600,397]},{"kind": 18,"name": "stdcallcc fn(*c_void, [*]const u8, u32, ?*u32, ?*std.os.windows.bits.OVERLAPPED) c_int","generic": false,"ret": 1057,"args": [405,589,397,1151,1152]},{"kind": 18,"name": "stdcallcc fn(*c_void) c_int","generic": false,"ret": 1057,"args": [405]},{"kind": 18,"name": "stdcallcc fn(?*c_void, usize, u32) c_int","generic": false,"ret": 1057,"args": [600,398,397]},{"kind": 18,"name": "stdcallcc fn(u32) void","generic": false,"ret": 431,"args": [397]},{"kind": 18,"name": "stdcallcc fn(*c_void, *u32) c_int","generic": false,"ret": 1057,"args": [405,1104]},{"kind": 18,"name": "stdcallcc fn(*c_void, *std.os.windows.bits.CONSOLE_SCREEN_BUFFER_INFO) c_int","generic": false,"ret": 1057,"args": [405,1153]},{"kind": 18,"name": "stdcallcc fn(?*c_void, usize, u32, u32) ?*c_void","generic": false,"ret": 600,"args": [600,398,397,397]},{"kind": 18,"name": "stdcallcc fn(c_ulong, ?stdcallcc fn(*std.os.windows.bits.EXCEPTION_POINTERS) c_long) ?*c_void","generic": false,"ret": 600,"args": [1154,1155]},{"kind": 18,"name": "stdcallcc fn(c_uint) noreturn","generic": false,"ret": 456,"args": [1080]},{"kind": 18,"name": "stdcallcc fn(*c_void, [*]u8, u32, ?*u32, ?*std.os.windows.bits.OVERLAPPED) c_int","generic": false,"ret": 1057,"args": [405,559,397,1151,1152]},{"kind": 18,"name": "stdcallcc fn(*c_void) c_ulong","generic": false,"ret": 1154,"args": [405]},{"kind": 18,"name": "stdcallcc fn(u32, ?[*]u16) u32","generic": false,"ret": 397,"args": [397,1156]},{"kind": 18,"name": "stdcallcc fn(u32, ?*c_void, u32, u32, [*]u16, u32, ?**std.os.windows.bits.va_list) u32","generic": false,"ret": 397,"args": [397,600,397,397,627,397,1157]},{"kind": 18,"name": "stdcallcc fn() c_int","generic": false,"ret": 1057},{"kind": 18,"name": "stdcallcc fn(?[*]const u16) *std.os.windows.bits.HMODULE","generic": false,"ret": 901,"args": [1158]},{"kind": 18,"name": "stdcallcc fn(*i64) c_int","generic": false,"ret": 1057,"args": [1159]},{"kind": 18,"name": "stdcallcc fn(?*std.os.windows.bits.HMODULE, [*]u16, u32) u32","generic": false,"ret": 397,"args": [626,627,397]},{"kind": 18,"name": "stdcallcc fn(*c_void, u32, *c_void, u32) c_int","generic": false,"ret": 1057,"args": [405,397,405,397]},{"kind": 18,"name": "stdcallcc fn(*c_void, u16) c_int","generic": false,"ret": 1057,"args": [405,427]},{"kind": 18,"name": "stdcallcc fn() u32","generic": false,"ret": 397},{"kind": 18,"name": "stdcallcc fn(*c_void, i64, ?*i64, u32) c_int","generic": false,"ret": 1057,"args": [405,511,1150,397]},{"kind": 18,"name": "stdcallcc fn([*]u16, [*]u16, u32) u32","generic": false,"ret": 397,"args": [627,627,397]},{"kind": 18,"name": "stdcallcc fn([*]const u16, u32, u32, ?*std.os.windows.bits.SECURITY_ATTRIBUTES, u32, u32, ?*c_void) *c_void","generic": false,"ret": 405,"args": [603,397,397,629,397,397,600]},{"kind": 18,"name": "stdcallcc fn(*c_void, *i64) c_int","generic": false,"ret": 1057,"args": [405,1159]},{"kind": 6,"elem": 1021},{"kind": 6,"elem": 767},{"kind": 4,"u": 24},{"kind": 4,"u": 7},{"kind": 6,"const": true,"elem": 705},{"kind": 13,"child": 1159},{"kind": 13,"child": 1104},{"kind": 13,"child": 1160},{"kind": 6,"elem": 1091},{"kind": 4,"u": 32},{"kind": 13,"child": 345},{"kind": 13,"child": 627},{"kind": 13,"child": 1161},{"kind": 13,"child": 603},{"kind": 6,"elem": 511},{"kind": 6,"elem": 962},{"kind": 6,"elem": 1092}],"decls": [{"import": 695,"src": 509,"name": "set"},{"import": 695,"src": 70,"name": "ensureCapacity","kind": "const","type": 77,"value": 80},{"import": 695,"src": 510,"name": "setOrError"},{"import": 695,"src": 511,"name": "appendAssumeCapacity"},{"import": 695,"src": 512,"name": "swapRemoveOrError"},{"import": 695,"src": 513,"name": "at"},{"import": 695,"src": 71,"name": "capacity","kind": "const","type": 78,"value": 81},{"import": 695,"src": 514,"name": "swapRemove"},{"import": 695,"src": 515,"name": "iterator"},{"import": 695,"src": 516,"name": "pop"},{"import": 695,"src": 517,"name": "toSliceConst"},{"import": 695,"src": 518,"name": "appendSlice"},{"import": 695,"src": 519,"name": "insertSlice"},{"import": 695,"src": 520,"name": "fromOwnedSlice"},{"import": 695,"src": 521,"name": "SliceConst"},{"import": 695,"src": 73,"name": "append","kind": "const","type": 80,"value": 83},{"import": 695,"src": 199,"name": "resize"},{"import": 695,"src": 522,"name": "deinit"},{"import": 695,"src": 523,"name": "insert"},{"import": 695,"src": 74,"name": "addOne","kind": "const","type": 81,"value": 84},{"import": 695,"src": 75,"name": "addOneAssumeCapacity","kind": "const","type": 82,"value": 85},{"import": 695,"src": 524,"name": "Iterator"},{"import": 695,"src": 525,"name": "shrink"},{"import": 695,"src": 526,"name": "Slice","kind": "const","type": 383,"value": 517},{"import": 695,"src": 103,"name": "toOwnedSlice"},{"import": 695,"src": 527,"name": "orderedRemove"},{"import": 695,"src": 102,"name": "init","kind": "const","type": 189,"value": 208},{"import": 695,"src": 141,"name": "count","kind": "const","type": 78,"value": 213},{"import": 695,"src": 528,"name": "popOrNull"},{"import": 695,"src": 78,"name": "toSlice","kind": "const","type": 85,"value": 89},{"import": 695,"src": 529,"name": "Self","kind": "const","type": 383,"value": 387},{"import": 695,"src": 509,"name": "set"},{"import": 695,"src": 70,"name": "ensureCapacity","kind": "const","type": 142,"value": 147},{"import": 695,"src": 510,"name": "setOrError"},{"import": 695,"src": 511,"name": "appendAssumeCapacity"},{"import": 695,"src": 512,"name": "swapRemoveOrError"},{"import": 695,"src": 513,"name": "at"},{"import": 695,"src": 71,"name": "capacity","kind": "const","type": 143,"value": 148},{"import": 695,"src": 514,"name": "swapRemove"},{"import": 695,"src": 515,"name": "iterator"},{"import": 695,"src": 516,"name": "pop"},{"import": 695,"src": 517,"name": "toSliceConst"},{"import": 695,"src": 518,"name": "appendSlice"},{"import": 695,"src": 519,"name": "insertSlice"},{"import": 695,"src": 520,"name": "fromOwnedSlice"},{"import": 695,"src": 521,"name": "SliceConst"},{"import": 695,"src": 73,"name": "append","kind": "const","type": 140,"value": 145},{"import": 695,"src": 199,"name": "resize"},{"import": 695,"src": 522,"name": "deinit"},{"import": 695,"src": 523,"name": "insert"},{"import": 695,"src": 74,"name": "addOne","kind": "const","type": 141,"value": 146},{"import": 695,"src": 75,"name": "addOneAssumeCapacity","kind": "const","type": 145,"value": 150},{"import": 695,"src": 524,"name": "Iterator"},{"import": 695,"src": 525,"name": "shrink"},{"import": 695,"src": 526,"name": "Slice","kind": "const","type": 383,"value": 574},{"import": 695,"src": 103,"name": "toOwnedSlice","kind": "const","type": 146,"value": 151},{"import": 695,"src": 527,"name": "orderedRemove"},{"import": 695,"src": 102,"name": "init","kind": "const","type": 127,"value": 132},{"import": 695,"src": 141,"name": "count","kind": "const","type": 143,"value": 238},{"import": 695,"src": 528,"name": "popOrNull"},{"import": 695,"src": 78,"name": "toSlice"},{"import": 695,"src": 529,"name": "Self","kind": "const","type": 383,"value": 389},{"import": 695,"src": 509,"name": "set"},{"import": 695,"src": 70,"name": "ensureCapacity","kind": "const","type": 149,"value": 154},{"import": 695,"src": 510,"name": "setOrError"},{"import": 695,"src": 511,"name": "appendAssumeCapacity"},{"import": 695,"src": 512,"name": "swapRemoveOrError"},{"import": 695,"src": 513,"name": "at"},{"import": 695,"src": 71,"name": "capacity","kind": "const","type": 150,"value": 155},{"import": 695,"src": 514,"name": "swapRemove"},{"import": 695,"src": 515,"name": "iterator"},{"import": 695,"src": 516,"name": "pop"},{"import": 695,"src": 517,"name": "toSliceConst"},{"import": 695,"src": 518,"name": "appendSlice"},{"import": 695,"src": 519,"name": "insertSlice"},{"import": 695,"src": 520,"name": "fromOwnedSlice"},{"import": 695,"src": 521,"name": "SliceConst"},{"import": 695,"src": 73,"name": "append"},{"import": 695,"src": 199,"name": "resize"},{"import": 695,"src": 522,"name": "deinit"},{"import": 695,"src": 523,"name": "insert"},{"import": 695,"src": 74,"name": "addOne","kind": "const","type": 148,"value": 153},{"import": 695,"src": 75,"name": "addOneAssumeCapacity","kind": "const","type": 152,"value": 157},{"import": 695,"src": 524,"name": "Iterator"},{"import": 695,"src": 525,"name": "shrink"},{"import": 695,"src": 526,"name": "Slice","kind": "const","type": 383,"value": 580},{"import": 695,"src": 103,"name": "toOwnedSlice","kind": "const","type": 154,"value": 159},{"import": 695,"src": 527,"name": "orderedRemove"},{"import": 695,"src": 102,"name": "init","kind": "const","type": 147,"value": 152},{"import": 695,"src": 141,"name": "count","kind": "const","type": 150,"value": 241},{"import": 695,"src": 528,"name": "popOrNull"},{"import": 695,"src": 78,"name": "toSlice"},{"import": 695,"src": 529,"name": "Self","kind": "const","type": 383,"value": 391},{"import": 699,"src": 530,"name": "createNode"},{"import": 699,"src": 531,"name": "Node","kind": "const","type": 383,"value": 700},{"import": 699,"src": 532,"name": "destroyNode"},{"import": 699,"src": 169,"name": "prepend","kind": "const","type": 225,"value": 273},{"import": 699,"src": 533,"name": "insertAfter"},{"import": 699,"src": 171,"name": "init","kind": "const","type": 226,"value": 275},{"import": 699,"src": 534,"name": "remove"},{"import": 699,"src": 535,"name": "allocateNode"},{"import": 699,"src": 536,"name": "popFirst"},{"import": 699,"src": 537,"name": "Self","kind": "const","type": 383,"value": 394},{"import": 702,"src": 229,"name": "resolve","kind": "const","type": 320,"value": 422},{"import": 702,"src": 228,"name": "get","kind": "const","type": 319,"value": 421},{"import": 702,"src": 538,"name": "Data","kind": "const","type": 383,"value": 405},{"import": 702,"src": 539,"name": "State","kind": "const","type": 383,"value": 703},{"import": 702,"src": 540,"name": "Self","kind": "const","type": 383,"value": 404},{"import": 702,"src": 541,"name": "Ptr","kind": "const","type": 383,"value": 704},{"import": 706,"src": 542,"name": "Struct","kind": "const","type": 383,"value": 707},{"import": 706,"src": 543,"name": "Array","kind": "const","type": 383,"value": 708},{"import": 706,"src": 544,"name": "ErrorUnion","kind": "const","type": 383,"value": 709},{"import": 706,"src": 545,"name": "Pointer","kind": "const","type": 383,"value": 710},{"import": 706,"src": 546,"name": "EnumField","kind": "const","type": 383,"value": 711},{"import": 706,"src": 547,"name": "ContainerLayout","kind": "const","type": 383,"value": 712},{"import": 706,"src": 548,"name": "Declaration","kind": "const","type": 383,"value": 713},{"import": 706,"src": 549,"name": "Union","kind": "const","type": 383,"value": 714},{"import": 706,"src": 550,"name": "ErrorSet","kind": "const","type": 383,"value": 715},{"import": 706,"src": 551,"name": "Optional","kind": "const","type": 383,"value": 716},{"import": 706,"src": 552,"name": "Enum","kind": "const","type": 383,"value": 717},{"import": 706,"src": 553,"name": "CallingConvention","kind": "const","type": 383,"value": 718},{"import": 706,"src": 554,"name": "Vector","kind": "const","type": 383,"value": 719},{"import": 706,"src": 555,"name": "Float","kind": "const","type": 383,"value": 720},{"import": 706,"src": 556,"name": "UnionField","kind": "const","type": 383,"value": 721},{"import": 706,"src": 557,"name": "StructField","kind": "const","type": 383,"value": 722},{"import": 706,"src": 558,"name": "AnyFrame","kind": "const","type": 383,"value": 723},{"import": 706,"src": 559,"name": "Error","kind": "const","type": 383,"value": 724},{"import": 706,"src": 560,"name": "Fn","kind": "const","type": 383,"value": 725},{"import": 706,"src": 561,"name": "FnArg","kind": "const","type": 383,"value": 726},{"import": 706,"src": 562,"name": "Int","kind": "const","type": 383,"value": 727},{"import": 728,"src": 563,"name": "dump"},{"import": 728,"src": 564,"name": "dumpToStream"},{"import": 728,"src": 565,"name": "Node","kind": "const","type": 383,"value": 729},{"import": 728,"src": 566,"name": "put"},{"import": 728,"src": 567,"name": "init"},{"import": 728,"src": 568,"name": "unget"},{"import": 728,"src": 569,"name": "get"},{"import": 728,"src": 570,"name": "Self"},{"import": 728,"src": 571,"name": "remove"},{"import": 728,"src": 572,"name": "isEmpty"},{"import": 731,"src": 573,"name": "pop"},{"import": 731,"src": 574,"name": "init"},{"import": 731,"src": 575,"name": "Self"},{"import": 731,"src": 576,"name": "pushFirst"},{"import": 731,"src": 577,"name": "Node","kind": "const","type": 383,"value": 732},{"import": 731,"src": 578,"name": "push"},{"import": 731,"src": 579,"name": "isEmpty"},{"import": 731,"src": 580,"name": "lock_init","kind": "const","type": 384,"value": null},{"import": 735,"src": 581,"name": "clone"},{"import": 735,"src": 582,"name": "ensureCapacity"},{"import": 735,"src": 583,"name": "getOrPut"},{"import": 735,"src": 584,"name": "putNoClobber"},{"import": 735,"src": 585,"name": "iterator"},{"import": 735,"src": 586,"name": "KV","kind": "const","type": 383,"value": 736},{"import": 735,"src": 587,"name": "get"},{"import": 735,"src": 588,"name": "GetOrPutResult"},{"import": 735,"src": 589,"name": "clear"},{"import": 735,"src": 590,"name": "putAssumeCapacity"},{"import": 735,"src": 591,"name": "deinit"},{"import": 735,"src": 592,"name": "getOrPutValue"},{"import": 735,"src": 593,"name": "getValue"},{"import": 735,"src": 594,"name": "put"},{"import": 735,"src": 595,"name": "Iterator"},{"import": 735,"src": 596,"name": "init"},{"import": 735,"src": 597,"name": "count"},{"import": 735,"src": 598,"name": "contains"},{"import": 735,"src": 599,"name": "remove"},{"import": 735,"src": 600,"name": "removeAssertDiscard"},{"import": 735,"src": 601,"name": "optimizedCapacity"},{"import": 735,"src": 602,"name": "initCapacity"},{"import": 735,"src": 603,"name": "keyToIndex"},{"import": 735,"src": 604,"name": "Self"},{"import": 735,"src": 605,"name": "autoCapacity"},{"import": 735,"src": 606,"name": "incrementModificationCount"},{"import": 735,"src": 607,"name": "constrainIndex"},{"import": 735,"src": 608,"name": "InternalPutResult"},{"import": 735,"src": 609,"name": "internalPut"},{"import": 735,"src": 610,"name": "Entry","kind": "const","type": 383,"value": 737},{"import": 735,"src": 611,"name": "ensureCapacityExact"},{"import": 735,"src": 612,"name": "internalGet"},{"import": 695,"src": 509,"name": "set"},{"import": 695,"src": 70,"name": "ensureCapacity","kind": "const","type": 118,"value": 123},{"import": 695,"src": 510,"name": "setOrError"},{"import": 695,"src": 511,"name": "appendAssumeCapacity"},{"import": 695,"src": 512,"name": "swapRemoveOrError"},{"import": 695,"src": 513,"name": "at"},{"import": 695,"src": 71,"name": "capacity","kind": "const","type": 119,"value": 124},{"import": 695,"src": 514,"name": "swapRemove"},{"import": 695,"src": 515,"name": "iterator"},{"import": 695,"src": 516,"name": "pop"},{"import": 695,"src": 517,"name": "toSliceConst"},{"import": 695,"src": 518,"name": "appendSlice"},{"import": 695,"src": 519,"name": "insertSlice"},{"import": 695,"src": 520,"name": "fromOwnedSlice"},{"import": 695,"src": 521,"name": "SliceConst"},{"import": 695,"src": 73,"name": "append","kind": "const","type": 116,"value": 121},{"import": 695,"src": 199,"name": "resize"},{"import": 695,"src": 522,"name": "deinit"},{"import": 695,"src": 523,"name": "insert"},{"import": 695,"src": 74,"name": "addOne","kind": "const","type": 117,"value": 122},{"import": 695,"src": 75,"name": "addOneAssumeCapacity","kind": "const","type": 121,"value": 126},{"import": 695,"src": 524,"name": "Iterator"},{"import": 695,"src": 525,"name": "shrink"},{"import": 695,"src": 526,"name": "Slice","kind": "const","type": 383,"value": 556},{"import": 695,"src": 103,"name": "toOwnedSlice","kind": "const","type": 122,"value": 127},{"import": 695,"src": 527,"name": "orderedRemove"},{"import": 695,"src": 102,"name": "init","kind": "const","type": 115,"value": 120},{"import": 695,"src": 141,"name": "count","kind": "const","type": 119,"value": 231},{"import": 695,"src": 528,"name": "popOrNull"},{"import": 695,"src": 78,"name": "toSlice"},{"import": 695,"src": 529,"name": "Self","kind": "const","type": 383,"value": 424},{"import": 695,"src": 509,"name": "set"},{"import": 695,"src": 70,"name": "ensureCapacity","kind": "const","type": 135,"value": 140},{"import": 695,"src": 510,"name": "setOrError"},{"import": 695,"src": 511,"name": "appendAssumeCapacity"},{"import": 695,"src": 512,"name": "swapRemoveOrError"},{"import": 695,"src": 513,"name": "at"},{"import": 695,"src": 71,"name": "capacity","kind": "const","type": 136,"value": 141},{"import": 695,"src": 514,"name": "swapRemove"},{"import": 695,"src": 515,"name": "iterator"},{"import": 695,"src": 516,"name": "pop"},{"import": 695,"src": 517,"name": "toSliceConst"},{"import": 695,"src": 518,"name": "appendSlice"},{"import": 695,"src": 519,"name": "insertSlice"},{"import": 695,"src": 520,"name": "fromOwnedSlice"},{"import": 695,"src": 521,"name": "SliceConst"},{"import": 695,"src": 73,"name": "append","kind": "const","type": 133,"value": 138},{"import": 695,"src": 199,"name": "resize","kind": "const","type": 269,"value": 327},{"import": 695,"src": 522,"name": "deinit"},{"import": 695,"src": 523,"name": "insert"},{"import": 695,"src": 74,"name": "addOne","kind": "const","type": 134,"value": 139},{"import": 695,"src": 75,"name": "addOneAssumeCapacity","kind": "const","type": 138,"value": 143},{"import": 695,"src": 524,"name": "Iterator"},{"import": 695,"src": 525,"name": "shrink"},{"import": 695,"src": 526,"name": "Slice","kind": "const","type": 383,"value": 395},{"import": 695,"src": 103,"name": "toOwnedSlice","kind": "const","type": 270,"value": 328},{"import": 695,"src": 527,"name": "orderedRemove"},{"import": 695,"src": 102,"name": "init","kind": "const","type": 130,"value": 135},{"import": 695,"src": 141,"name": "count","kind": "const","type": 136,"value": 236},{"import": 695,"src": 528,"name": "popOrNull"},{"import": 695,"src": 78,"name": "toSlice","kind": "const","type": 132,"value": 137},{"import": 695,"src": 529,"name": "Self","kind": "const","type": 383,"value": 425},{"import": 695,"src": 509,"name": "set"},{"import": 695,"src": 70,"name": "ensureCapacity","kind": "const","type": 252,"value": 309},{"import": 695,"src": 510,"name": "setOrError"},{"import": 695,"src": 511,"name": "appendAssumeCapacity"},{"import": 695,"src": 512,"name": "swapRemoveOrError"},{"import": 695,"src": 513,"name": "at"},{"import": 695,"src": 71,"name": "capacity","kind": "const","type": 253,"value": 310},{"import": 695,"src": 514,"name": "swapRemove"},{"import": 695,"src": 515,"name": "iterator"},{"import": 695,"src": 516,"name": "pop"},{"import": 695,"src": 517,"name": "toSliceConst"},{"import": 695,"src": 518,"name": "appendSlice"},{"import": 695,"src": 519,"name": "insertSlice"},{"import": 695,"src": 520,"name": "fromOwnedSlice"},{"import": 695,"src": 521,"name": "SliceConst"},{"import": 695,"src": 73,"name": "append","kind": "const","type": 259,"value": 317},{"import": 695,"src": 199,"name": "resize"},{"import": 695,"src": 522,"name": "deinit"},{"import": 695,"src": 523,"name": "insert"},{"import": 695,"src": 74,"name": "addOne","kind": "const","type": 260,"value": 318},{"import": 695,"src": 75,"name": "addOneAssumeCapacity","kind": "const","type": 261,"value": 319},{"import": 695,"src": 524,"name": "Iterator"},{"import": 695,"src": 525,"name": "shrink"},{"import": 695,"src": 526,"name": "Slice","kind": "const","type": 383,"value": 608},{"import": 695,"src": 103,"name": "toOwnedSlice","kind": "const","type": 262,"value": 320},{"import": 695,"src": 527,"name": "orderedRemove"},{"import": 695,"src": 102,"name": "init","kind": "const","type": 251,"value": 308},{"import": 695,"src": 141,"name": "count","kind": "const","type": 253,"value": 359},{"import": 695,"src": 528,"name": "popOrNull"},{"import": 695,"src": 78,"name": "toSlice"},{"import": 695,"src": 529,"name": "Self","kind": "const","type": 383,"value": 426},{"import": 742,"src": 79,"name": "readByte","kind": "const","type": 131,"value": 136},{"import": 742,"src": 613,"name": "readIntBig"},{"import": 742,"src": 77,"name": "readStruct","kind": "const","type": 743,"value": 588},{"import": 742,"src": 614,"name": "skipBytes"},{"import": 742,"src": 98,"name": "read","kind": "const","type": 108,"value": 228},{"import": 742,"src": 615,"name": "readAllAlloc"},{"import": 742,"src": 616,"name": "readUntilDelimiterBuffer"},{"import": 742,"src": 617,"name": "readIntForeign"},{"import": 742,"src": 618,"name": "ReadFn","kind": "const","type": 383,"value": 108},{"import": 742,"src": 619,"name": "readIntNative"},{"import": 742,"src": 61,"name": "readFull","kind": "const","type": 108,"value": 112},{"import": 742,"src": 60,"name": "readNoEof","kind": "const","type": 107,"value": 111},{"import": 742,"src": 620,"name": "readByteSigned"},{"import": 742,"src": 621,"name": "readVarInt"},{"import": 742,"src": 622,"name": "skipUntilDelimiterOrEof"},{"import": 742,"src": 623,"name": "Error","kind": "const","type": 383,"value": 438},{"import": 742,"src": 64,"name": "readIntLittle","kind": "const","type": 744,"value": 589},{"import": 742,"src": 624,"name": "readUntilDelimiterOrEof"},{"import": 742,"src": 625,"name": "readUntilDelimiterAlloc"},{"import": 742,"src": 626,"name": "readAllBuffer"},{"import": 742,"src": 627,"name": "readInt"},{"import": 742,"src": 628,"name": "Self","kind": "const","type": 383,"value": 437},{"import": 742,"src": 79,"name": "readByte","kind": "const","type": 86,"value": 90},{"import": 742,"src": 613,"name": "readIntBig"},{"import": 742,"src": 77,"name": "readStruct","kind": "const","type": 745,"value": 590},{"import": 742,"src": 614,"name": "skipBytes"},{"import": 742,"src": 98,"name": "read","kind": "const","type": 66,"value": 114},{"import": 742,"src": 615,"name": "readAllAlloc"},{"import": 742,"src": 616,"name": "readUntilDelimiterBuffer"},{"import": 742,"src": 617,"name": "readIntForeign"},{"import": 742,"src": 618,"name": "ReadFn","kind": "const","type": 383,"value": 66},{"import": 742,"src": 619,"name": "readIntNative"},{"import": 742,"src": 61,"name": "readFull","kind": "const","type": 66,"value": 69},{"import": 742,"src": 60,"name": "readNoEof","kind": "const","type": 65,"value": 68},{"import": 742,"src": 620,"name": "readByteSigned"},{"import": 742,"src": 621,"name": "readVarInt"},{"import": 742,"src": 622,"name": "skipUntilDelimiterOrEof"},{"import": 742,"src": 623,"name": "Error","kind": "const","type": 383,"value": 440},{"import": 742,"src": 64,"name": "readIntLittle","kind": "const","type": 746,"value": 591},{"import": 742,"src": 624,"name": "readUntilDelimiterOrEof"},{"import": 742,"src": 625,"name": "readUntilDelimiterAlloc"},{"import": 742,"src": 626,"name": "readAllBuffer"},{"import": 742,"src": 627,"name": "readInt"},{"import": 742,"src": 628,"name": "Self","kind": "const","type": 383,"value": 439},{"import": 699,"src": 629,"name": "append"},{"import": 699,"src": 630,"name": "createNode"},{"import": 699,"src": 631,"name": "Node","kind": "const","type": 383,"value": 729},{"import": 699,"src": 632,"name": "destroyNode"},{"import": 699,"src": 633,"name": "prepend"},{"import": 699,"src": 634,"name": "pop"},{"import": 699,"src": 635,"name": "insertAfter"},{"import": 699,"src": 636,"name": "init"},{"import": 699,"src": 637,"name": "insertBefore"},{"import": 699,"src": 638,"name": "concatByMoving"},{"import": 699,"src": 639,"name": "remove"},{"import": 699,"src": 640,"name": "popFirst"},{"import": 699,"src": 641,"name": "allocateNode"},{"import": 699,"src": 642,"name": "Self"},{"import": 452,"src": 24,"name": "toSparseSlice","kind": "const","type": 23,"value": 24},{"import": 452,"src": 32,"name": "getByDenseOrError","kind": "const","type": 31,"value": 33},{"import": 452,"src": 18,"name": "len","kind": "const","type": 17,"value": 18},{"import": 452,"src": 35,"name": "getValueByDense","kind": "const","type": 35,"value": 37},{"import": 452,"src": 17,"name": "addValue","kind": "const","type": 16,"value": 17},{"import": 452,"src": 11,"name": "addOrError","kind": "const","type": 10,"value": 11},{"import": 452,"src": 12,"name": "hasSparseOrError","kind": "const","type": 11,"value": 12},{"import": 452,"src": 31,"name": "getValueBySparse","kind": "const","type": 29,"value": 31},{"import": 452,"src": 34,"name": "getValueByDenseOrError","kind": "const","type": 34,"value": 36},{"import": 452,"src": 29,"name": "getBySparse","kind": "const","type": 27,"value": 29},{"import": 452,"src": 26,"name": "clear","kind": "const","type": 25,"value": 26},{"import": 452,"src": 15,"name": "deinit","kind": "const","type": 14,"value": 15},{"import": 452,"src": 33,"name": "getByDense","kind": "const","type": 32,"value": 34},{"import": 452,"src": 16,"name": "addValueOrError","kind": "const","type": 15,"value": 16},{"import": 452,"src": 4,"name": "init","kind": "const","type": 4,"value": 4},{"import": 452,"src": 28,"name": "getBySparseOrError","kind": "const","type": 26,"value": 28},{"import": 452,"src": 14,"name": "add","kind": "const","type": 13,"value": 14},{"import": 452,"src": 22,"name": "removeWithInfoOrError","kind": "const","type": 21,"value": 22},{"import": 452,"src": 27,"name": "remainingCapacity","kind": "const","type": 17,"value": 27},{"import": 452,"src": 23,"name": "removeWithInfo","kind": "const","type": 22,"value": 23},{"import": 452,"src": 25,"name": "toValueSlice","kind": "const","type": 24,"value": 25},{"import": 452,"src": 20,"name": "removeOrError","kind": "const","type": 19,"value": 20},{"import": 452,"src": 21,"name": "remove","kind": "const","type": 20,"value": 21},{"import": 452,"src": 30,"name": "getValueBySparseOrError","kind": "const","type": 28,"value": 30},{"import": 452,"src": 13,"name": "hasSparse","kind": "const","type": 12,"value": 13},{"import": 452,"src": 643,"name": "Self","kind": "const","type": 383,"value": 444},{"import": 750,"src": 644,"name": "WriteFn","kind": "const","type": 383,"value": 39},{"import": 750,"src": 645,"name": "writeIntLittle"},{"import": 750,"src": 646,"name": "writeInt"},{"import": 750,"src": 39,"name": "print","kind": "const","type": 751,"value": 592},{"import": 750,"src": 647,"name": "writeIntNative"},{"import": 750,"src": 648,"name": "Error","kind": "const","type": 383,"value": 448},{"import": 750,"src": 649,"name": "writeIntForeign"},{"import": 750,"src": 120,"name": "writeByte","kind": "const","type": 171,"value": 182},{"import": 750,"src": 650,"name": "writeByteNTimes"},{"import": 750,"src": 651,"name": "writeIntBig"},{"import": 750,"src": 121,"name": "write","kind": "const","type": 39,"value": 183},{"import": 750,"src": 652,"name": "Self","kind": "const","type": 383,"value": 447},{"import": 452,"src": 653,"name": "SparseSetConfig","kind": "const","type": 383,"value": 445},{"import": 452,"src": 297,"name": "SparseSet","kind": "const","type": 443,"value": 584},{"import": 452,"src": 654,"name": "ValueLayout","kind": "const","type": 383,"value": 747},{"import": 452,"src": 655,"name": "AllowResize","kind": "const","type": 383,"value": 749},{"import": 452,"src": 656,"name": "ValueInitialization","kind": "const","type": 383,"value": 748},{"import": 452,"src": 657,"name": "std","kind": "const","type": 383,"value": 454},{"import": 452,"src": 658,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 452,"src": 659,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 453,"src": 660,"name": "test_functions","kind": "const","type": 754,"value": null},{"import": 453,"src": 661,"name": "position_independent_code"},{"import": 706,"src": 662,"name": "AtomicRmwOp","kind": "const","type": 383,"value": 755},{"import": 453,"src": 663,"name": "link_libc","kind": "const","type": 382,"value": null},{"import": 706,"src": 0,"name": "default_panic","kind": "const","type": 0,"value": 0},{"import": 453,"src": 664,"name": "object_format"},{"import": 453,"src": 665,"name": "arch","kind": "const","type": 756,"value": null},{"import": 453,"src": 666,"name": "endian","kind": "const","type": 757,"value": null},{"import": 453,"src": 667,"name": "mode","kind": "const","type": 758,"value": null},{"import": 706,"src": 668,"name": "FloatMode"},{"import": 453,"src": 669,"name": "os","kind": "const","type": 759,"value": null},{"import": 706,"src": 670,"name": "TypeId","kind": "const","type": 383,"value": 413},{"import": 706,"src": 671,"name": "AtomicOrder","kind": "const","type": 383,"value": 760},{"import": 453,"src": 672,"name": "abi"},{"import": 706,"src": 673,"name": "ObjectFormat"},{"import": 706,"src": 674,"name": "StackTrace","kind": "const","type": 383,"value": 484},{"import": 453,"src": 675,"name": "explicit_subsystem"},{"import": 453,"src": 676,"name": "is_test"},{"import": 706,"src": 677,"name": "PanicFn","kind": "const","type": 383,"value": 0},{"import": 453,"src": 678,"name": "glibc_version"},{"import": 706,"src": 679,"name": "Arch","kind": "const","type": 383,"value": 761},{"import": 453,"src": 680,"name": "valgrind_support"},{"import": 706,"src": 681,"name": "subsystem"},{"import": 706,"src": 682,"name": "SubSystem"},{"import": 706,"src": 683,"name": "Mode","kind": "const","type": 383,"value": 758},{"import": 706,"src": 684,"name": "Endian","kind": "const","type": 383,"value": 757},{"import": 706,"src": 685,"name": "panic","kind": "const","type": 0,"value": 0},{"import": 453,"src": 686,"name": "strip_debug_info","kind": "const","type": 382,"value": null},{"import": 453,"src": 687,"name": "single_threaded","kind": "const","type": 382,"value": null},{"import": 706,"src": 688,"name": "Os","kind": "const","type": 383,"value": 759},{"import": 706,"src": 689,"name": "Version"},{"import": 706,"src": 690,"name": "Abi"},{"import": 706,"src": 691,"name": "GlobalLinkage","kind": "const","type": 383,"value": 762},{"import": 453,"src": 692,"name": "have_error_return_tracing"},{"import": 706,"src": 693,"name": "TypeInfo","kind": "const","type": 383,"value": 763},{"import": 453,"src": 694,"name": "TestFn","kind": "const","type": 383,"value": 764},{"import": 454,"src": 695,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 454,"src": 696,"name": "DynLib"},{"import": 454,"src": 697,"name": "builtin","kind": "const","type": 383,"value": 706},{"import": 454,"src": 698,"name": "SinglyLinkedList","kind": "const","type": 393,"value": 564},{"import": 454,"src": 699,"name": "PackedIntArrayEndian"},{"import": 454,"src": 700,"name": "PackedIntArray"},{"import": 454,"src": 701,"name": "math","kind": "const","type": 383,"value": 766},{"import": 454,"src": 702,"name": "Thread","kind": "const","type": 383,"value": 767},{"import": 454,"src": 703,"name": "BufSet"},{"import": 454,"src": 704,"name": "fifo"},{"import": 454,"src": 705,"name": "os","kind": "const","type": 383,"value": 768},{"import": 454,"src": 706,"name": "debug","kind": "const","type": 383,"value": 769},{"import": 454,"src": 707,"name": "Buffer"},{"import": 454,"src": 708,"name": "dwarf"},{"import": 454,"src": 709,"name": "testing","kind": "const","type": 383,"value": 770},{"import": 454,"src": 710,"name": "BufferOutStream"},{"import": 454,"src": 711,"name": "event","kind": "const","type": 383,"value": 771},{"import": 454,"src": 712,"name": "unicode","kind": "const","type": 383,"value": 772},{"import": 454,"src": 713,"name": "build"},{"import": 454,"src": 714,"name": "AlignedArrayList"},{"import": 454,"src": 715,"name": "http"},{"import": 454,"src": 716,"name": "elf"},{"import": 454,"src": 717,"name": "SegmentedList"},{"import": 454,"src": 718,"name": "ascii"},{"import": 454,"src": 719,"name": "io","kind": "const","type": 383,"value": 773},{"import": 454,"src": 720,"name": "ChildProcess"},{"import": 454,"src": 721,"name": "hash_map","kind": "const","type": 383,"value": 735},{"import": 454,"src": 722,"name": "ThreadParker","kind": "const","type": 383,"value": 664},{"import": 454,"src": 723,"name": "fmt","kind": "const","type": 383,"value": 774},{"import": 454,"src": 724,"name": "base64"},{"import": 454,"src": 725,"name": "atomic","kind": "const","type": 383,"value": 775},{"import": 454,"src": 726,"name": "TailQueue","kind": "const","type": 441,"value": 583},{"import": 454,"src": 727,"name": "json"},{"import": 454,"src": 728,"name": "lazyInit","kind": "const","type": 776,"value": 593},{"import": 454,"src": 730,"name": "pdb","kind": "const","type": 383,"value": 777},{"import": 454,"src": 731,"name": "BufMap"},{"import": 454,"src": 732,"name": "coff","kind": "const","type": 383,"value": 778},{"import": 454,"src": 733,"name": "crypto"},{"import": 454,"src": 734,"name": "hash","kind": "const","type": 383,"value": 779},{"import": 454,"src": 735,"name": "sort"},{"import": 454,"src": 736,"name": "c"},{"import": 454,"src": 737,"name": "cstr"},{"import": 454,"src": 738,"name": "rb"},{"import": 454,"src": 739,"name": "rand"},{"import": 454,"src": 740,"name": "meta","kind": "const","type": 383,"value": 780},{"import": 454,"src": 741,"name": "net"},{"import": 454,"src": 742,"name": "fs","kind": "const","type": 383,"value": 781},{"import": 454,"src": 743,"name": "heap","kind": "const","type": 383,"value": 782},{"import": 454,"src": 744,"name": "AutoHashMap"},{"import": 454,"src": 745,"name": "Mutex","kind": "const","type": 383,"value": 663},{"import": 454,"src": 746,"name": "PriorityQueue"},{"import": 454,"src": 747,"name": "time","kind": "const","type": 383,"value": 783},{"import": 454,"src": 748,"name": "Progress","kind": "const","type": 383,"value": 784},{"import": 454,"src": 749,"name": "Target","kind": "const","type": 383,"value": 785},{"import": 454,"src": 750,"name": "packed_int_array"},{"import": 454,"src": 751,"name": "valgrind"},{"import": 454,"src": 752,"name": "PackedIntSliceEndian"},{"import": 454,"src": 753,"name": "HashMap","kind": "const","type": 420,"value": 575},{"import": 454,"src": 754,"name": "zig"},{"import": 454,"src": 755,"name": "ArrayList","kind": "const","type": 386,"value": 563},{"import": 454,"src": 756,"name": "SpinLock","kind": "const","type": 383,"value": 786},{"import": 454,"src": 757,"name": "PackedIntSlice"},{"import": 454,"src": 758,"name": "process","kind": "const","type": 383,"value": 787},{"import": 454,"src": 759,"name": "macho","kind": "const","type": 383,"value": 788},{"import": 454,"src": 760,"name": "BloomFilter"},{"import": 454,"src": 761,"name": "StringHashMap"},{"import": 455,"src": 259,"name": "main","kind": "const","type": 1,"value": 465},{"import": 455,"src": 762,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 455,"src": 763,"name": "io"},{"import": 455,"src": 764,"name": "std","kind": "const","type": 383,"value": 454},{"import": 455,"src": 765,"name": "test_fn_list","kind": "const","type": 754,"value": null},{"import": 782,"src": 5,"name": "init","kind": "const","type": 5,"value": 5},{"import": 782,"src": 10,"name": "shrink","kind": "const","type": 9,"value": 10},{"import": 782,"src": 6,"name": "realloc","kind": "const","type": 6,"value": 6},{"import": 782,"src": 7,"name": "alloc","kind": "const","type": 7,"value": 7},{"import": 805,"src": 47,"name": "outStream","kind": "const","type": 52,"value": 55},{"import": 805,"src": 766,"name": "seekableStream"},{"import": 805,"src": 767,"name": "OpenError","kind": "const","type": 383,"value": 806},{"import": 805,"src": 95,"name": "getEndPos","kind": "const","type": 103,"value": 107},{"import": 805,"src": 768,"name": "mode"},{"import": 805,"src": 158,"name": "isTty","kind": "const","type": 207,"value": 246},{"import": 805,"src": 769,"name": "stat"},{"import": 805,"src": 135,"name": "openReadW","kind": "const","type": 186,"value": 205},{"import": 805,"src": 770,"name": "openReadC"},{"import": 805,"src": 56,"name": "close","kind": "const","type": 61,"value": 64},{"import": 805,"src": 771,"name": "openWriteNoClobber"},{"import": 805,"src": 125,"name": "openHandle","kind": "const","type": 178,"value": 195},{"import": 805,"src": 772,"name": "openWrite"},{"import": 805,"src": 63,"name": "seekTo","kind": "const","type": 68,"value": 71},{"import": 805,"src": 773,"name": "Mode"},{"import": 805,"src": 774,"name": "UpdateTimesError"},{"import": 805,"src": 775,"name": "Stat"},{"import": 805,"src": 776,"name": "InStream","kind": "const","type": 383,"value": 500},{"import": 805,"src": 119,"name": "read","kind": "const","type": 170,"value": 181},{"import": 805,"src": 777,"name": "seekFromEnd"},{"import": 805,"src": 67,"name": "seekBy","kind": "const","type": 74,"value": 77},{"import": 805,"src": 778,"name": "ReadError","kind": "const","type": 383,"value": 440},{"import": 805,"src": 779,"name": "ModeError"},{"import": 805,"src": 780,"name": "SeekError","kind": "const","type": 383,"value": 807},{"import": 805,"src": 781,"name": "getPos"},{"import": 805,"src": 782,"name": "writev_iovec"},{"import": 805,"src": 783,"name": "default_mode"},{"import": 805,"src": 784,"name": "openWriteModeW"},{"import": 805,"src": 160,"name": "write","kind": "const","type": 209,"value": 249},{"import": 805,"src": 59,"name": "inStream","kind": "const","type": 64,"value": 67},{"import": 805,"src": 785,"name": "OutStream","kind": "const","type": 383,"value": 489},{"import": 805,"src": 786,"name": "openWriteModeC"},{"import": 805,"src": 787,"name": "openWriteMode"},{"import": 805,"src": 788,"name": "openWriteNoClobberW"},{"import": 805,"src": 789,"name": "GetPosError","kind": "const","type": 383,"value": 808},{"import": 805,"src": 790,"name": "StatError"},{"import": 805,"src": 159,"name": "supportsAnsiEscapeCodes","kind": "const","type": 207,"value": 248},{"import": 805,"src": 93,"name": "openRead","kind": "const","type": 100,"value": 104},{"import": 805,"src": 791,"name": "SeekableStream"},{"import": 805,"src": 792,"name": "WriteError","kind": "const","type": 383,"value": 448},{"import": 805,"src": 793,"name": "access"},{"import": 805,"src": 794,"name": "updateTimes"},{"import": 805,"src": 795,"name": "accessW"},{"import": 805,"src": 796,"name": "accessC"},{"import": 805,"src": 797,"name": "openWriteNoClobberC"},{"import": 805,"src": 798,"name": "Error","kind": "const","type": 383,"value": 448},{"import": 805,"src": 799,"name": "Stream","kind": "const","type": 383,"value": 447},{"import": 805,"src": 127,"name": "writeFn","kind": "const","type": 39,"value": 197},{"import": 778,"src": 69,"name": "loadSections","kind": "const","type": 76,"value": 79},{"import": 778,"src": 76,"name": "getSection","kind": "const","type": 814,"value": 594},{"import": 778,"src": 57,"name": "init","kind": "const","type": 62,"value": 65},{"import": 778,"src": 68,"name": "getPdbPath","kind": "const","type": 75,"value": 78},{"import": 778,"src": 58,"name": "loadHeader","kind": "const","type": 63,"value": 66},{"import": 778,"src": 66,"name": "loadOptionalHeader","kind": "const","type": 73,"value": 76},{"import": 805,"src": 800,"name": "Error","kind": "const","type": 383,"value": 440},{"import": 805,"src": 801,"name": "Stream","kind": "const","type": 383,"value": 439},{"import": 805,"src": 137,"name": "readFn","kind": "const","type": 66,"value": 209},{"import": 835,"src": 802,"name": "Kind","kind": "const","type": 383,"value": 529},{"import": 765,"src": 88,"name": "next","kind": "const","type": 95,"value": 99},{"import": 765,"src": 803,"name": "rest"},{"import": 765,"src": 145,"name": "isSplitByte","kind": "const","type": 193,"value": 217},{"import": 777,"src": 804,"name": "Stream","kind": "const","type": 383,"value": 437},{"import": 777,"src": 805,"name": "Error","kind": "const","type": 383,"value": 438},{"import": 777,"src": 49,"name": "read","kind": "const","type": 54,"value": 57},{"import": 777,"src": 806,"name": "getSize"},{"import": 777,"src": 106,"name": "readNullTermString","kind": "const","type": 129,"value": 134},{"import": 777,"src": 107,"name": "seekBy","kind": "const","type": 139,"value": 144},{"import": 777,"src": 117,"name": "seekTo","kind": "const","type": 166,"value": 174},{"import": 777,"src": 97,"name": "init","kind": "const","type": 105,"value": 109},{"import": 777,"src": 154,"name": "readFn","kind": "const","type": 108,"value": 227},{"import": 777,"src": 807,"name": "getFilePos"},{"import": 769,"src": 808,"name": "deinit"},{"import": 782,"src": 129,"name": "init","kind": "const","type": 181,"value": 199},{"import": 782,"src": 809,"name": "deinit"},{"import": 782,"src": 170,"name": "shrink","kind": "const","type": 9,"value": 274},{"import": 782,"src": 168,"name": "createNode","kind": "const","type": 223,"value": 271},{"import": 782,"src": 166,"name": "realloc","kind": "const","type": 221,"value": 269},{"import": 782,"src": 167,"name": "alloc","kind": "const","type": 222,"value": 270},{"import": 782,"src": 810,"name": "BufNode","kind": "const","type": 383,"value": 700},{"import": 782,"src": 811,"name": "reset"},{"import": 782,"src": 156,"name": "init","kind": "const","type": 205,"value": 244},{"import": 782,"src": 188,"name": "shrink","kind": "const","type": 9,"value": 306},{"import": 782,"src": 186,"name": "realloc","kind": "const","type": 248,"value": 304},{"import": 782,"src": 187,"name": "alloc","kind": "const","type": 249,"value": 305},{"import": 772,"src": 180,"name": "nextCodepoint","kind": "const","type": 236,"value": 287},{"import": 772,"src": 179,"name": "init","kind": "const","type": 235,"value": 286},{"import": 772,"src": 812,"name": "initComptime"},{"import": 772,"src": 190,"name": "init","kind": "const","type": 255,"value": 312},{"import": 772,"src": 192,"name": "initUnchecked","kind": "const","type": 256,"value": 314},{"import": 772,"src": 193,"name": "iterator","kind": "const","type": 257,"value": 315},{"import": 772,"src": 208,"name": "nextCodepointSlice","kind": "const","type": 283,"value": 358},{"import": 772,"src": 194,"name": "nextCodepoint","kind": "const","type": 258,"value": 316},{"import": 927,"src": 212,"name": "init","kind": "const","type": 293,"value": 380},{"import": 927,"src": 214,"name": "acquire","kind": "const","type": 295,"value": 382},{"import": 927,"src": 813,"name": "deinit"},{"import": 927,"src": 814,"name": "Held","kind": "const","type": 383,"value": 665},{"import": 927,"src": 815,"name": "SPIN_CPU","kind": "const","type": 409,"value": null},{"import": 927,"src": 816,"name": "State","kind": "const","type": 383,"value": 928},{"import": 927,"src": 817,"name": "SPIN_THREAD","kind": "const","type": 409,"value": null},{"import": 927,"src": 818,"name": "SPIN_CPU_COUNT","kind": "const","type": 409,"value": null},{"import": 929,"src": 222,"name": "unpark","kind": "const","type": 307,"value": 403},{"import": 929,"src": 213,"name": "init","kind": "const","type": 294,"value": 381},{"import": 929,"src": 819,"name": "deinit"},{"import": 929,"src": 221,"name": "park","kind": "const","type": 305,"value": 401},{"import": 929,"src": 225,"name": "getEventHandle","kind": "const","type": 313,"value": 412},{"import": 929,"src": 820,"name": "event_handle","kind": "var","type": 404,"value": null},{"import": 927,"src": 215,"name": "release","kind": "const","type": 297,"value": 384},{"import": 932,"src": 226,"name": "yield","kind": "const","type": 314,"value": 413},{"import": 932,"src": 224,"name": "init","kind": "const","type": 312,"value": 411},{"import": 933,"src": 821,"name": "hash"},{"import": 933,"src": 237,"name": "init","kind": "const","type": 327,"value": 435},{"import": 933,"src": 243,"name": "update","kind": "const","type": 332,"value": 441},{"import": 933,"src": 239,"name": "final","kind": "const","type": 329,"value": 437},{"import": 933,"src": 822,"name": "hash"},{"import": 933,"src": 240,"name": "init","kind": "const","type": 330,"value": 438},{"import": 933,"src": 250,"name": "update","kind": "const","type": 337,"value": 450},{"import": 933,"src": 242,"name": "final","kind": "const","type": 331,"value": 440},{"import": 933,"src": 252,"name": "round","kind": "const","type": 337,"value": 454},{"import": 940,"src": 263,"name": "activate","kind": "const","type": 352,"value": 474},{"import": 940,"src": 273,"name": "completeOne","kind": "const","type": 352,"value": 501},{"import": 940,"src": 265,"name": "end","kind": "const","type": 352,"value": 477},{"import": 940,"src": 262,"name": "start","kind": "const","type": 351,"value": 473},{"import": 695,"src": 276,"name": "ArrayList","kind": "const","type": 386,"value": 563},{"import": 695,"src": 282,"name": "AlignedArrayList","kind": "const","type": 406,"value": 569},{"import": 695,"src": 823,"name": "std","kind": "const","type": 383,"value": 454},{"import": 695,"src": 824,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 695,"src": 825,"name": "Item"},{"import": 695,"src": 826,"name": "debug","kind": "const","type": 383,"value": 769},{"import": 695,"src": 827,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 695,"src": 828,"name": "testing"},{"import": 695,"src": 829,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 778,"src": 830,"name": "Misc","kind": "const","type": 383,"value": 945},{"import": 699,"src": 277,"name": "SinglyLinkedList","kind": "const","type": 393,"value": 564},{"import": 699,"src": 296,"name": "TailQueue","kind": "const","type": 441,"value": 583},{"import": 699,"src": 831,"name": "std"},{"import": 699,"src": 832,"name": "Allocator"},{"import": 699,"src": 833,"name": "debug"},{"import": 699,"src": 834,"name": "assert"},{"import": 699,"src": 835,"name": "testing"},{"import": 699,"src": 836,"name": "mem"},{"import": 699,"src": 837,"name": "removeNext"},{"import": 699,"src": 838,"name": "insertAfter"},{"import": 699,"src": 839,"name": "init"},{"import": 702,"src": 729,"name": "lazyInit","kind": "const","type": 776,"value": 593},{"import": 702,"src": 840,"name": "std","kind": "const","type": 383,"value": 454},{"import": 702,"src": 841,"name": "global_number"},{"import": 702,"src": 281,"name": "LazyInit","kind": "const","type": 403,"value": 568},{"import": 702,"src": 842,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 702,"src": 843,"name": "testing"},{"import": 702,"src": 844,"name": "global_void"},{"import": 706,"src": 845,"name": "root","kind": "const","type": 383,"value": 946},{"import": 706,"src": 846,"name": "std","kind": "const","type": 383,"value": 454},{"import": 706,"src": 847,"name": "Size","kind": "const","type": 383,"value": 949},{"import": 706,"src": 848,"name": "Data","kind": "const","type": 383,"value": 950},{"import": 728,"src": 286,"name": "Queue","kind": "const","type": 414,"value": 573},{"import": 728,"src": 849,"name": "builtin"},{"import": 728,"src": 850,"name": "put_thread_count"},{"import": 728,"src": 851,"name": "AtomicRmwOp"},{"import": 728,"src": 852,"name": "puts_per_thread"},{"import": 728,"src": 853,"name": "std","kind": "const","type": 383,"value": 454},{"import": 728,"src": 854,"name": "startPuts"},{"import": 728,"src": 855,"name": "AtomicOrder"},{"import": 728,"src": 856,"name": "expect"},{"import": 728,"src": 857,"name": "assert"},{"import": 728,"src": 858,"name": "Context"},{"import": 728,"src": 859,"name": "startGets"},{"import": 699,"src": 860,"name": "init"},{"import": 731,"src": 287,"name": "Stack","kind": "const","type": 417,"value": 574},{"import": 731,"src": 861,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 731,"src": 862,"name": "put_thread_count"},{"import": 731,"src": 863,"name": "puts_per_thread"},{"import": 731,"src": 864,"name": "std"},{"import": 731,"src": 865,"name": "startPuts"},{"import": 731,"src": 866,"name": "AtomicOrder"},{"import": 731,"src": 867,"name": "expect"},{"import": 731,"src": 868,"name": "assert"},{"import": 731,"src": 869,"name": "Context"},{"import": 731,"src": 870,"name": "startGets"},{"import": 960,"src": 871,"name": "Id","kind": "const","type": 383,"value": 961},{"import": 960,"src": 872,"name": "overlapped_init","kind": "const","type": 962,"value": null},{"import": 960,"src": 873,"name": "Overlapped","kind": "const","type": 383,"value": 962},{"import": 960,"src": 874,"name": "EventFd","kind": "const","type": 383,"value": 419},{"import": 960,"src": 875,"name": "Basic"},{"import": 960,"src": 876,"name": "KEventBasic"},{"import": 960,"src": 877,"name": "KEventFd"},{"import": 735,"src": 878,"name": "getAutoEqlFn"},{"import": 735,"src": 879,"name": "hashString"},{"import": 735,"src": 299,"name": "getTrivialEqlFn","kind": "const","type": 449,"value": 586},{"import": 735,"src": 880,"name": "getAutoHashStratFn"},{"import": 735,"src": 881,"name": "AutoHashMap"},{"import": 735,"src": 235,"name": "getAutoHashFn","kind": "const","type": 963,"value": 595},{"import": 735,"src": 288,"name": "HashMap","kind": "const","type": 420,"value": 575},{"import": 735,"src": 882,"name": "eqlString"},{"import": 735,"src": 289,"name": "getHashPtrAddrFn","kind": "const","type": 428,"value": 576},{"import": 735,"src": 883,"name": "StringHashMap"},{"import": 735,"src": 884,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 735,"src": 885,"name": "Wyhash","kind": "const","type": 383,"value": 675},{"import": 735,"src": 886,"name": "math"},{"import": 735,"src": 887,"name": "std","kind": "const","type": 383,"value": 454},{"import": 735,"src": 888,"name": "debug"},{"import": 735,"src": 889,"name": "meta"},{"import": 735,"src": 890,"name": "testing"},{"import": 735,"src": 891,"name": "debug_u32","kind": "const","type": 383,"value": 397},{"import": 735,"src": 892,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 735,"src": 893,"name": "want_modification_safety","kind": "const","type": 382,"value": null},{"import": 735,"src": 894,"name": "autoHash","kind": "const","type": 964,"value": 596},{"import": 735,"src": 895,"name": "assert"},{"import": 735,"src": 896,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 742,"src": 897,"name": "default_stack_size"},{"import": 742,"src": 898,"name": "stack_size"},{"import": 742,"src": 295,"name": "InStream","kind": "const","type": 436,"value": 582},{"import": 742,"src": 899,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 742,"src": 900,"name": "root"},{"import": 742,"src": 901,"name": "math"},{"import": 742,"src": 902,"name": "std","kind": "const","type": 383,"value": 454},{"import": 742,"src": 903,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 742,"src": 904,"name": "Buffer"},{"import": 742,"src": 905,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 750,"src": 298,"name": "OutStream","kind": "const","type": 446,"value": 585},{"import": 750,"src": 906,"name": "stack_size"},{"import": 750,"src": 907,"name": "default_stack_size"},{"import": 750,"src": 908,"name": "builtin"},{"import": 750,"src": 909,"name": "std","kind": "const","type": 383,"value": 454},{"import": 750,"src": 910,"name": "root"},{"import": 750,"src": 911,"name": "mem"},{"import": 765,"src": 912,"name": "destroy"},{"import": 765,"src": 72,"name": "realloc","kind": "const","type": 966,"value": 597},{"import": 765,"src": 91,"name": "shrink","kind": "const","type": 967,"value": 598},{"import": 765,"src": 913,"name": "Error","kind": "const","type": 383,"value": 804},{"import": 765,"src": 147,"name": "alignedShrink","kind": "const","type": 968,"value": 599},{"import": 765,"src": 124,"name": "alignedAlloc","kind": "const","type": 969,"value": 600},{"import": 765,"src": 42,"name": "alloc","kind": "const","type": 970,"value": 601},{"import": 765,"src": 140,"name": "alignedRealloc","kind": "const","type": 971,"value": 602},{"import": 765,"src": 44,"name": "free","kind": "const","type": 972,"value": 603},{"import": 765,"src": 55,"name": "create","kind": "const","type": 973,"value": 604},{"import": 975,"src": 914,"name": "Arm32","kind": "const","type": 383,"value": 976},{"import": 975,"src": 915,"name": "Kalimba","kind": "const","type": 383,"value": 977},{"import": 975,"src": 916,"name": "Mips"},{"import": 975,"src": 917,"name": "Arm64","kind": "const","type": 383,"value": 978},{"import": 765,"src": 104,"name": "toSlice","kind": "const","type": 979,"value": 605},{"import": 765,"src": 918,"name": "subArrayPtr"},{"import": 765,"src": 231,"name": "set","kind": "const","type": 980,"value": 606},{"import": 765,"src": 919,"name": "reverse"},{"import": 765,"src": 920,"name": "writeIntSliceBig"},{"import": 765,"src": 198,"name": "readIntSliceNative","kind": "const","type": 981,"value": 607},{"import": 765,"src": 921,"name": "toBytes"},{"import": 765,"src": 922,"name": "rotate"},{"import": 765,"src": 155,"name": "len","kind": "const","type": 982,"value": 608},{"import": 765,"src": 923,"name": "bytesToValue"},{"import": 765,"src": 924,"name": "writeIntForeign"},{"import": 765,"src": 116,"name": "toSliceConst","kind": "const","type": 983,"value": 609},{"import": 765,"src": 925,"name": "separate"},{"import": 765,"src": 926,"name": "SplitIterator"},{"import": 765,"src": 927,"name": "max"},{"import": 765,"src": 143,"name": "startsWith","kind": "const","type": 984,"value": 610},{"import": 765,"src": 928,"name": "indexOfScalarPos"},{"import": 765,"src": 929,"name": "writeIntSliceNative"},{"import": 765,"src": 209,"name": "indexOf","kind": "const","type": 985,"value": 611},{"import": 765,"src": 86,"name": "copy","kind": "const","type": 986,"value": 612},{"import": 765,"src": 930,"name": "writeInt"},{"import": 765,"src": 931,"name": "swap"},{"import": 765,"src": 932,"name": "lastIndexOfScalar"},{"import": 765,"src": 933,"name": "Compare"},{"import": 765,"src": 934,"name": "writeIntSliceLittle"},{"import": 765,"src": 935,"name": "min"},{"import": 765,"src": 65,"name": "readIntNative","kind": "const","type": 987,"value": 613},{"import": 765,"src": 936,"name": "readIntSliceBig"},{"import": 765,"src": 937,"name": "indexOfAnyPos"},{"import": 765,"src": 938,"name": "writeIntLittle"},{"import": 765,"src": 939,"name": "trimLeft"},{"import": 765,"src": 244,"name": "asBytes","kind": "const","type": 988,"value": 614},{"import": 765,"src": 940,"name": "readVarInt"},{"import": 765,"src": 941,"name": "isAligned"},{"import": 765,"src": 942,"name": "writeIntSlice"},{"import": 765,"src": 90,"name": "dupe","kind": "const","type": 989,"value": 615},{"import": 765,"src": 943,"name": "join"},{"import": 765,"src": 944,"name": "concat"},{"import": 765,"src": 945,"name": "bytesAsValue"},{"import": 765,"src": 946,"name": "toNative"},{"import": 765,"src": 216,"name": "indexOfPos","kind": "const","type": 990,"value": 616},{"import": 765,"src": 947,"name": "nativeToLittle"},{"import": 765,"src": 43,"name": "alignBackward","kind": "const","type": 8,"value": 47},{"import": 765,"src": 948,"name": "readIntSlice"},{"import": 765,"src": 949,"name": "nativeTo"},{"import": 765,"src": 950,"name": "lastIndexOfAny"},{"import": 765,"src": 951,"name": "TokenIterator","kind": "const","type": 383,"value": 530},{"import": 765,"src": 952,"name": "littleToNative"},{"import": 765,"src": 953,"name": "bigToNative"},{"import": 765,"src": 8,"name": "alignForward","kind": "const","type": 8,"value": 8},{"import": 765,"src": 954,"name": "indexOfScalar"},{"import": 765,"src": 955,"name": "nativeToBig"},{"import": 765,"src": 956,"name": "writeIntNative"},{"import": 765,"src": 957,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 765,"src": 958,"name": "compare"},{"import": 765,"src": 959,"name": "indexOfAny"},{"import": 765,"src": 960,"name": "readIntBig"},{"import": 765,"src": 961,"name": "lessThan"},{"import": 765,"src": 962,"name": "endsWith"},{"import": 765,"src": 963,"name": "trim"},{"import": 765,"src": 87,"name": "tokenize","kind": "const","type": 94,"value": 98},{"import": 765,"src": 964,"name": "readIntForeign"},{"import": 765,"src": 965,"name": "writeIntSliceForeign"},{"import": 765,"src": 966,"name": "readIntSliceLittle","kind": "const","type": 981,"value": 607},{"import": 765,"src": 967,"name": "trimRight"},{"import": 765,"src": 968,"name": "secureZero"},{"import": 765,"src": 969,"name": "writeIntBig"},{"import": 765,"src": 970,"name": "page_size","kind": "const","type": 409,"value": null},{"import": 765,"src": 971,"name": "lastIndexOf"},{"import": 765,"src": 972,"name": "readIntLittle","kind": "const","type": 987,"value": 613},{"import": 765,"src": 973,"name": "readIntSliceForeign"},{"import": 765,"src": 974,"name": "copyBackwards"},{"import": 765,"src": 975,"name": "allEqual"},{"import": 765,"src": 62,"name": "eql","kind": "const","type": 381,"value": 562},{"import": 765,"src": 976,"name": "readInt"},{"import": 765,"src": 977,"name": "BytesAsValueReturnType"},{"import": 765,"src": 978,"name": "testWriteIntImpl"},{"import": 765,"src": 979,"name": "meta","kind": "const","type": 383,"value": 780},{"import": 765,"src": 980,"name": "SubArrayPtrReturnType"},{"import": 765,"src": 981,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 765,"src": 982,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 765,"src": 300,"name": "AsBytesReturnType","kind": "const","type": 450,"value": 587},{"import": 765,"src": 983,"name": "math","kind": "const","type": 383,"value": 766},{"import": 765,"src": 984,"name": "debug","kind": "const","type": 383,"value": 769},{"import": 765,"src": 985,"name": "testing"},{"import": 765,"src": 986,"name": "trait","kind": "const","type": 383,"value": 991},{"import": 765,"src": 987,"name": "testReadIntImpl"},{"import": 765,"src": 988,"name": "std","kind": "const","type": 383,"value": 454},{"import": 765,"src": 989,"name": "mem"},{"import": 766,"src": 990,"name": "pi_2"},{"import": 766,"src": 991,"name": "ceil"},{"import": 766,"src": 992,"name": "isNan"},{"import": 766,"src": 993,"name": "isSignalNan"},{"import": 766,"src": 994,"name": "cosh"},{"import": 766,"src": 995,"name": "floor"},{"import": 766,"src": 996,"name": "nan_u128"},{"import": 766,"src": 997,"name": "modf64_result"},{"import": 766,"src": 998,"name": "hypot"},{"import": 766,"src": 999,"name": "inf_u16"},{"import": 766,"src": 1000,"name": "absFloat"},{"import": 766,"src": 1001,"name": "f64_true_min"},{"import": 766,"src": 1002,"name": "rotr"},{"import": 766,"src": 1003,"name": "absCast"},{"import": 766,"src": 1004,"name": "cbrt"},{"import": 766,"src": 1005,"name": "round"},{"import": 766,"src": 1006,"name": "nan_f32"},{"import": 766,"src": 1007,"name": "divFloor"},{"import": 766,"src": 1008,"name": "ceilPowerOfTwo"},{"import": 766,"src": 251,"name": "mulWide","kind": "const","type": 992,"value": 617},{"import": 766,"src": 1009,"name": "sinh"},{"import": 766,"src": 1010,"name": "inf_u32"},{"import": 766,"src": 1011,"name": "shr"},{"import": 766,"src": 1012,"name": "asinh"},{"import": 766,"src": 293,"name": "maxInt","kind": "const","type": 433,"value": 580},{"import": 766,"src": 1013,"name": "sin"},{"import": 766,"src": 1014,"name": "f64_toint"},{"import": 766,"src": 195,"name": "cast","kind": "const","type": 993,"value": 618},{"import": 766,"src": 1015,"name": "f128_true_min"},{"import": 766,"src": 1016,"name": "two_sqrtpi"},{"import": 766,"src": 1017,"name": "acosh"},{"import": 766,"src": 1018,"name": "frexp32_result"},{"import": 766,"src": 1019,"name": "Complex"},{"import": 766,"src": 1020,"name": "raiseOverflow"},{"import": 766,"src": 1021,"name": "inf_f128"},{"import": 766,"src": 1022,"name": "inf"},{"import": 766,"src": 1023,"name": "Log2Int"},{"import": 766,"src": 1024,"name": "log2_int"},{"import": 766,"src": 1025,"name": "add"},{"import": 766,"src": 1026,"name": "atanh"},{"import": 766,"src": 1027,"name": "lossyCast"},{"import": 766,"src": 1028,"name": "modf"},{"import": 766,"src": 1029,"name": "mod"},{"import": 766,"src": 1030,"name": "f32_max"},{"import": 766,"src": 1031,"name": "two_pi"},{"import": 766,"src": 1032,"name": "sqrt1_2"},{"import": 766,"src": 1033,"name": "tan"},{"import": 766,"src": 1034,"name": "ilogb"},{"import": 766,"src": 1035,"name": "cos"},{"import": 766,"src": 1036,"name": "f64_epsilon"},{"import": 766,"src": 1037,"name": "inf_u64"},{"import": 766,"src": 1038,"name": "asin"},{"import": 766,"src": 1039,"name": "isPowerOfTwo"},{"import": 766,"src": 1040,"name": "nan_u16"},{"import": 766,"src": 1041,"name": "inf_f32"},{"import": 766,"src": 1042,"name": "f32_true_min"},{"import": 766,"src": 1043,"name": "fabs"},{"import": 766,"src": 1044,"name": "complex"},{"import": 766,"src": 1045,"name": "atan"},{"import": 766,"src": 1046,"name": "raiseDivByZero"},{"import": 766,"src": 1047,"name": "snan"},{"import": 766,"src": 1048,"name": "f16_true_min"},{"import": 766,"src": 1049,"name": "isNegativeInf"},{"import": 766,"src": 1050,"name": "log10e"},{"import": 766,"src": 1051,"name": "f32_toint"},{"import": 766,"src": 1052,"name": "pow"},{"import": 766,"src": 1053,"name": "pi_4"},{"import": 766,"src": 1054,"name": "log2"},{"import": 766,"src": 1055,"name": "inf_f64"},{"import": 766,"src": 1056,"name": "log2_int_ceil"},{"import": 766,"src": 1057,"name": "scalbn"},{"import": 766,"src": 1058,"name": "e"},{"import": 766,"src": 1059,"name": "ceilPowerOfTwoPromote"},{"import": 766,"src": 1060,"name": "f16_min"},{"import": 766,"src": 1061,"name": "expm1"},{"import": 766,"src": 1062,"name": "signbit"},{"import": 766,"src": 1063,"name": "shlExact"},{"import": 766,"src": 1064,"name": "nan_f128"},{"import": 766,"src": 1065,"name": "frexp"},{"import": 766,"src": 1066,"name": "f32_min"},{"import": 766,"src": 1067,"name": "frexp64_result"},{"import": 766,"src": 1068,"name": "f16_epsilon"},{"import": 766,"src": 1069,"name": "rem"},{"import": 766,"src": 1070,"name": "ln10"},{"import": 766,"src": 1071,"name": "sub"},{"import": 766,"src": 1072,"name": "floatMantissaBits"},{"import": 766,"src": 283,"name": "max","kind": "const","type": 408,"value": 570},{"import": 766,"src": 1073,"name": "nan_u32"},{"import": 766,"src": 1074,"name": "acos"},{"import": 766,"src": 1075,"name": "f16_max"},{"import": 766,"src": 1076,"name": "floorPowerOfTwo"},{"import": 766,"src": 1077,"name": "exp"},{"import": 766,"src": 1078,"name": "f64_min"},{"import": 766,"src": 1079,"name": "log10"},{"import": 766,"src": 1080,"name": "nan_f16"},{"import": 766,"src": 1081,"name": "f128_toint"},{"import": 766,"src": 1082,"name": "IntFittingRange"},{"import": 766,"src": 1083,"name": "nan_u64"},{"import": 766,"src": 1084,"name": "rotl"},{"import": 766,"src": 1085,"name": "sqrt2"},{"import": 766,"src": 1086,"name": "log"},{"import": 766,"src": 1087,"name": "raiseUnderflow"},{"import": 766,"src": 9,"name": "min","kind": "const","type": 994,"value": 619},{"import": 766,"src": 292,"name": "minInt","kind": "const","type": 432,"value": 579},{"import": 766,"src": 1088,"name": "negate"},{"import": 766,"src": 1089,"name": "alignCast"},{"import": 766,"src": 1090,"name": "f16_toint"},{"import": 766,"src": 1091,"name": "isInf"},{"import": 766,"src": 1092,"name": "modf32_result"},{"import": 766,"src": 1093,"name": "f128_epsilon"},{"import": 766,"src": 164,"name": "mul","kind": "const","type": 995,"value": 620},{"import": 766,"src": 1094,"name": "f128_min"},{"import": 766,"src": 1095,"name": "divExact"},{"import": 766,"src": 1096,"name": "negateCast"},{"import": 766,"src": 1097,"name": "isFinite"},{"import": 766,"src": 1098,"name": "nan_f64"},{"import": 766,"src": 1099,"name": "f128_max"},{"import": 766,"src": 1100,"name": "f32_epsilon"},{"import": 766,"src": 1101,"name": "forceEval"},{"import": 766,"src": 1102,"name": "isNormal"},{"import": 766,"src": 1103,"name": "raiseInvalid"},{"import": 766,"src": 1104,"name": "shl"},{"import": 766,"src": 1105,"name": "ln2"},{"import": 766,"src": 1106,"name": "big"},{"import": 766,"src": 1107,"name": "nan"},{"import": 766,"src": 1108,"name": "f64_max"},{"import": 766,"src": 1109,"name": "inf_f16"},{"import": 766,"src": 1110,"name": "raiseInexact"},{"import": 766,"src": 1111,"name": "inf_u128"},{"import": 766,"src": 1112,"name": "copysign"},{"import": 766,"src": 1113,"name": "fma"},{"import": 766,"src": 1114,"name": "isPositiveInf"},{"import": 766,"src": 1115,"name": "sqrt"},{"import": 766,"src": 1116,"name": "tanh"},{"import": 766,"src": 1117,"name": "approxEq"},{"import": 766,"src": 1118,"name": "trunc"},{"import": 766,"src": 1119,"name": "floatExponentBits"},{"import": 766,"src": 1120,"name": "one_pi"},{"import": 766,"src": 1121,"name": "exp2"},{"import": 766,"src": 1122,"name": "log1p"},{"import": 766,"src": 1123,"name": "AlignCastError"},{"import": 766,"src": 1124,"name": "pi"},{"import": 766,"src": 1125,"name": "log2e"},{"import": 766,"src": 1126,"name": "powi"},{"import": 766,"src": 1127,"name": "absInt"},{"import": 766,"src": 1128,"name": "divTrunc"},{"import": 766,"src": 1129,"name": "atan2"},{"import": 766,"src": 278,"name": "Min","kind": "const","type": 396,"value": 565},{"import": 766,"src": 1130,"name": "ln"},{"import": 766,"src": 1131,"name": "testAbsFloat"},{"import": 766,"src": 1132,"name": "testDivFloor"},{"import": 766,"src": 1133,"name": "testCeilPowerOfTwo"},{"import": 766,"src": 1134,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 766,"src": 1135,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 766,"src": 1136,"name": "testMod"},{"import": 766,"src": 1137,"name": "TypeId"},{"import": 766,"src": 1138,"name": "testCeilPowerOfTwoPromote"},{"import": 766,"src": 1139,"name": "testRem"},{"import": 766,"src": 1140,"name": "testFloorPowerOfTwo"},{"import": 766,"src": 1141,"name": "testOverflow"},{"import": 766,"src": 1142,"name": "testDivExact"},{"import": 766,"src": 1143,"name": "testing"},{"import": 766,"src": 1144,"name": "std","kind": "const","type": 383,"value": 454},{"import": 766,"src": 1145,"name": "testAbsInt"},{"import": 766,"src": 1146,"name": "testDivTrunc"},{"import": 996,"src": 1147,"name": "Id"},{"import": 996,"src": 1148,"name": "wait"},{"import": 996,"src": 1149,"name": "Data","kind": "const","type": 383,"value": 997},{"import": 996,"src": 1150,"name": "cpuCount"},{"import": 996,"src": 1151,"name": "Handle","kind": "const","type": 383,"value": 405},{"import": 996,"src": 1152,"name": "handle"},{"import": 996,"src": 1153,"name": "getCurrentId"},{"import": 996,"src": 1154,"name": "CpuCountError"},{"import": 996,"src": 1155,"name": "use_pthreads","kind": "const","type": 382,"value": null},{"import": 996,"src": 1156,"name": "spawn"},{"import": 996,"src": 1157,"name": "SpawnError"},{"import": 998,"src": 1158,"name": "EXDEV"},{"import": 998,"src": 1159,"name": "EISDIR"},{"import": 998,"src": 1160,"name": "ENOSR"},{"import": 998,"src": 1161,"name": "SIGTERM"},{"import": 998,"src": 1162,"name": "ECONNABORTED"},{"import": 768,"src": 1163,"name": "OpenError","kind": "const","type": 383,"value": 999},{"import": 998,"src": 1164,"name": "in6_addr"},{"import": 998,"src": 1165,"name": "AF_CCITT"},{"import": 998,"src": 1166,"name": "AT_REMOVEDIR"},{"import": 998,"src": 1167,"name": "AF_DATAKIT"},{"import": 768,"src": 1168,"name": "fork"},{"import": 998,"src": 1169,"name": "ECONNREFUSED"},{"import": 998,"src": 1170,"name": "ECANCELED"},{"import": 768,"src": 1171,"name": "lseek_END"},{"import": 998,"src": 1172,"name": "AF_LAT"},{"import": 768,"src": 1173,"name": "poll"},{"import": 768,"src": 1174,"name": "epoll_create1"},{"import": 768,"src": 1175,"name": "execvpeC"},{"import": 768,"src": 1176,"name": "PipeError"},{"import": 998,"src": 1177,"name": "sockaddr_un"},{"import": 998,"src": 1178,"name": "EADDRNOTAVAIL"},{"import": 768,"src": 1179,"name": "SeekError","kind": "const","type": 383,"value": 807},{"import": 998,"src": 1180,"name": "ECHILD"},{"import": 998,"src": 1181,"name": "EPROTONOSUPPORT"},{"import": 998,"src": 1182,"name": "EPIPE"},{"import": 768,"src": 1183,"name": "res_mkquery"},{"import": 768,"src": 1184,"name": "readlink"},{"import": 768,"src": 1185,"name": "RecvFromError"},{"import": 998,"src": 1186,"name": "ETXTBSY"},{"import": 1000,"src": 1187,"name": "iovec_const"},{"import": 998,"src": 1188,"name": "sa_family_t"},{"import": 998,"src": 1189,"name": "EPERM"},{"import": 768,"src": 1190,"name": "symlinkat"},{"import": 998,"src": 1191,"name": "AF_IPX"},{"import": 768,"src": 1192,"name": "inotify_rm_watch"},{"import": 998,"src": 1193,"name": "ENODATA"},{"import": 998,"src": 1194,"name": "ENFILE"},{"import": 998,"src": 1195,"name": "EADDRINUSE"},{"import": 768,"src": 1196,"name": "gethostname"},{"import": 998,"src": 1197,"name": "ENOTSUP"},{"import": 998,"src": 1198,"name": "ENOTDIR"},{"import": 768,"src": 1199,"name": "SigaltstackError"},{"import": 998,"src": 1200,"name": "ENXIO"},{"import": 768,"src": 1201,"name": "getsockoptError"},{"import": 998,"src": 1202,"name": "SIG_ERR"},{"import": 998,"src": 1203,"name": "EIO"},{"import": 768,"src": 1204,"name": "send"},{"import": 768,"src": 1205,"name": "unlinkC"},{"import": 998,"src": 1206,"name": "EBADMSG"},{"import": 768,"src": 138,"name": "lseek_SET","kind": "const","type": 190,"value": 210},{"import": 768,"src": 1207,"name": "open"},{"import": 768,"src": 1208,"name": "renameW"},{"import": 998,"src": 1209,"name": "AF_IMPLINK"},{"import": 998,"src": 1210,"name": "EEXIST"},{"import": 998,"src": 1211,"name": "AF_DLI"},{"import": 768,"src": 1212,"name": "UnlinkatError"},{"import": 768,"src": 1213,"name": "epoll_ctl"},{"import": 768,"src": 1214,"name": "MProtectError"},{"import": 768,"src": 1215,"name": "sysctl"},{"import": 998,"src": 1216,"name": "SIG_IGN"},{"import": 998,"src": 1217,"name": "sockaddr"},{"import": 768,"src": 1218,"name": "openatC"},{"import": 768,"src": 1219,"name": "KQueueError"},{"import": 998,"src": 1220,"name": "EISCONN"},{"import": 998,"src": 1221,"name": "EINVAL"},{"import": 768,"src": 1222,"name": "connect"},{"import": 768,"src": 139,"name": "lseek_CUR","kind": "const","type": 191,"value": 211},{"import": 768,"src": 1223,"name": "inotify_add_watch"},{"import": 768,"src": 1224,"name": "SchedYieldError","kind": "const","type": 383,"value": 930},{"import": 998,"src": 1225,"name": "EDQUOT"},{"import": 998,"src": 1226,"name": "EMSGSIZE"},{"import": 768,"src": 1227,"name": "dl_iterate_phdr"},{"import": 998,"src": 1228,"name": "PATH_MAX"},{"import": 998,"src": 1229,"name": "EHOSTUNREACH"},{"import": 998,"src": 1230,"name": "EOVERFLOW"},{"import": 768,"src": 1231,"name": "RaiseError"},{"import": 998,"src": 1232,"name": "AF_CLUSTER"},{"import": 768,"src": 1233,"name": "unlinkatC"},{"import": 768,"src": 1234,"name": "DeleteDirError"},{"import": 998,"src": 1235,"name": "EINTR"},{"import": 998,"src": 1236,"name": "ENOTEMPTY"},{"import": 768,"src": 1237,"name": "linux"},{"import": 768,"src": 1238,"name": "raise"},{"import": 768,"src": 1239,"name": "futimens"},{"import": 998,"src": 1240,"name": "SIGABRT"},{"import": 998,"src": 1241,"name": "sig_atomic_t"},{"import": 998,"src": 1242,"name": "EMLINK"},{"import": 998,"src": 1243,"name": "AF_CHAOS"},{"import": 998,"src": 1244,"name": "EOTHER"},{"import": 768,"src": 1245,"name": "UnexpectedError","kind": "const","type": 383,"value": 631},{"import": 998,"src": 1246,"name": "AF_HYLINK"},{"import": 998,"src": 1247,"name": "ENOSYS"},{"import": 768,"src": 1248,"name": "openC"},{"import": 998,"src": 1249,"name": "EPROTO"},{"import": 998,"src": 1250,"name": "AF_UNSPEC"},{"import": 998,"src": 1251,"name": "in_addr"},{"import": 768,"src": 1252,"name": "ReadError","kind": "const","type": 383,"value": 440},{"import": 998,"src": 1253,"name": "AF_TCNMESSAGE"},{"import": 768,"src": 1254,"name": "symlink"},{"import": 998,"src": 1255,"name": "EACCES"},{"import": 768,"src": 1256,"name": "BindError"},{"import": 768,"src": 1257,"name": "getenv"},{"import": 998,"src": 1258,"name": "EDOM"},{"import": 998,"src": 1259,"name": "AF_PUP"},{"import": 768,"src": 1260,"name": "setgid"},{"import": 768,"src": 1261,"name": "chdir"},{"import": 768,"src": 1262,"name": "symlinkatC"},{"import": 768,"src": 1263,"name": "WriteError","kind": "const","type": 383,"value": 448},{"import": 768,"src": 1264,"name": "MakeDirError"},{"import": 998,"src": 1265,"name": "AF_ISO"},{"import": 768,"src": 1266,"name": "EventFdError"},{"import": 768,"src": 1267,"name": "dup2"},{"import": 768,"src": 1268,"name": "kevent"},{"import": 998,"src": 1269,"name": "ESRCH"},{"import": 998,"src": 1270,"name": "SEEK_SET"},{"import": 998,"src": 1271,"name": "ENOTRECOVERABLE"},{"import": 998,"src": 1272,"name": "EIDRM"},{"import": 768,"src": 1273,"name": "UnlinkError"},{"import": 998,"src": 1274,"name": "SIG_ACK"},{"import": 768,"src": 1275,"name": "kill"},{"import": 768,"src": 1276,"name": "setreuid"},{"import": 768,"src": 1277,"name": "sched_getaffinity"},{"import": 998,"src": 1278,"name": "ENOTSOCK"},{"import": 998,"src": 1279,"name": "AF_FIREFOX"},{"import": 768,"src": 1280,"name": "setregid"},{"import": 768,"src": 1281,"name": "EpollCtlError"},{"import": 768,"src": 1282,"name": "SysCtlError","kind": "const","type": 383,"value": 1001},{"import": 998,"src": 1283,"name": "SIGBREAK"},{"import": 998,"src": 1284,"name": "SIGABRT_COMPAT"},{"import": 998,"src": 1285,"name": "sockaddr_in6"},{"import": 998,"src": 1286,"name": "AF_INET"},{"import": 768,"src": 1287,"name": "mkdir"},{"import": 768,"src": 1288,"name": "netbsd"},{"import": 998,"src": 1289,"name": "ENETRESET"},{"import": 768,"src": 1290,"name": "getsockname"},{"import": 768,"src": 1291,"name": "dn_expand"},{"import": 998,"src": 1292,"name": "AF_NETBIOS"},{"import": 768,"src": 1293,"name": "sendto"},{"import": 998,"src": 1294,"name": "EBADF"},{"import": 998,"src": 1295,"name": "ECONNRESET"},{"import": 998,"src": 1296,"name": "ENOEXEC"},{"import": 998,"src": 1297,"name": "ENOLINK"},{"import": 768,"src": 1298,"name": "accessW"},{"import": 998,"src": 1299,"name": "fd_t","kind": "const","type": 383,"value": 405},{"import": 998,"src": 1300,"name": "SEEK_END"},{"import": 998,"src": 1301,"name": "EDEADLK"},{"import": 998,"src": 1302,"name": "SEEK_CUR"},{"import": 768,"src": 1303,"name": "pipe"},{"import": 998,"src": 1304,"name": "AF_APPLETALK"},{"import": 998,"src": 1305,"name": "EILSEQ"},{"import": 768,"src": 1306,"name": "PollError"},{"import": 768,"src": 1307,"name": "SchedGetAffinityError"},{"import": 768,"src": 1308,"name": "INotifyAddWatchError"},{"import": 768,"src": 1309,"name": "ExecveError"},{"import": 768,"src": 1310,"name": "unlinkat"},{"import": 768,"src": 1311,"name": "munmap"},{"import": 998,"src": 1312,"name": "SIG_SGE"},{"import": 998,"src": 1313,"name": "time_t"},{"import": 768,"src": 1314,"name": "createNullDelimitedEnvMap"},{"import": 998,"src": 1315,"name": "AF_ATM"},{"import": 998,"src": 1316,"name": "AF_MAX"},{"import": 768,"src": 1317,"name": "readlinkC"},{"import": 998,"src": 1318,"name": "AF_NETDES"},{"import": 768,"src": 1319,"name": "inotify_init1"},{"import": 1000,"src": 1320,"name": "iovec"},{"import": 768,"src": 1321,"name": "kqueue"},{"import": 768,"src": 1322,"name": "readlinkatC"},{"import": 998,"src": 1323,"name": "ENETDOWN"},{"import": 768,"src": 1324,"name": "environ"},{"import": 998,"src": 1325,"name": "EAGAIN"},{"import": 998,"src": 1326,"name": "ENOSPC"},{"import": 768,"src": 1327,"name": "KEventError"},{"import": 768,"src": 1328,"name": "FutimensError"},{"import": 768,"src": 1329,"name": "unlink"},{"import": 998,"src": 1330,"name": "AF_ICLFXBM"},{"import": 768,"src": 1331,"name": "getenvC"},{"import": 768,"src": 1332,"name": "SendError"},{"import": 768,"src": 1333,"name": "mprotect"},{"import": 768,"src": 1334,"name": "socket"},{"import": 768,"src": 219,"name": "sched_yield","kind": "const","type": 303,"value": 399},{"import": 998,"src": 1335,"name": "SIG_GET"},{"import": 768,"src": 1336,"name": "freebsd"},{"import": 768,"src": 1337,"name": "accessC"},{"import": 998,"src": 1338,"name": "AF_NS"},{"import": 768,"src": 1339,"name": "SymLinkError"},{"import": 768,"src": 1340,"name": "argv"},{"import": 768,"src": 1341,"name": "exit"},{"import": 768,"src": 1342,"name": "ForkError"},{"import": 768,"src": 1343,"name": "ReadLinkError","kind": "const","type": 383,"value": 1002},{"import": 768,"src": 1344,"name": "pipe2"},{"import": 768,"src": 1345,"name": "getrandom"},{"import": 998,"src": 1346,"name": "SIGINT"},{"import": 768,"src": 1347,"name": "system"},{"import": 768,"src": 1348,"name": "sysctlbynameC"},{"import": 998,"src": 1349,"name": "EWOULDBLOCK"},{"import": 768,"src": 1350,"name": "darwin"},{"import": 998,"src": 1351,"name": "AF_INET6"},{"import": 768,"src": 1352,"name": "uefi"},{"import": 768,"src": 1353,"name": "listen"},{"import": 998,"src": 1354,"name": "ENETUNREACH"},{"import": 998,"src": 1355,"name": "EMFILE"},{"import": 768,"src": 1356,"name": "mmap"},{"import": 768,"src": 1357,"name": "nanosleep"},{"import": 768,"src": 1358,"name": "MMapError"},{"import": 768,"src": 1359,"name": "GetHostNameError"},{"import": 998,"src": 1360,"name": "EDESTADDRREQ"},{"import": 768,"src": 1361,"name": "GetRandomError"},{"import": 998,"src": 1362,"name": "ENOPROTOOPT"},{"import": 998,"src": 1363,"name": "F_OK"},{"import": 768,"src": 1364,"name": "execveC"},{"import": 998,"src": 1365,"name": "ENOMSG"},{"import": 768,"src": 1366,"name": "readv"},{"import": 998,"src": 1367,"name": "pid_t"},{"import": 768,"src": 89,"name": "getcwd","kind": "const","type": 96,"value": 100},{"import": 768,"src": 1368,"name": "setuid"},{"import": 768,"src": 1369,"name": "chdirC"},{"import": 768,"src": 1370,"name": "gettimeofday"},{"import": 768,"src": 1371,"name": "ClockGetTimeError"},{"import": 768,"src": 1372,"name": "fstat"},{"import": 768,"src": 1373,"name": "sigaltstack"},{"import": 998,"src": 1374,"name": "ENOENT"},{"import": 768,"src": 1375,"name": "rmdir"},{"import": 998,"src": 1376,"name": "AF_ECMA"},{"import": 998,"src": 1377,"name": "AF_IRDA"},{"import": 768,"src": 1378,"name": "openat"},{"import": 768,"src": 200,"name": "isatty","kind": "const","type": 271,"value": 329},{"import": 768,"src": 1379,"name": "windows","kind": "const","type": 383,"value": 1003},{"import": 768,"src": 1380,"name": "GetSockNameError"},{"import": 768,"src": 1381,"name": "access"},{"import": 998,"src": 1382,"name": "AF_SNA"},{"import": 998,"src": 1383,"name": "ESPIPE"},{"import": 998,"src": 1384,"name": "EPROTOTYPE"},{"import": 768,"src": 1385,"name": "DnExpandError"},{"import": 768,"src": 37,"name": "abort","kind": "const","type": 37,"value": 39},{"import": 998,"src": 1386,"name": "ENOBUFS"},{"import": 998,"src": 1387,"name": "SIGSEGV"},{"import": 768,"src": 1388,"name": "wasi"},{"import": 768,"src": 1389,"name": "mkdirC"},{"import": 998,"src": 1390,"name": "EDEADLOCK"},{"import": 998,"src": 1391,"name": "NSIG"},{"import": 768,"src": 1392,"name": "sigaction"},{"import": 998,"src": 1393,"name": "EBUSY"},{"import": 998,"src": 1394,"name": "socklen_t"},{"import": 768,"src": 1395,"name": "inotify_add_watchC"},{"import": 768,"src": 1396,"name": "KillError"},{"import": 768,"src": 1397,"name": "writev"},{"import": 768,"src": 1398,"name": "realpath"},{"import": 768,"src": 136,"name": "close","kind": "const","type": 188,"value": 207},{"import": 998,"src": 1399,"name": "AF_TCNPROCESS"},{"import": 768,"src": 1400,"name": "AcceptError"},{"import": 768,"src": 1401,"name": "waitpid"},{"import": 998,"src": 1402,"name": "ENAMETOOLONG"},{"import": 768,"src": 1403,"name": "bind"},{"import": 768,"src": 1404,"name": "symlinkC"},{"import": 998,"src": 1405,"name": "ERANGE"},{"import": 998,"src": 1406,"name": "ETIME"},{"import": 768,"src": 1407,"name": "recvfrom"},{"import": 998,"src": 1408,"name": "EINPROGRESS"},{"import": 768,"src": 1409,"name": "FStatError","kind": "const","type": 383,"value": 1004},{"import": 998,"src": 1410,"name": "SIGFPE"},{"import": 998,"src": 1411,"name": "AF_UNKNOWN1"},{"import": 768,"src": 1412,"name": "eventfd"},{"import": 768,"src": 1413,"name": "SetIdError"},{"import": 768,"src": 1414,"name": "lseek_CUR_get"},{"import": 768,"src": 1415,"name": "ChangeCurDirError"},{"import": 768,"src": 1416,"name": "epoll_wait"},{"import": 998,"src": 1417,"name": "EAFNOSUPPORT"},{"import": 768,"src": 202,"name": "write","kind": "const","type": 272,"value": 331},{"import": 998,"src": 1418,"name": "EROFS"},{"import": 768,"src": 1419,"name": "execvpe"},{"import": 768,"src": 1420,"name": "clock_gettime"},{"import": 998,"src": 1421,"name": "ENOSTR"},{"import": 768,"src": 1422,"name": "realpathC"},{"import": 768,"src": 1423,"name": "RealPathError"},{"import": 998,"src": 1424,"name": "ENOTTY"},{"import": 768,"src": 1425,"name": "freeNullDelimitedEnvMap"},{"import": 768,"src": 1426,"name": "zen"},{"import": 768,"src": 1427,"name": "INotifyInitError"},{"import": 998,"src": 1428,"name": "AF_OSI"},{"import": 768,"src": 1429,"name": "unexpectedErrno"},{"import": 998,"src": 1430,"name": "in_port_t"},{"import": 998,"src": 1431,"name": "EOPNOTSUPP"},{"import": 998,"src": 1432,"name": "sockaddr_in"},{"import": 768,"src": 1433,"name": "EpollCreateError"},{"import": 998,"src": 1434,"name": "EOWNERDEAD"},{"import": 768,"src": 1435,"name": "rmdirC"},{"import": 998,"src": 1436,"name": "EFAULT"},{"import": 998,"src": 1437,"name": "EFBIG"},{"import": 998,"src": 1438,"name": "AF_12844"},{"import": 768,"src": 1439,"name": "unexpected_error_tracing","kind": "const","type": 382,"value": null},{"import": 998,"src": 1440,"name": "timespec"},{"import": 998,"src": 1441,"name": "E2BIG"},{"import": 768,"src": 1442,"name": "preadv"},{"import": 998,"src": 1443,"name": "STRUNCATE"},{"import": 768,"src": 1444,"name": "accept4"},{"import": 768,"src": 1445,"name": "errno"},{"import": 768,"src": 1446,"name": "pwritev"},{"import": 998,"src": 1447,"name": "ENOMEM"},{"import": 998,"src": 1448,"name": "ENODEV"},{"import": 768,"src": 1449,"name": "renameC"},{"import": 998,"src": 1450,"name": "SIGILL"},{"import": 998,"src": 1451,"name": "AF_VOICEVIEW"},{"import": 768,"src": 1452,"name": "SocketError"},{"import": 998,"src": 1453,"name": "EALREADY"},{"import": 768,"src": 1454,"name": "ConnectError"},{"import": 768,"src": 163,"name": "read","kind": "const","type": 214,"value": 260},{"import": 998,"src": 1455,"name": "ENOLCK"},{"import": 768,"src": 1456,"name": "rename"},{"import": 768,"src": 201,"name": "isCygwinPty","kind": "const","type": 271,"value": 330},{"import": 998,"src": 1457,"name": "SIG_DFL"},{"import": 998,"src": 1458,"name": "ENOTCONN"},{"import": 768,"src": 1459,"name": "clock_getres"},{"import": 998,"src": 1460,"name": "AF_BAN"},{"import": 998,"src": 1461,"name": "ETIMEDOUT"},{"import": 998,"src": 1462,"name": "AF_DECnet"},{"import": 768,"src": 1463,"name": "GetCwdError","kind": "const","type": 383,"value": 836},{"import": 998,"src": 1464,"name": "AF_BTH"},{"import": 768,"src": 1465,"name": "realpathW"},{"import": 998,"src": 1466,"name": "AF_UNIX"},{"import": 768,"src": 1467,"name": "dragonfly"},{"import": 768,"src": 1468,"name": "unlinkatW"},{"import": 768,"src": 1469,"name": "toPosixPath"},{"import": 768,"src": 1470,"name": "AccessError"},{"import": 998,"src": 1471,"name": "ELOOP"},{"import": 768,"src": 1472,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 768,"src": 1473,"name": "MAX_PATH_BYTES"},{"import": 768,"src": 1474,"name": "dl"},{"import": 768,"src": 1475,"name": "ListenError"},{"import": 768,"src": 1476,"name": "elf"},{"import": 768,"src": 1477,"name": "math"},{"import": 768,"src": 1478,"name": "std","kind": "const","type": 383,"value": 454},{"import": 768,"src": 1479,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 768,"src": 1480,"name": "getRandomBytesDevURandom"},{"import": 768,"src": 1481,"name": "RenameError"},{"import": 768,"src": 1482,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 769,"src": 1483,"name": "LineInfo","kind": "const","type": 383,"value": 592},{"import": 769,"src": 256,"name": "attachSegfaultHandler","kind": "const","type": 36,"value": 462},{"import": 769,"src": 1484,"name": "captureStackTrace"},{"import": 769,"src": 123,"name": "writeCurrentStackTraceWindows","kind": "const","type": 1005,"value": 621},{"import": 769,"src": 41,"name": "dumpCurrentStackTrace","kind": "const","type": 41,"value": 43},{"import": 769,"src": 38,"name": "getStderrStream","kind": "const","type": 38,"value": 40},{"import": 769,"src": 1485,"name": "have_segfault_handling_support","kind": "const","type": 382,"value": null},{"import": 769,"src": 122,"name": "writeCurrentStackTrace","kind": "const","type": 1006,"value": 622},{"import": 769,"src": 40,"name": "dumpStackTrace","kind": "const","type": 40,"value": 42},{"import": 769,"src": 1486,"name": "DebugInfo","kind": "const","type": 383,"value": 811},{"import": 769,"src": 1487,"name": "enable_segfault_handler","kind": "const","type": 382,"value": null},{"import": 769,"src": 109,"name": "writeStackTrace","kind": "const","type": 1007,"value": 623},{"import": 769,"src": 1488,"name": "leb"},{"import": 769,"src": 1489,"name": "DwarfInfo"},{"import": 769,"src": 50,"name": "getSelfDebugInfo","kind": "const","type": 55,"value": 58},{"import": 769,"src": 45,"name": "panic","kind": "const","type": 1008,"value": 624},{"import": 769,"src": 1490,"name": "DwarfInStream"},{"import": 769,"src": 3,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 769,"src": 1491,"name": "DwarfSeekableStream"},{"import": 769,"src": 110,"name": "printSourceAtAddress","kind": "const","type": 1009,"value": 625},{"import": 769,"src": 1492,"name": "StackIterator"},{"import": 769,"src": 1493,"name": "OpenSelfDebugInfoError"},{"import": 769,"src": 1494,"name": "FailingAllocator"},{"import": 769,"src": 2,"name": "panicExtra","kind": "const","type": 1010,"value": 626},{"import": 769,"src": 254,"name": "maybeEnableSegfaultHandler","kind": "const","type": 36,"value": 460},{"import": 769,"src": 1495,"name": "runtime_safety","kind": "const","type": 382,"value": null},{"import": 769,"src": 1496,"name": "dumpStackTraceFromBase"},{"import": 769,"src": 1497,"name": "dumpStackPointerAddr"},{"import": 769,"src": 1498,"name": "getStderrMutex"},{"import": 769,"src": 1499,"name": "failing_allocator"},{"import": 769,"src": 51,"name": "openSelfDebugInfo","kind": "const","type": 56,"value": 59},{"import": 769,"src": 1500,"name": "printSourceAtAddressPosix"},{"import": 769,"src": 1501,"name": "openDwarfDebugInfo"},{"import": 769,"src": 1502,"name": "printSourceAtAddressDwarf"},{"import": 769,"src": 206,"name": "warn","kind": "const","type": 1011,"value": 627},{"import": 769,"src": 1503,"name": "global_allocator","kind": "const","type": 462,"value": null},{"import": 769,"src": 1504,"name": "openElfDebugInfo"},{"import": 769,"src": 1505,"name": "readAllocBytes"},{"import": 769,"src": 1506,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 769,"src": 114,"name": "populateModule","kind": "const","type": 163,"value": 171},{"import": 769,"src": 1507,"name": "WHITE","kind": "const","type": 1012,"value": null},{"import": 769,"src": 1508,"name": "getAbbrevTable"},{"import": 769,"src": 258,"name": "handleSegfaultWindows","kind": "const","type": 345,"value": 464},{"import": 769,"src": 1509,"name": "readIntMem"},{"import": 769,"src": 1510,"name": "parseFormValueTargetAddrSize"},{"import": 769,"src": 1511,"name": "DW"},{"import": 769,"src": 1512,"name": "readStringRaw"},{"import": 769,"src": 1513,"name": "panicking","kind": "var","type": 384,"value": null},{"import": 769,"src": 1514,"name": "os","kind": "const","type": 383,"value": 768},{"import": 769,"src": 1515,"name": "FileEntry"},{"import": 769,"src": 101,"name": "readSparseBitVector","kind": "const","type": 1013,"value": 628},{"import": 769,"src": 1516,"name": "stderr_file_out_stream","kind": "var","type": 489,"value": "undefined"},{"import": 769,"src": 1517,"name": "RESET","kind": "const","type": 821,"value": null},{"import": 769,"src": 1518,"name": "elf"},{"import": 769,"src": 1519,"name": "openSelfDebugInfoMacOs"},{"import": 769,"src": 1520,"name": "Func"},{"import": 769,"src": 1521,"name": "readByteSignedMem"},{"import": 769,"src": 1522,"name": "readInitialLengthMem"},{"import": 769,"src": 1523,"name": "MachoSymbol","kind": "const","type": 383,"value": 1014},{"import": 769,"src": 1524,"name": "parseFormValueBlock"},{"import": 769,"src": 1525,"name": "io","kind": "const","type": 383,"value": 773},{"import": 769,"src": 1526,"name": "LineNumberProgram"},{"import": 769,"src": 1527,"name": "CYAN","kind": "const","type": 1012,"value": null},{"import": 769,"src": 1528,"name": "root","kind": "const","type": 383,"value": 946},{"import": 769,"src": 1529,"name": "Constant"},{"import": 769,"src": 1530,"name": "maxInt","kind": "const","type": 433,"value": 580},{"import": 769,"src": 1531,"name": "parseAbbrevTable"},{"import": 769,"src": 1532,"name": "coff","kind": "const","type": 383,"value": 778},{"import": 769,"src": 1533,"name": "scanAllCompileUnits"},{"import": 769,"src": 1534,"name": "parseDie"},{"import": 769,"src": 1535,"name": "parseFormValueConstant"},{"import": 769,"src": 1536,"name": "DIM","kind": "const","type": 821,"value": null},{"import": 769,"src": 1537,"name": "GREEN","kind": "const","type": 1012,"value": null},{"import": 769,"src": 1538,"name": "getSymbolNameDwarf"},{"import": 769,"src": 1539,"name": "fs","kind": "const","type": 383,"value": 781},{"import": 769,"src": 113,"name": "setTtyColor","kind": "const","type": 161,"value": 167},{"import": 769,"src": 1540,"name": "File","kind": "const","type": 383,"value": 488},{"import": 769,"src": 1541,"name": "parseFormValueBlockLen"},{"import": 769,"src": 118,"name": "printLineFromFileAnyOs","kind": "const","type": 1015,"value": 629},{"import": 769,"src": 53,"name": "openSelfDebugInfoWindows","kind": "const","type": 58,"value": 61},{"import": 769,"src": 1542,"name": "printLineInfo"},{"import": 769,"src": 1543,"name": "AbbrevTable"},{"import": 769,"src": 1544,"name": "Die"},{"import": 769,"src": 1545,"name": "process","kind": "const","type": 383,"value": 787},{"import": 769,"src": 1546,"name": "macho","kind": "const","type": 383,"value": 788},{"import": 769,"src": 52,"name": "getDebugInfoAllocator","kind": "const","type": 57,"value": 60},{"import": 769,"src": 1547,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 769,"src": 1548,"name": "windows_segfault_handle","kind": "var","type": 600,"value": null},{"import": 769,"src": 1549,"name": "debug_info_allocator","kind": "var","type": 875,"value": null},{"import": 769,"src": 1550,"name": "CompileUnit"},{"import": 769,"src": 1551,"name": "TtyColor","kind": "const","type": 383,"value": 587},{"import": 769,"src": 1552,"name": "parseFormValueRef"},{"import": 769,"src": 1553,"name": "math"},{"import": 769,"src": 1554,"name": "global_fixed_allocator","kind": "var","type": 463,"value": null},{"import": 769,"src": 1555,"name": "stderr_file","kind": "var","type": 488,"value": "undefined"},{"import": 769,"src": 1556,"name": "FormValue"},{"import": 769,"src": 1557,"name": "openSelfDebugInfoPosix"},{"import": 769,"src": 1558,"name": "global_allocator_mem","kind": "var","type": 1016,"value": null},{"import": 769,"src": 1559,"name": "findCompileUnit"},{"import": 769,"src": 1560,"name": "readInitialLength"},{"import": 769,"src": 108,"name": "wantTtyColor","kind": "const","type": 155,"value": 161},{"import": 769,"src": 1561,"name": "AbbrevTableEntry"},{"import": 769,"src": 1562,"name": "getLineNumberInfoMacOs"},{"import": 769,"src": 1563,"name": "Module","kind": "const","type": 383,"value": 390},{"import": 769,"src": 36,"name": "resetSegfaultHandler","kind": "const","type": 36,"value": 38},{"import": 769,"src": 1564,"name": "stderr_stream","kind": "var","type": 1017,"value": null},{"import": 769,"src": 1565,"name": "stderr_mutex","kind": "var","type": 663,"value": null},{"import": 769,"src": 1566,"name": "scanAllFunctions"},{"import": 769,"src": 1567,"name": "pdb","kind": "const","type": 383,"value": 777},{"import": 769,"src": 1568,"name": "PcRange"},{"import": 769,"src": 1569,"name": "readStringMem"},{"import": 769,"src": 1570,"name": "readByteMem"},{"import": 769,"src": 1571,"name": "findDwarfSectionFromElf"},{"import": 769,"src": 1572,"name": "std","kind": "const","type": 383,"value": 454},{"import": 769,"src": 1573,"name": "parseFormValueDwarfOffsetSize"},{"import": 769,"src": 111,"name": "printSourceAtAddressWindows","kind": "const","type": 1018,"value": 630},{"import": 769,"src": 1574,"name": "machoSearchSymbols"},{"import": 769,"src": 1575,"name": "AbbrevAttr"},{"import": 769,"src": 1576,"name": "getString"},{"import": 769,"src": 1577,"name": "handleSegfaultLinux"},{"import": 769,"src": 1578,"name": "printSourceAtAddressMacOs"},{"import": 769,"src": 1579,"name": "AbbrevTableHeader"},{"import": 769,"src": 1580,"name": "getAbbrevTableEntry"},{"import": 769,"src": 1581,"name": "windows","kind": "const","type": 383,"value": 1003},{"import": 769,"src": 1582,"name": "self_debug_info","kind": "var","type": 1019,"value": null},{"import": 769,"src": 1583,"name": "getLineNumberInfoDwarf"},{"import": 769,"src": 1584,"name": "ArrayList","kind": "const","type": 386,"value": 563},{"import": 769,"src": 1585,"name": "parseFormValue"},{"import": 769,"src": 1586,"name": "MachOFile","kind": "const","type": 383,"value": 423},{"import": 769,"src": 1587,"name": "debug_info_arena_allocator","kind": "var","type": 597,"value": "undefined"},{"import": 769,"src": 1588,"name": "RED","kind": "const","type": 1012,"value": null},{"import": 770,"src": 19,"name": "expectEqual","kind": "const","type": 1020,"value": 631},{"import": 770,"src": 1589,"name": "expectEqualSlices"},{"import": 770,"src": 1590,"name": "expect"},{"import": 770,"src": 1591,"name": "expectError"},{"import": 770,"src": 1592,"name": "builtin"},{"import": 770,"src": 1593,"name": "std","kind": "const","type": 383,"value": 454},{"import": 770,"src": 1594,"name": "TypeId"},{"import": 771,"src": 1595,"name": "RwLock"},{"import": 771,"src": 1596,"name": "Lock"},{"import": 771,"src": 1597,"name": "Locked"},{"import": 771,"src": 1598,"name": "Channel"},{"import": 771,"src": 1599,"name": "Future"},{"import": 771,"src": 1600,"name": "RwLocked"},{"import": 771,"src": 1601,"name": "Loop","kind": "const","type": 383,"value": 1021},{"import": 771,"src": 1602,"name": "Group"},{"import": 771,"src": 1603,"name": "fs"},{"import": 772,"src": 197,"name": "utf16leToUtf8Alloc","kind": "const","type": 267,"value": 325},{"import": 772,"src": 189,"name": "utf8ToUtf16LeWithNull","kind": "const","type": 250,"value": 307},{"import": 772,"src": 181,"name": "utf8CodepointSequenceLength","kind": "const","type": 237,"value": 288},{"import": 772,"src": 183,"name": "utf8Decode2","kind": "const","type": 239,"value": 290},{"import": 772,"src": 152,"name": "utf8Decode","kind": "const","type": 199,"value": 225},{"import": 772,"src": 207,"name": "utf8ByteSequenceLength","kind": "const","type": 282,"value": 357},{"import": 772,"src": 1604,"name": "Utf8Iterator","kind": "const","type": 383,"value": 648},{"import": 772,"src": 1605,"name": "Utf8View","kind": "const","type": 383,"value": 647},{"import": 772,"src": 1606,"name": "Utf16LeIterator","kind": "const","type": 383,"value": 632},{"import": 772,"src": 185,"name": "utf8Decode4","kind": "const","type": 241,"value": 292},{"import": 772,"src": 205,"name": "utf16leToUtf8","kind": "const","type": 280,"value": 350},{"import": 772,"src": 184,"name": "utf8Decode3","kind": "const","type": 240,"value": 291},{"import": 772,"src": 182,"name": "utf8Encode","kind": "const","type": 238,"value": 289},{"import": 772,"src": 151,"name": "utf8ToUtf16Le","kind": "const","type": 198,"value": 224},{"import": 772,"src": 191,"name": "utf8ValidateSlice","kind": "const","type": 192,"value": 313},{"import": 772,"src": 1607,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 772,"src": 1608,"name": "testInvalidUtf8ContinuationBytes"},{"import": 772,"src": 1609,"name": "testMiscInvalidUtf8"},{"import": 772,"src": 1610,"name": "testUtf8EncodeError"},{"import": 772,"src": 1611,"name": "testDecode"},{"import": 772,"src": 1612,"name": "testError"},{"import": 772,"src": 1613,"name": "std","kind": "const","type": 383,"value": 454},{"import": 772,"src": 1614,"name": "Utf8Decode2Error","kind": "const","type": 383,"value": 909},{"import": 772,"src": 1615,"name": "testUtf8IteratorOnAscii"},{"import": 772,"src": 1616,"name": "testUtf8ViewOk"},{"import": 772,"src": 1617,"name": "testValidUtf8"},{"import": 772,"src": 1618,"name": "testing"},{"import": 772,"src": 1619,"name": "Utf8DecodeError","kind": "const","type": 383,"value": 890},{"import": 772,"src": 1620,"name": "Utf8Decode4Error","kind": "const","type": 383,"value": 911},{"import": 772,"src": 1621,"name": "testUtf8Encode"},{"import": 772,"src": 1622,"name": "testErrorEncode"},{"import": 772,"src": 1623,"name": "testBadUtf8Slice"},{"import": 772,"src": 1624,"name": "Utf8Decode3Error","kind": "const","type": 383,"value": 910},{"import": 772,"src": 1625,"name": "testValid"},{"import": 772,"src": 1626,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 772,"src": 1627,"name": "testOverlongUtf8Codepoint"},{"import": 772,"src": 1628,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 772,"src": 1629,"name": "testUtf8ViewBad"},{"import": 773,"src": 1630,"name": "BufferedInStream"},{"import": 773,"src": 1631,"name": "Packing"},{"import": 773,"src": 1632,"name": "mode","kind": "const","type": 1022,"value": null},{"import": 773,"src": 1633,"name": "COutStream"},{"import": 773,"src": 1634,"name": "BufferOutStream"},{"import": 773,"src": 1635,"name": "getStdOut"},{"import": 773,"src": 1636,"name": "Serializer"},{"import": 773,"src": 1637,"name": "BitOutStream"},{"import": 773,"src": 1638,"name": "BufferedOutStream"},{"import": 773,"src": 1639,"name": "BitInStream"},{"import": 773,"src": 1640,"name": "Mode","kind": "const","type": 383,"value": 1022},{"import": 773,"src": 1641,"name": "null_out_stream"},{"import": 773,"src": 1642,"name": "BufferedAtomicFile"},{"import": 773,"src": 1643,"name": "NullOutStream"},{"import": 773,"src": 1644,"name": "readLineFrom"},{"import": 773,"src": 1645,"name": "PeekStream"},{"import": 773,"src": 1646,"name": "InStream","kind": "const","type": 436,"value": 582},{"import": 773,"src": 1647,"name": "is_async","kind": "const","type": 382,"value": null},{"import": 773,"src": 1648,"name": "BufferedOutStreamCustom"},{"import": 773,"src": 1649,"name": "Deserializer"},{"import": 773,"src": 1650,"name": "readLine"},{"import": 773,"src": 1651,"name": "SliceInStream"},{"import": 773,"src": 1652,"name": "readLineSliceFrom"},{"import": 773,"src": 1653,"name": "BufferedInStreamCustom"},{"import": 773,"src": 1654,"name": "SliceSeekableInStream"},{"import": 773,"src": 1655,"name": "OutStream","kind": "const","type": 446,"value": 585},{"import": 773,"src": 1656,"name": "SliceOutStream"},{"import": 773,"src": 1657,"name": "readFileAlloc"},{"import": 773,"src": 1658,"name": "SeekableStream"},{"import": 773,"src": 1659,"name": "writeFile"},{"import": 773,"src": 46,"name": "getStdErr","kind": "const","type": 51,"value": 54},{"import": 773,"src": 1660,"name": "readLineSlice"},{"import": 773,"src": 1661,"name": "CountingOutStream"},{"import": 773,"src": 1662,"name": "getStdIn"},{"import": 773,"src": 1663,"name": "readFileAllocAligned"},{"import": 773,"src": 1664,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 773,"src": 1665,"name": "math"},{"import": 773,"src": 1666,"name": "os","kind": "const","type": 383,"value": 768},{"import": 773,"src": 1667,"name": "debug"},{"import": 773,"src": 1668,"name": "Buffer"},{"import": 773,"src": 1669,"name": "testing"},{"import": 773,"src": 1670,"name": "null_out_stream_state"},{"import": 773,"src": 1671,"name": "trait"},{"import": 773,"src": 1672,"name": "fmt"},{"import": 773,"src": 1673,"name": "root","kind": "const","type": 383,"value": 946},{"import": 773,"src": 1674,"name": "std","kind": "const","type": 383,"value": 454},{"import": 773,"src": 1675,"name": "c"},{"import": 773,"src": 1676,"name": "meta"},{"import": 773,"src": 1677,"name": "fs"},{"import": 773,"src": 1678,"name": "File","kind": "const","type": 383,"value": 488},{"import": 773,"src": 1679,"name": "assert"},{"import": 773,"src": 1680,"name": "mem"},{"import": 774,"src": 1681,"name": "charToDigit"},{"import": 774,"src": 269,"name": "bufPrint","kind": "const","type": 1023,"value": 632},{"import": 774,"src": 1682,"name": "default_max_depth","kind": "const","type": 409,"value": null},{"import": 774,"src": 128,"name": "formatType","kind": "const","type": 1024,"value": 633},{"import": 774,"src": 1683,"name": "isWhiteSpace"},{"import": 774,"src": 1684,"name": "formatAsciiChar"},{"import": 774,"src": 1685,"name": "formatFloatDecimal"},{"import": 774,"src": 217,"name": "formatIntValue","kind": "const","type": 1025,"value": 634},{"import": 774,"src": 1686,"name": "trim"},{"import": 774,"src": 1687,"name": "formatFloatScientific"},{"import": 774,"src": 1688,"name": "parseFloat"},{"import": 774,"src": 1689,"name": "formatBytes"},{"import": 774,"src": 1690,"name": "allocPrint"},{"import": 774,"src": 48,"name": "format","kind": "const","type": 1026,"value": 635},{"import": 774,"src": 1691,"name": "parseInt"},{"import": 774,"src": 1692,"name": "FormatOptions","kind": "const","type": 383,"value": 596},{"import": 774,"src": 1693,"name": "BufPrintError","kind": "const","type": 383,"value": 942},{"import": 774,"src": 223,"name": "formatInt","kind": "const","type": 1027,"value": 636},{"import": 774,"src": 1694,"name": "formatIntBuf"},{"import": 774,"src": 1695,"name": "AllocPrintError"},{"import": 774,"src": 165,"name": "formatText","kind": "const","type": 1028,"value": 637},{"import": 774,"src": 1696,"name": "hexToBytes"},{"import": 774,"src": 1697,"name": "formatBuf"},{"import": 774,"src": 1698,"name": "parseUnsigned"},{"import": 774,"src": 1699,"name": "Alignment","kind": "const","type": 383,"value": 1029},{"import": 774,"src": 1700,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 774,"src": 1701,"name": "builtin"},{"import": 774,"src": 1702,"name": "BufPrintContext","kind": "const","type": 383,"value": 944},{"import": 774,"src": 274,"name": "bufPrintWrite","kind": "const","type": 367,"value": 513},{"import": 774,"src": 1703,"name": "countSize"},{"import": 774,"src": 1704,"name": "math","kind": "const","type": 383,"value": 766},{"import": 774,"src": 1705,"name": "errol"},{"import": 774,"src": 1706,"name": "nextArg","kind": "const","type": 1030,"value": 638},{"import": 774,"src": 1707,"name": "FormatIntBuf"},{"import": 774,"src": 1708,"name": "debug","kind": "const","type": 383,"value": 769},{"import": 774,"src": 1709,"name": "testing"},{"import": 774,"src": 1710,"name": "formatFloatValue"},{"import": 774,"src": 1711,"name": "peekIsAlign"},{"import": 774,"src": 232,"name": "formatIntSigned","kind": "const","type": 1031,"value": 639},{"import": 774,"src": 1712,"name": "testFmt"},{"import": 774,"src": 1713,"name": "bufPrintIntToSlice"},{"import": 774,"src": 1714,"name": "ParseUnsignedError"},{"import": 774,"src": 227,"name": "formatIntUnsigned","kind": "const","type": 1032,"value": 640},{"import": 774,"src": 1715,"name": "std","kind": "const","type": 383,"value": 454},{"import": 774,"src": 211,"name": "formatValue","kind": "const","type": 1033,"value": 641},{"import": 774,"src": 230,"name": "digitToChar","kind": "const","type": 321,"value": 425},{"import": 774,"src": 1716,"name": "formatIntCallback"},{"import": 774,"src": 1717,"name": "lossyCast"},{"import": 774,"src": 1718,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 775,"src": 1719,"name": "Queue","kind": "const","type": 414,"value": 573},{"import": 775,"src": 1720,"name": "Int"},{"import": 775,"src": 1721,"name": "Stack","kind": "const","type": 417,"value": 574},{"import": 777,"src": 1722,"name": "DebugSubsectionKind","kind": "const","type": 383,"value": 1034},{"import": 777,"src": 1723,"name": "LineFragmentHeader","kind": "const","type": 383,"value": 1035},{"import": 777,"src": 1724,"name": "DbiStreamHeader","kind": "const","type": 383,"value": 855},{"import": 777,"src": 1725,"name": "TypeIndex","kind": "const","type": 383,"value": 397},{"import": 777,"src": 1726,"name": "ModInfo","kind": "const","type": 383,"value": 697},{"import": 777,"src": 1727,"name": "SectionContribEntry","kind": "const","type": 383,"value": 392},{"import": 777,"src": 1728,"name": "LineBlockFragmentHeader","kind": "const","type": 383,"value": 1036},{"import": 777,"src": 1729,"name": "PDBStringTableHeader","kind": "const","type": 383,"value": 1037},{"import": 777,"src": 1730,"name": "ColumnNumberEntry","kind": "const","type": 383,"value": 1038},{"import": 777,"src": 1731,"name": "LineNumberEntry","kind": "const","type": 383,"value": 1039},{"import": 777,"src": 1732,"name": "DebugSubsectionHeader","kind": "const","type": 383,"value": 1040},{"import": 777,"src": 1733,"name": "ProcSymFlags","kind": "const","type": 383,"value": 1041},{"import": 777,"src": 1734,"name": "RecordPrefix","kind": "const","type": 383,"value": 1042},{"import": 777,"src": 1735,"name": "Pdb","kind": "const","type": 383,"value": 839},{"import": 777,"src": 1736,"name": "SectionMapHeader"},{"import": 777,"src": 1737,"name": "StreamType","kind": "const","type": 383,"value": 548},{"import": 777,"src": 1738,"name": "SymbolKind","kind": "const","type": 383,"value": 1043},{"import": 777,"src": 1739,"name": "ProcSym","kind": "const","type": 383,"value": 1044},{"import": 777,"src": 1740,"name": "FileChecksumEntryHeader","kind": "const","type": 383,"value": 1045},{"import": 777,"src": 1741,"name": "SectionMapEntry"},{"import": 777,"src": 1742,"name": "SectionContrSubstreamVersion","kind": "const","type": 383,"value": 1046},{"import": 777,"src": 1743,"name": "LineFlags","kind": "const","type": 383,"value": 1047},{"import": 777,"src": 1744,"name": "builtin"},{"import": 777,"src": 1745,"name": "SuperBlock","kind": "const","type": 383,"value": 843},{"import": 777,"src": 1746,"name": "coff","kind": "const","type": 383,"value": 778},{"import": 777,"src": 1747,"name": "math","kind": "const","type": 383,"value": 766},{"import": 777,"src": 1748,"name": "std","kind": "const","type": 383,"value": 454},{"import": 777,"src": 1749,"name": "MsfStream","kind": "const","type": 383,"value": 542},{"import": 777,"src": 1750,"name": "os"},{"import": 777,"src": 1751,"name": "File","kind": "const","type": 383,"value": 488},{"import": 777,"src": 96,"name": "blockCountFromSize","kind": "const","type": 104,"value": 108},{"import": 777,"src": 1752,"name": "warn"},{"import": 777,"src": 1753,"name": "io","kind": "const","type": 383,"value": 773},{"import": 777,"src": 1754,"name": "ArrayList","kind": "const","type": 386,"value": 563},{"import": 777,"src": 1755,"name": "Msf","kind": "const","type": 383,"value": 841},{"import": 777,"src": 1756,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 778,"src": 1757,"name": "Section","kind": "const","type": 383,"value": 388},{"import": 778,"src": 1758,"name": "Coff","kind": "const","type": 383,"value": 497},{"import": 778,"src": 1759,"name": "CoffError"},{"import": 778,"src": 1760,"name": "builtin"},{"import": 778,"src": 1761,"name": "IMAGE_DEBUG_TYPE_CODEVIEW","kind": "const","type": 409,"value": null},{"import": 778,"src": 1762,"name": "IMAGE_FILE_MACHINE_IA64","kind": "const","type": 409,"value": null},{"import": 778,"src": 1763,"name": "DEBUG_DIRECTORY","kind": "const","type": 409,"value": null},{"import": 778,"src": 1764,"name": "IMAGE_NUMBEROF_DIRECTORY_ENTRIES","kind": "const","type": 409,"value": null},{"import": 778,"src": 1765,"name": "OptionalHeader","kind": "const","type": 383,"value": 816},{"import": 778,"src": 1766,"name": "IMAGE_NT_OPTIONAL_HDR64_MAGIC","kind": "const","type": 409,"value": null},{"import": 778,"src": 1767,"name": "IMAGE_FILE_MACHINE_I386","kind": "const","type": 409,"value": null},{"import": 778,"src": 1768,"name": "std","kind": "const","type": 383,"value": 454},{"import": 778,"src": 1769,"name": "os"},{"import": 778,"src": 1770,"name": "SectionHeader","kind": "const","type": 383,"value": 696},{"import": 778,"src": 1771,"name": "File","kind": "const","type": 383,"value": 488},{"import": 778,"src": 1772,"name": "DebugDirectoryEntry","kind": "const","type": 383,"value": 830},{"import": 778,"src": 1773,"name": "CoffHeader","kind": "const","type": 383,"value": 815},{"import": 778,"src": 1774,"name": "IMAGE_NT_OPTIONAL_HDR32_MAGIC","kind": "const","type": 409,"value": null},{"import": 778,"src": 1775,"name": "IMAGE_FILE_MACHINE_AMD64","kind": "const","type": 409,"value": null},{"import": 778,"src": 1776,"name": "io"},{"import": 778,"src": 1777,"name": "ArrayList","kind": "const","type": 386,"value": 563},{"import": 778,"src": 1778,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 779,"src": 1779,"name": "Strategy"},{"import": 779,"src": 1780,"name": "Crc32"},{"import": 779,"src": 1781,"name": "Murmur2_64"},{"import": 779,"src": 1782,"name": "Wyhash","kind": "const","type": 383,"value": 675},{"import": 779,"src": 1783,"name": "SipHash128"},{"import": 779,"src": 1784,"name": "autoHashStrat"},{"import": 779,"src": 1785,"name": "murmur"},{"import": 779,"src": 1786,"name": "Murmur2_32"},{"import": 779,"src": 1787,"name": "Fnv1a_128"},{"import": 779,"src": 1788,"name": "cityhash"},{"import": 779,"src": 1789,"name": "Murmur3_32"},{"import": 779,"src": 1790,"name": "Fnv1a_32"},{"import": 779,"src": 1791,"name": "Fnv1a_64"},{"import": 779,"src": 1792,"name": "Adler32"},{"import": 779,"src": 1793,"name": "SipHash64"},{"import": 779,"src": 1794,"name": "CityHash32"},{"import": 779,"src": 1795,"name": "crc"},{"import": 779,"src": 1796,"name": "autoHash","kind": "const","type": 964,"value": 596},{"import": 779,"src": 1797,"name": "CityHash64"},{"import": 779,"src": 1798,"name": "fnv"},{"import": 779,"src": 1799,"name": "wyhash","kind": "const","type": 383,"value": 933},{"import": 779,"src": 1800,"name": "adler"},{"import": 779,"src": 1801,"name": "auto_hash","kind": "const","type": 383,"value": 1048},{"import": 779,"src": 1802,"name": "siphash"},{"import": 780,"src": 1803,"name": "eql"},{"import": 780,"src": 1804,"name": "bitCount"},{"import": 780,"src": 1805,"name": "declarations"},{"import": 780,"src": 1806,"name": "fieldIndex"},{"import": 780,"src": 1807,"name": "refAllDecls"},{"import": 780,"src": 1808,"name": "IntToEnumError"},{"import": 780,"src": 294,"name": "alignment","kind": "const","type": 435,"value": 581},{"import": 780,"src": 1809,"name": "fieldInfo"},{"import": 780,"src": 1810,"name": "activeTag"},{"import": 780,"src": 1811,"name": "declarationInfo"},{"import": 780,"src": 1812,"name": "trait","kind": "const","type": 383,"value": 991},{"import": 780,"src": 1813,"name": "TagType"},{"import": 780,"src": 1814,"name": "containerLayout"},{"import": 780,"src": 1815,"name": "tagName"},{"import": 780,"src": 1816,"name": "intToEnum"},{"import": 780,"src": 1817,"name": "TagPayloadType"},{"import": 780,"src": 1818,"name": "stringToEnum"},{"import": 780,"src": 1819,"name": "fields"},{"import": 780,"src": 291,"name": "Child","kind": "const","type": 430,"value": 578},{"import": 780,"src": 1820,"name": "mem"},{"import": 780,"src": 1821,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 780,"src": 1822,"name": "math"},{"import": 780,"src": 1823,"name": "std"},{"import": 780,"src": 1824,"name": "debug"},{"import": 780,"src": 1825,"name": "TypeId","kind": "const","type": 383,"value": 413},{"import": 780,"src": 1826,"name": "testing"},{"import": 780,"src": 1827,"name": "TypeInfo"},{"import": 781,"src": 1828,"name": "Walker"},{"import": 781,"src": 1829,"name": "makePath"},{"import": 781,"src": 1830,"name": "MAX_PATH_BYTES","kind": "const","type": 409,"value": null},{"import": 781,"src": 1831,"name": "readLink"},{"import": 781,"src": 1832,"name": "deleteDirW"},{"import": 781,"src": 1833,"name": "walkPath"},{"import": 781,"src": 1834,"name": "realpath"},{"import": 781,"src": 1835,"name": "selfExePath"},{"import": 781,"src": 1836,"name": "updateFileMode"},{"import": 781,"src": 1837,"name": "GetAppDataDirError"},{"import": 781,"src": 1838,"name": "renameC"},{"import": 781,"src": 1839,"name": "deleteDir"},{"import": 781,"src": 54,"name": "openSelfExe","kind": "const","type": 59,"value": 62},{"import": 781,"src": 1840,"name": "copyFile"},{"import": 781,"src": 1841,"name": "Dir"},{"import": 781,"src": 1842,"name": "symLink"},{"import": 781,"src": 1843,"name": "path","kind": "const","type": 383,"value": 835},{"import": 781,"src": 1844,"name": "copyFileMode"},{"import": 781,"src": 1845,"name": "realpathAlloc"},{"import": 781,"src": 1846,"name": "deleteTree"},{"import": 781,"src": 1847,"name": "SelfExePathError","kind": "const","type": 383,"value": 882},{"import": 781,"src": 1848,"name": "renameW"},{"import": 781,"src": 1849,"name": "makeDir"},{"import": 781,"src": 1850,"name": "selfExeDirPathAlloc"},{"import": 781,"src": 1851,"name": "rename"},{"import": 781,"src": 1852,"name": "symLinkC"},{"import": 781,"src": 1853,"name": "OpenSelfExeError","kind": "const","type": 383,"value": 813},{"import": 781,"src": 1854,"name": "AtomicFile"},{"import": 781,"src": 1855,"name": "makeDirW"},{"import": 781,"src": 1856,"name": "updateFile"},{"import": 781,"src": 1857,"name": "File","kind": "const","type": 383,"value": 488},{"import": 781,"src": 1858,"name": "realpathC"},{"import": 781,"src": 1859,"name": "getAppDataDir"},{"import": 781,"src": 1860,"name": "realpathW"},{"import": 781,"src": 134,"name": "selfExePathW","kind": "const","type": 185,"value": 204},{"import": 781,"src": 1861,"name": "selfExeDirPath"},{"import": 781,"src": 1862,"name": "deleteFile"},{"import": 781,"src": 1863,"name": "deleteDirC"},{"import": 781,"src": 1864,"name": "makeDirC"},{"import": 781,"src": 1865,"name": "atomicSymLink"},{"import": 781,"src": 1866,"name": "deleteFileC"},{"import": 781,"src": 1867,"name": "readLinkC"},{"import": 781,"src": 1868,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 781,"src": 1869,"name": "b64_fs_encoder"},{"import": 781,"src": 1870,"name": "os","kind": "const","type": 383,"value": 768},{"import": 781,"src": 1871,"name": "Allocator"},{"import": 781,"src": 1872,"name": "base64"},{"import": 781,"src": 1873,"name": "crypto"},{"import": 781,"src": 1874,"name": "std","kind": "const","type": 383,"value": 454},{"import": 781,"src": 1875,"name": "default_new_dir_mode"},{"import": 781,"src": 1876,"name": "PrevStatus"},{"import": 781,"src": 1877,"name": "assert"},{"import": 781,"src": 1878,"name": "mem"},{"import": 782,"src": 1879,"name": "ThreadSafeFixedBufferAllocator","kind": "const","type": 383,"value": 463},{"import": 782,"src": 1880,"name": "LoggingAllocator"},{"import": 782,"src": 1881,"name": "FixedBufferAllocator","kind": "const","type": 383,"value": 613},{"import": 782,"src": 1882,"name": "stackFallback"},{"import": 782,"src": 1883,"name": "ArenaAllocator","kind": "const","type": 383,"value": 597},{"import": 782,"src": 1884,"name": "wasm_allocator"},{"import": 782,"src": 1885,"name": "HeapAllocator"},{"import": 782,"src": 1886,"name": "c_allocator"},{"import": 782,"src": 1887,"name": "direct_allocator","kind": "const","type": 462,"value": null},{"import": 782,"src": 1888,"name": "StackFallbackAllocator"},{"import": 782,"src": 1889,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 782,"src": 1890,"name": "testAllocatorAligned"},{"import": 782,"src": 1891,"name": "testAllocatorAlignedShrink"},{"import": 782,"src": 1892,"name": "llvm.wasm.memory.size.i32"},{"import": 782,"src": 1893,"name": "maxInt"},{"import": 782,"src": 1894,"name": "WasmAllocator"},{"import": 782,"src": 1895,"name": "std","kind": "const","type": 383,"value": 454},{"import": 782,"src": 1896,"name": "c"},{"import": 782,"src": 1897,"name": "testAllocator"},{"import": 782,"src": 1898,"name": "cShrink"},{"import": 782,"src": 1899,"name": "cRealloc"},{"import": 782,"src": 1900,"name": "test_fixed_buffer_allocator_memory"},{"import": 782,"src": 1901,"name": "wasm_allocator_state"},{"import": 782,"src": 1902,"name": "testAllocatorLargeAlignment"},{"import": 782,"src": 1903,"name": "os","kind": "const","type": 383,"value": 768},{"import": 782,"src": 1904,"name": "debug","kind": "const","type": 383,"value": 769},{"import": 782,"src": 1905,"name": "llvm.wasm.memory.grow.i32"},{"import": 782,"src": 1906,"name": "testing"},{"import": 782,"src": 1907,"name": "c_allocator_state"},{"import": 782,"src": 1908,"name": "DirectAllocator","kind": "const","type": 383,"value": 1049},{"import": 782,"src": 1909,"name": "direct_allocator_state","kind": "var","type": 753,"value": null},{"import": 782,"src": 1910,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 782,"src": 1911,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 782,"src": 1912,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 783,"src": 1913,"name": "Timer","kind": "const","type": 383,"value": 939},{"import": 783,"src": 1914,"name": "microsecond","kind": "const","type": 409,"value": null},{"import": 783,"src": 1915,"name": "milliTimestamp"},{"import": 783,"src": 1916,"name": "s_per_day"},{"import": 783,"src": 220,"name": "sleep","kind": "const","type": 304,"value": 400},{"import": 783,"src": 1917,"name": "s_per_week"},{"import": 783,"src": 1918,"name": "hour"},{"import": 783,"src": 1919,"name": "ns_per_s","kind": "const","type": 409,"value": null},{"import": 783,"src": 1920,"name": "s_per_hour"},{"import": 783,"src": 1921,"name": "nanosecond","kind": "const","type": 409,"value": null},{"import": 783,"src": 1922,"name": "second"},{"import": 783,"src": 1923,"name": "timestamp"},{"import": 783,"src": 1924,"name": "epoch"},{"import": 783,"src": 1925,"name": "minute"},{"import": 783,"src": 1926,"name": "millisecond","kind": "const","type": 409,"value": null},{"import": 783,"src": 1927,"name": "s_per_min"},{"import": 783,"src": 1928,"name": "ms_per_s","kind": "const","type": 409,"value": null},{"import": 783,"src": 1929,"name": "us_per_s"},{"import": 783,"src": 1930,"name": "cs_per_s"},{"import": 783,"src": 1931,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 783,"src": 1932,"name": "math","kind": "const","type": 383,"value": 766},{"import": 783,"src": 1933,"name": "std","kind": "const","type": 383,"value": 454},{"import": 783,"src": 1934,"name": "os","kind": "const","type": 383,"value": 768},{"import": 783,"src": 1935,"name": "testing"},{"import": 783,"src": 1936,"name": "assert"},{"import": 940,"src": 260,"name": "start","kind": "const","type": 349,"value": 471},{"import": 940,"src": 266,"name": "log","kind": "const","type": 1050,"value": 642},{"import": 940,"src": 264,"name": "refresh","kind": "const","type": 353,"value": 475},{"import": 940,"src": 1937,"name": "Node","kind": "const","type": 383,"value": 687},{"import": 940,"src": 272,"name": "maybeRefresh","kind": "const","type": 353,"value": 500},{"import": 940,"src": 270,"name": "bufWrite","kind": "const","type": 1051,"value": 643},{"import": 975,"src": 1938,"name": "exeFileExt"},{"import": 975,"src": 1939,"name": "getArchPtrBitWidth"},{"import": 975,"src": 1940,"name": "zigTriple"},{"import": 975,"src": 1941,"name": "getAbi"},{"import": 975,"src": 1942,"name": "stack_align"},{"import": 975,"src": 1943,"name": "subArchName"},{"import": 975,"src": 1944,"name": "isDarwin"},{"import": 975,"src": 1945,"name": "getArch"},{"import": 975,"src": 1946,"name": "zigTripleNoSubArch"},{"import": 975,"src": 1947,"name": "isMinGW"},{"import": 975,"src": 1948,"name": "parseArchSub"},{"import": 975,"src": 1949,"name": "staticLibSuffix"},{"import": 975,"src": 1950,"name": "isWindows"},{"import": 975,"src": 1951,"name": "oFileExt"},{"import": 975,"src": 1952,"name": "isFreeBSD"},{"import": 975,"src": 1953,"name": "isGnu"},{"import": 975,"src": 1954,"name": "allocDescription"},{"import": 975,"src": 1955,"name": "vcpkgTriplet"},{"import": 975,"src": 1956,"name": "dynamicLibSuffix"},{"import": 975,"src": 1957,"name": "Os","kind": "const","type": 383,"value": 759},{"import": 975,"src": 1958,"name": "Abi","kind": "const","type": 383,"value": 1054},{"import": 975,"src": 1959,"name": "Cross","kind": "const","type": 383,"value": 1055},{"import": 975,"src": 1960,"name": "osRequiresLibC"},{"import": 975,"src": 1961,"name": "ParseArchSubError"},{"import": 975,"src": 1962,"name": "linuxTriple"},{"import": 975,"src": 1963,"name": "wantSharedLibSymLinks"},{"import": 975,"src": 1964,"name": "ObjectFormat"},{"import": 975,"src": 1965,"name": "current"},{"import": 975,"src": 1966,"name": "Executor"},{"import": 975,"src": 1967,"name": "parseOs"},{"import": 975,"src": 1968,"name": "getOs"},{"import": 975,"src": 1969,"name": "libPrefix"},{"import": 975,"src": 1970,"name": "Arch","kind": "const","type": 383,"value": 761},{"import": 975,"src": 1971,"name": "isNetBSD"},{"import": 975,"src": 1972,"name": "SubSystem"},{"import": 975,"src": 1973,"name": "parse"},{"import": 975,"src": 1974,"name": "isLinux"},{"import": 975,"src": 1975,"name": "getExternalExecutor"},{"import": 975,"src": 1976,"name": "parseAbi"},{"import": 975,"src": 1977,"name": "isUefi"},{"import": 975,"src": 1978,"name": "defaultAbi"},{"import": 975,"src": 1979,"name": "isWasm"},{"import": 975,"src": 1980,"name": "archSubArchName"},{"import": 932,"src": 1981,"name": "Backoff","kind": "const","type": 383,"value": 671},{"import": 932,"src": 1982,"name": "acquire"},{"import": 932,"src": 1983,"name": "init"},{"import": 932,"src": 1984,"name": "Held"},{"import": 932,"src": 218,"name": "yield","kind": "const","type": 302,"value": 398},{"import": 787,"src": 82,"name": "getCwdAlloc","kind": "const","type": 89,"value": 93},{"import": 787,"src": 1985,"name": "getEnvMap"},{"import": 787,"src": 1986,"name": "exit"},{"import": 787,"src": 1987,"name": "changeCurDir"},{"import": 787,"src": 1988,"name": "ArgIterator"},{"import": 787,"src": 1989,"name": "ArgIteratorPosix"},{"import": 787,"src": 1990,"name": "argsFree"},{"import": 787,"src": 112,"name": "getBaseAddress","kind": "const","type": 159,"value": 165},{"import": 787,"src": 1991,"name": "posixGetUserInfo"},{"import": 787,"src": 1992,"name": "changeCurDirC"},{"import": 787,"src": 1993,"name": "argsAlloc"},{"import": 787,"src": 1994,"name": "UserInfo"},{"import": 787,"src": 1995,"name": "getCwd"},{"import": 787,"src": 157,"name": "getEnvVarOwned","kind": "const","type": 206,"value": 245},{"import": 787,"src": 1996,"name": "ArgIteratorWindows"},{"import": 787,"src": 1997,"name": "GetEnvVarOwnedError","kind": "const","type": 383,"value": 892},{"import": 787,"src": 1998,"name": "getUserInfo"},{"import": 787,"src": 1999,"name": "abort"},{"import": 787,"src": 2000,"name": "args"},{"import": 787,"src": 2001,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 787,"src": 2002,"name": "BufMap"},{"import": 787,"src": 2003,"name": "math","kind": "const","type": 383,"value": 766},{"import": 787,"src": 2004,"name": "testWindowsCmdLine"},{"import": 787,"src": 2005,"name": "std","kind": "const","type": 383,"value": 454},{"import": 787,"src": 2006,"name": "os","kind": "const","type": 383,"value": 768},{"import": 787,"src": 2007,"name": "Buffer"},{"import": 787,"src": 2008,"name": "testing"},{"import": 787,"src": 2009,"name": "fs","kind": "const","type": 383,"value": 781},{"import": 787,"src": 2010,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 787,"src": 2011,"name": "assert"},{"import": 787,"src": 2012,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 788,"src": 2013,"name": "N_OLEVEL"},{"import": 788,"src": 2014,"name": "MH_NOUNDEFS"},{"import": 788,"src": 2015,"name": "LC_SEGMENT_SPLIT_INFO"},{"import": 788,"src": 2016,"name": "LC_DYLD_INFO_ONLY"},{"import": 788,"src": 2017,"name": "MH_HAS_TLV_DESCRIPTORS"},{"import": 788,"src": 2018,"name": "LC_FVMFILE"},{"import": 788,"src": 2019,"name": "N_GSYM"},{"import": 788,"src": 2020,"name": "S_4BYTE_LITERALS"},{"import": 788,"src": 2021,"name": "LC_SUB_UMBRELLA"},{"import": 788,"src": 2022,"name": "LC_FUNCTION_STARTS"},{"import": 788,"src": 2023,"name": "LC_UNIXTHREAD"},{"import": 788,"src": 2024,"name": "LC_TWOLEVEL_HINTS"},{"import": 788,"src": 2025,"name": "LC_VERSION_MIN_TVOS"},{"import": 788,"src": 2026,"name": "N_PEXT"},{"import": 788,"src": 2027,"name": "SECTION_ATTRIBUTES"},{"import": 788,"src": 2028,"name": "N_LBRAC"},{"import": 788,"src": 2029,"name": "segment_command"},{"import": 788,"src": 2030,"name": "mach_header"},{"import": 788,"src": 2031,"name": "N_ENTRY"},{"import": 788,"src": 2032,"name": "LC_PREBOUND_DYLIB"},{"import": 788,"src": 2033,"name": "MH_SETUID_SAFE"},{"import": 788,"src": 2034,"name": "MH_DYLDLINK"},{"import": 788,"src": 2035,"name": "N_OPT"},{"import": 788,"src": 2036,"name": "S_8BYTE_LITERALS"},{"import": 788,"src": 2037,"name": "MH_PRELOAD"},{"import": 788,"src": 2038,"name": "N_LENG"},{"import": 788,"src": 2039,"name": "MH_DYLIB"},{"import": 788,"src": 2040,"name": "N_BNSYM"},{"import": 788,"src": 2041,"name": "S_CSTRING_LITERALS"},{"import": 788,"src": 2042,"name": "section_64","kind": "const","type": 383,"value": 1056},{"import": 788,"src": 2043,"name": "LC_SUB_CLIENT"},{"import": 788,"src": 2044,"name": "MH_BUNDLE"},{"import": 788,"src": 2045,"name": "N_ECOML"},{"import": 788,"src": 2046,"name": "LC_ROUTINES_64"},{"import": 788,"src": 2047,"name": "LC_ENCRYPTION_INFO"},{"import": 788,"src": 2048,"name": "MH_WEAK_DEFINES"},{"import": 788,"src": 2049,"name": "MH_FORCE_FLAT"},{"import": 788,"src": 2050,"name": "MH_SUBSECTIONS_VIA_SYMBOLS"},{"import": 788,"src": 2051,"name": "MH_DYLINKER"},{"import": 788,"src": 2052,"name": "MH_DEAD_STRIPPABLE_DYLIB"},{"import": 788,"src": 2053,"name": "LC_DYSYMTAB"},{"import": 788,"src": 2054,"name": "symtab_command"},{"import": 788,"src": 2055,"name": "LC_PREPAGE"},{"import": 788,"src": 2056,"name": "MH_NO_REEXPORTED_DYLIBS"},{"import": 788,"src": 2057,"name": "LC_THREAD"},{"import": 788,"src": 2058,"name": "N_EXT"},{"import": 788,"src": 2059,"name": "N_SLINE"},{"import": 788,"src": 2060,"name": "LC_LINKER_OPTION"},{"import": 788,"src": 2061,"name": "MH_MAGIC"},{"import": 788,"src": 2062,"name": "N_FUN"},{"import": 788,"src": 2063,"name": "MH_NO_HEAP_EXECUTION"},{"import": 788,"src": 2064,"name": "cpu_type_t","kind": "const","type": 383,"value": 1057},{"import": 788,"src": 2065,"name": "MH_INCRLINK"},{"import": 788,"src": 2066,"name": "LC_VERSION_MIN_WATCHOS"},{"import": 788,"src": 2067,"name": "MH_APP_EXTENSION_SAFE"},{"import": 788,"src": 2068,"name": "N_RSYM"},{"import": 788,"src": 2069,"name": "LC_DATA_IN_CODE"},{"import": 788,"src": 2070,"name": "MH_FVMLIB"},{"import": 788,"src": 2071,"name": "MH_ALLOW_STACK_EXECUTION"},{"import": 788,"src": 2072,"name": "N_LSYM"},{"import": 788,"src": 2073,"name": "LC_REEXPORT_DYLIB"},{"import": 788,"src": 2074,"name": "N_STSYM"},{"import": 788,"src": 2075,"name": "MH_PIE"},{"import": 788,"src": 2076,"name": "integer_t","kind": "const","type": 383,"value": 1057},{"import": 788,"src": 2077,"name": "LC_DYLD_INFO"},{"import": 788,"src": 2078,"name": "LC_ENCRYPTION_INFO_64"},{"import": 788,"src": 2079,"name": "MH_EXECUTE"},{"import": 788,"src": 2080,"name": "MH_CIGAM"},{"import": 788,"src": 2081,"name": "LC_SEGMENT_64"},{"import": 788,"src": 2082,"name": "MH_BINDS_TO_WEAK"},{"import": 788,"src": 2083,"name": "LC_LOADFVMLIB"},{"import": 788,"src": 2084,"name": "MH_BINDATLOAD"},{"import": 788,"src": 2085,"name": "MH_NOMULTIDEFS"},{"import": 788,"src": 2086,"name": "LC_VERSION_MIN_IPHONEOS"},{"import": 788,"src": 2087,"name": "segment_command_64"},{"import": 788,"src": 2088,"name": "mach_header_64","kind": "const","type": 383,"value": 1058},{"import": 788,"src": 2089,"name": "LC_BUILD_VERSION"},{"import": 788,"src": 2090,"name": "N_EXCL"},{"import": 788,"src": 2091,"name": "MH_TWOLEVEL"},{"import": 788,"src": 2092,"name": "nlist_64","kind": "const","type": 383,"value": 739},{"import": 788,"src": 2093,"name": "MH_PREBINDABLE"},{"import": 788,"src": 2094,"name": "MH_NLIST_OUTOFSYNC_WITH_DYLDINFO"},{"import": 788,"src": 2095,"name": "S_ATTR_DEBUG"},{"import": 788,"src": 2096,"name": "LC_SUB_LIBRARY"},{"import": 788,"src": 2097,"name": "LC_UUID"},{"import": 788,"src": 2098,"name": "MH_DYLIB_STUB"},{"import": 788,"src": 2099,"name": "LC_SYMTAB"},{"import": 788,"src": 2100,"name": "cpu_subtype_t","kind": "const","type": 383,"value": 1057},{"import": 788,"src": 2101,"name": "N_RBRAC"},{"import": 788,"src": 2102,"name": "S_ZEROFILL"},{"import": 788,"src": 2103,"name": "LC_SOURCE_VERSION"},{"import": 788,"src": 2104,"name": "LC_ID_DYLINKER"},{"import": 788,"src": 2105,"name": "LC_VERSION_MIN_MACOSX"},{"import": 788,"src": 2106,"name": "nlist"},{"import": 788,"src": 2107,"name": "LC_NOTE"},{"import": 788,"src": 2108,"name": "N_FNAME"},{"import": 788,"src": 2109,"name": "SECTION_TYPE"},{"import": 788,"src": 2110,"name": "S_REGULAR"},{"import": 788,"src": 2111,"name": "MH_CIGAM_64"},{"import": 788,"src": 2112,"name": "LC_LOAD_UPWARD_DYLIB"},{"import": 788,"src": 2113,"name": "MH_ALLMODSBOUND"},{"import": 788,"src": 2114,"name": "LC_IDFVMLIB"},{"import": 788,"src": 2115,"name": "MH_SPLIT_SEGS"},{"import": 788,"src": 2116,"name": "MH_LAZY_INIT"},{"import": 788,"src": 2117,"name": "N_BINCL"},{"import": 788,"src": 2118,"name": "MH_ROOT_SAFE"},{"import": 788,"src": 2119,"name": "vm_prot_t"},{"import": 788,"src": 2120,"name": "LC_DYLD_ENVIRONMENT"},{"import": 788,"src": 2121,"name": "LC_IDENT"},{"import": 788,"src": 2122,"name": "N_AST"},{"import": 788,"src": 2123,"name": "LC_CODE_SIGNATURE"},{"import": 788,"src": 2124,"name": "LC_SUB_FRAMEWORK"},{"import": 788,"src": 2125,"name": "N_SO"},{"import": 788,"src": 2126,"name": "load_command"},{"import": 788,"src": 2127,"name": "MH_MAGIC_64"},{"import": 788,"src": 2128,"name": "LC_ID_DYLIB"},{"import": 788,"src": 2129,"name": "LC_RPATH"},{"import": 788,"src": 2130,"name": "MH_CORE"},{"import": 788,"src": 2131,"name": "MH_PREBOUND"},{"import": 788,"src": 2132,"name": "MH_NOFIXPREBINDING"},{"import": 788,"src": 2133,"name": "section"},{"import": 788,"src": 2134,"name": "N_SOL"},{"import": 788,"src": 2135,"name": "N_ECOMM"},{"import": 788,"src": 2136,"name": "N_LCSYM"},{"import": 788,"src": 2137,"name": "LC_SYMSEG"},{"import": 788,"src": 2138,"name": "N_PSYM"},{"import": 788,"src": 2139,"name": "N_VERSION"},{"import": 788,"src": 2140,"name": "N_BCOMM"},{"import": 788,"src": 2141,"name": "LC_LAZY_LOAD_DYLIB"},{"import": 788,"src": 2142,"name": "N_EINCL"},{"import": 788,"src": 2143,"name": "MH_DSYM"},{"import": 788,"src": 2144,"name": "N_STAB"},{"import": 788,"src": 2145,"name": "LC_REQ_DYLD"},{"import": 788,"src": 2146,"name": "LC_SEGMENT"},{"import": 788,"src": 2147,"name": "LC_PREBIND_CKSUM"},{"import": 788,"src": 2148,"name": "LC_MAIN"},{"import": 788,"src": 2149,"name": "N_ENSYM"},{"import": 788,"src": 2150,"name": "LC_LINKER_OPTIMIZATION_HINT"},{"import": 788,"src": 2151,"name": "N_TYPE"},{"import": 788,"src": 2152,"name": "LC_DYLIB_CODE_SIGN_DRS"},{"import": 788,"src": 2153,"name": "LC_ROUTINES"},{"import": 788,"src": 2154,"name": "S_LITERAL_POINTERS"},{"import": 788,"src": 2155,"name": "N_OSO"},{"import": 788,"src": 2156,"name": "MH_OBJECT"},{"import": 788,"src": 2157,"name": "LC_LOAD_DYLINKER"},{"import": 788,"src": 2158,"name": "LC_LOAD_DYLIB"},{"import": 788,"src": 2159,"name": "N_PARAMS"},{"import": 788,"src": 2160,"name": "MH_KEXT_BUNDLE"},{"import": 788,"src": 2161,"name": "N_SSYM"},{"import": 788,"src": 2162,"name": "MH_CANONICAL"},{"import": 788,"src": 2163,"name": "LC_LOAD_WEAK_DYLIB"},{"import": 788,"src": 2164,"name": "linkedit_data_command"},{"import": 805,"src": 2165,"name": "File","kind": "const","type": 383,"value": 488},{"import": 805,"src": 2166,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 805,"src": 2167,"name": "windows","kind": "const","type": 383,"value": 1003},{"import": 805,"src": 2168,"name": "maxInt"},{"import": 805,"src": 2169,"name": "math"},{"import": 805,"src": 2170,"name": "io","kind": "const","type": 383,"value": 773},{"import": 805,"src": 2171,"name": "std","kind": "const","type": 383,"value": 454},{"import": 805,"src": 2172,"name": "os","kind": "const","type": 383,"value": 768},{"import": 805,"src": 2173,"name": "Os"},{"import": 805,"src": 2174,"name": "assert"},{"import": 805,"src": 2175,"name": "mem"},{"import": 778,"src": 2176,"name": "DataDirectory","kind": "const","type": 383,"value": 1059},{"import": 835,"src": 2177,"name": "isAbsoluteW"},{"import": 835,"src": 2178,"name": "delimiter_windows"},{"import": 835,"src": 2179,"name": "isAbsolutePosix"},{"import": 835,"src": 2180,"name": "dirname"},{"import": 835,"src": 2181,"name": "relative"},{"import": 835,"src": 2182,"name": "resolvePosix"},{"import": 835,"src": 162,"name": "basenameWindows","kind": "const","type": 164,"value": 254},{"import": 835,"src": 2183,"name": "dirnameWindows"},{"import": 835,"src": 142,"name": "isAbsoluteWindows","kind": "const","type": 192,"value": 214},{"import": 835,"src": 115,"name": "basename","kind": "const","type": 164,"value": 172},{"import": 835,"src": 2184,"name": "joinPosix"},{"import": 835,"src": 2185,"name": "dirnamePosix"},{"import": 835,"src": 83,"name": "windowsParsePath","kind": "const","type": 90,"value": 94},{"import": 835,"src": 2186,"name": "relativeWindows"},{"import": 835,"src": 150,"name": "isAbsolute","kind": "const","type": 192,"value": 222},{"import": 835,"src": 2187,"name": "delimiter_posix"},{"import": 835,"src": 2188,"name": "joinWindows"},{"import": 835,"src": 2189,"name": "sep"},{"import": 835,"src": 2190,"name": "diskDesignator"},{"import": 835,"src": 81,"name": "resolveWindows","kind": "const","type": 88,"value": 92},{"import": 835,"src": 2191,"name": "WindowsPath","kind": "const","type": 383,"value": 528},{"import": 835,"src": 2192,"name": "diskDesignatorWindows"},{"import": 835,"src": 2193,"name": "sep_str"},{"import": 835,"src": 2194,"name": "isSep"},{"import": 835,"src": 2195,"name": "relativePosix"},{"import": 835,"src": 80,"name": "resolve","kind": "const","type": 87,"value": 91},{"import": 835,"src": 2196,"name": "sep_windows","kind": "const","type": 409,"value": null},{"import": 835,"src": 2197,"name": "sep_posix"},{"import": 835,"src": 2198,"name": "join"},{"import": 835,"src": 2199,"name": "delimiter"},{"import": 835,"src": 2200,"name": "basenamePosix"},{"import": 835,"src": 2201,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 835,"src": 2202,"name": "joinSep"},{"import": 835,"src": 144,"name": "asciiEqlIgnoreCase","kind": "const","type": 67,"value": 216},{"import": 835,"src": 2203,"name": "math"},{"import": 835,"src": 2204,"name": "testIsAbsolutePosix"},{"import": 835,"src": 2205,"name": "debug","kind": "const","type": 383,"value": 769},{"import": 835,"src": 2206,"name": "testing"},{"import": 835,"src": 2207,"name": "testResolvePosix"},{"import": 835,"src": 2208,"name": "testBasenameWindows"},{"import": 835,"src": 2209,"name": "Allocator","kind": "const","type": 383,"value": 753},{"import": 835,"src": 2210,"name": "testDirnameWindows"},{"import": 835,"src": 2211,"name": "fmt"},{"import": 835,"src": 2212,"name": "testIsAbsoluteWindows"},{"import": 835,"src": 2213,"name": "testBasename"},{"import": 835,"src": 2214,"name": "testJoinPosix"},{"import": 835,"src": 2215,"name": "testDirnamePosix"},{"import": 835,"src": 2216,"name": "networkShareServersEql"},{"import": 835,"src": 2217,"name": "testRelativeWindows"},{"import": 835,"src": 85,"name": "compareDiskDesignators","kind": "const","type": 92,"value": 96},{"import": 835,"src": 84,"name": "asciiUpper","kind": "const","type": 91,"value": 95},{"import": 835,"src": 2218,"name": "testJoinWindows"},{"import": 835,"src": 2219,"name": "std","kind": "const","type": 383,"value": 454},{"import": 835,"src": 2220,"name": "testResolveWindows"},{"import": 835,"src": 2221,"name": "fs"},{"import": 835,"src": 2222,"name": "testRelativePosix"},{"import": 835,"src": 2223,"name": "windows"},{"import": 835,"src": 2224,"name": "process","kind": "const","type": 383,"value": 787},{"import": 835,"src": 2225,"name": "testBasenamePosix"},{"import": 835,"src": 2226,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 835,"src": 2227,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 777,"src": 99,"name": "getStream","kind": "const","type": 111,"value": 116},{"import": 777,"src": 92,"name": "openFile","kind": "const","type": 99,"value": 103},{"import": 777,"src": 105,"name": "getStreamById","kind": "const","type": 125,"value": 130},{"import": 777,"src": 94,"name": "openFile","kind": "const","type": 101,"value": 105},{"import": 777,"src": 2228,"name": "file_magic","kind": "const","type": 934,"value": null},{"import": 769,"src": 100,"name": "maxLoad","kind": "const","type": 113,"value": 118},{"import": 927,"src": 2229,"name": "Mutex","kind": "const","type": 383,"value": 663},{"import": 927,"src": 2230,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 927,"src": 2231,"name": "std","kind": "const","type": 383,"value": 454},{"import": 927,"src": 2232,"name": "SpinLock","kind": "const","type": 383,"value": 786},{"import": 927,"src": 2233,"name": "ThreadParker","kind": "const","type": 383,"value": 664},{"import": 927,"src": 2234,"name": "worker"},{"import": 927,"src": 2235,"name": "testing"},{"import": 927,"src": 2236,"name": "TestContext"},{"import": 929,"src": 2237,"name": "ThreadParker","kind": "const","type": 383,"value": 664},{"import": 929,"src": 2238,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 929,"src": 2239,"name": "time"},{"import": 929,"src": 2240,"name": "PosixParker"},{"import": 929,"src": 2241,"name": "windows","kind": "const","type": 383,"value": 1003},{"import": 929,"src": 2242,"name": "SpinParker"},{"import": 929,"src": 2243,"name": "std","kind": "const","type": 383,"value": 454},{"import": 929,"src": 2244,"name": "WindowsParker","kind": "const","type": 383,"value": 664},{"import": 929,"src": 2245,"name": "SpinLock","kind": "const","type": 383,"value": 786},{"import": 929,"src": 2246,"name": "LinuxParker"},{"import": 929,"src": 2247,"name": "testing"},{"import": 929,"src": 2248,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 929,"src": 2249,"name": "linux"},{"import": 932,"src": 2250,"name": "SpinLock","kind": "const","type": 383,"value": 786},{"import": 932,"src": 2251,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 932,"src": 2252,"name": "std","kind": "const","type": 383,"value": 454},{"import": 932,"src": 2253,"name": "time","kind": "const","type": 383,"value": 783},{"import": 932,"src": 2254,"name": "os","kind": "const","type": 383,"value": 768},{"import": 932,"src": 2255,"name": "assert"},{"import": 933,"src": 2256,"name": "Wyhash","kind": "const","type": 383,"value": 675},{"import": 933,"src": 245,"name": "mix0","kind": "const","type": 334,"value": 443},{"import": 933,"src": 247,"name": "read_8bytes_swapped","kind": "const","type": 335,"value": 447},{"import": 933,"src": 2257,"name": "primes","kind": "const","type": 1073,"value": null},{"import": 933,"src": 249,"name": "mum","kind": "const","type": 336,"value": 449},{"import": 933,"src": 248,"name": "mix1","kind": "const","type": 334,"value": 448},{"import": 933,"src": 2258,"name": "expectEqual"},{"import": 933,"src": 2259,"name": "std","kind": "const","type": 383,"value": 454},{"import": 933,"src": 2260,"name": "WyhashStateless","kind": "const","type": 383,"value": 677},{"import": 933,"src": 246,"name": "read_bytes","kind": "const","type": 1074,"value": 644},{"import": 933,"src": 2261,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 783,"src": 2262,"name": "reset"},{"import": 783,"src": 271,"name": "read","kind": "const","type": 364,"value": 498},{"import": 783,"src": 2263,"name": "lap"},{"import": 783,"src": 261,"name": "start","kind": "const","type": 350,"value": 472},{"import": 783,"src": 2264,"name": "Error","kind": "const","type": 383,"value": 938},{"import": 783,"src": 275,"name": "clockNative","kind": "const","type": 357,"value": 521},{"import": 783,"src": 2265,"name": "monotonic_clock_id"},{"import": 940,"src": 2266,"name": "Progress","kind": "const","type": 383,"value": 784},{"import": 940,"src": 2267,"name": "std","kind": "const","type": 383,"value": 454},{"import": 940,"src": 2268,"name": "assert"},{"import": 940,"src": 2269,"name": "testing"},{"import": 946,"src": 2270,"name": "main"},{"import": 946,"src": 2271,"name": "builtin"},{"import": 946,"src": 2272,"name": "io"},{"import": 946,"src": 2273,"name": "std"},{"import": 946,"src": 2274,"name": "test_fn_list"},{"import": 706,"src": 2275,"name": "FnDecl","kind": "const","type": 383,"value": 1076},{"import": 960,"src": 2276,"name": "Loop","kind": "const","type": 383,"value": 1021},{"import": 960,"src": 2277,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 960,"src": 2278,"name": "root","kind": "const","type": 383,"value": 455},{"import": 960,"src": 2279,"name": "AtomicRmwOp"},{"import": 960,"src": 2280,"name": "testEventLoop2"},{"import": 960,"src": 2281,"name": "windows","kind": "const","type": 383,"value": 1003},{"import": 960,"src": 2282,"name": "maxInt"},{"import": 960,"src": 2283,"name": "Thread","kind": "const","type": 383,"value": 767},{"import": 960,"src": 2284,"name": "std","kind": "const","type": 383,"value": 454},{"import": 960,"src": 2285,"name": "testEventLoop"},{"import": 960,"src": 2286,"name": "os","kind": "const","type": 383,"value": 768},{"import": 960,"src": 2287,"name": "AtomicOrder"},{"import": 960,"src": 2288,"name": "assert"},{"import": 960,"src": 2289,"name": "testing"},{"import": 960,"src": 2290,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 960,"src": 2291,"name": "fs"},{"import": 975,"src": 2292,"name": "Target","kind": "const","type": 383,"value": 785},{"import": 975,"src": 2293,"name": "builtin"},{"import": 975,"src": 2294,"name": "std"},{"import": 975,"src": 2295,"name": "mem"},{"import": 991,"src": 279,"name": "isSlice","kind": "const","type": 400,"value": 566},{"import": 991,"src": 2296,"name": "hasFn"},{"import": 991,"src": 2297,"name": "isExtern"},{"import": 991,"src": 2298,"name": "isContainer"},{"import": 991,"src": 290,"name": "isSingleItemPtr","kind": "const","type": 429,"value": 577},{"import": 991,"src": 2299,"name": "multiTrait"},{"import": 991,"src": 2300,"name": "isNumber"},{"import": 991,"src": 285,"name": "is","kind": "const","type": 411,"value": 572},{"import": 991,"src": 2301,"name": "isUnsignedInt"},{"import": 991,"src": 2302,"name": "TraitFn","kind": "const","type": 383,"value": 412},{"import": 991,"src": 2303,"name": "isManyItemPtr"},{"import": 991,"src": 2304,"name": "isSignedInt"},{"import": 991,"src": 2305,"name": "isIndexable"},{"import": 991,"src": 2306,"name": "isPtrTo"},{"import": 991,"src": 2307,"name": "isPacked"},{"import": 991,"src": 2308,"name": "TraitList"},{"import": 991,"src": 2309,"name": "hasField"},{"import": 991,"src": 284,"name": "isConstPtr","kind": "const","type": 410,"value": 571},{"import": 991,"src": 2310,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 991,"src": 2311,"name": "std"},{"import": 991,"src": 2312,"name": "debug"},{"import": 991,"src": 2313,"name": "meta"},{"import": 991,"src": 2314,"name": "testing"},{"import": 991,"src": 2315,"name": "traitFnWorkaround","kind": "const","type": 412,"value": 645},{"import": 991,"src": 2316,"name": "warn"},{"import": 991,"src": 2317,"name": "mem"},{"import": 996,"src": 2318,"name": "Thread","kind": "const","type": 383,"value": 767},{"import": 996,"src": 2319,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 996,"src": 2320,"name": "std","kind": "const","type": 383,"value": 454},{"import": 996,"src": 2321,"name": "c"},{"import": 996,"src": 2322,"name": "os"},{"import": 996,"src": 2323,"name": "windows","kind": "const","type": 383,"value": 1003},{"import": 996,"src": 2324,"name": "assert"},{"import": 996,"src": 2325,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 1077,"src": 2326,"name": "EXCEPTION_DATATYPE_MISALIGNMENT","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2327,"name": "MEM_RESERVE_PLACEHOLDERS"},{"import": 1077,"src": 2328,"name": "FILE_ACTION_MODIFIED"},{"import": 1077,"src": 2329,"name": "OBJ_KERNEL_HANDLE"},{"import": 1077,"src": 2330,"name": "STARTF_RUNFULLSCREEN"},{"import": 1077,"src": 2331,"name": "FileCompressionInfo"},{"import": 1077,"src": 2332,"name": "PSECURITY_ATTRIBUTES"},{"import": 1077,"src": 2333,"name": "CREATE_UNICODE_ENVIRONMENT"},{"import": 1077,"src": 2334,"name": "FILE_NOTIFY_INFORMATION"},{"import": 1077,"src": 2335,"name": "EXCEPTION_POINTERS","kind": "const","type": 383,"value": 936},{"import": 1077,"src": 2336,"name": "RTL_DRIVE_LETTER_CURDIR","kind": "const","type": 383,"value": 1078},{"import": 1077,"src": 2337,"name": "FILE_TRANSACTED_MODE"},{"import": 1077,"src": 2338,"name": "COINIT_DISABLE_OLE1DDE"},{"import": 1077,"src": 2339,"name": "KF_FLAG_NOT_PARENT_RELATIVE"},{"import": 1077,"src": 2340,"name": "WIN32_FIND_DATAW"},{"import": 1077,"src": 2341,"name": "FILE_OPEN"},{"import": 1077,"src": 2342,"name": "FileFullDirectoryInfo"},{"import": 1077,"src": 2343,"name": "E_UNEXPECTED"},{"import": 1077,"src": 2344,"name": "LPCTSTR"},{"import": 1077,"src": 2345,"name": "EXCEPTION_ACCESS_VIOLATION","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2346,"name": "WCHAR","kind": "const","type": 383,"value": 427},{"import": 1077,"src": 2347,"name": "BOOL","kind": "const","type": 383,"value": 1057},{"import": 1077,"src": 2348,"name": "FILE_NAME_INFORMATION"},{"import": 1077,"src": 2349,"name": "WRITE_DAC"},{"import": 1077,"src": 2350,"name": "FILE_FLAG_OVERLAPPED"},{"import": 1077,"src": 2351,"name": "FILE_ACCESS_INFORMATION"},{"import": 1077,"src": 2352,"name": "OBJ_OPENIF"},{"import": 1077,"src": 2353,"name": "NTSTATUS","kind": "const","type": 383,"value": 397},{"import": 1077,"src": 2354,"name": "PHKEY"},{"import": 1077,"src": 2355,"name": "FILE_NAME_NORMALIZED"},{"import": 1077,"src": 2356,"name": "HANDLE","kind": "const","type": 383,"value": 405},{"import": 1077,"src": 2357,"name": "LANG","kind": "const","type": 383,"value": 1079},{"import": 1077,"src": 2358,"name": "FILE_MAXIMUM_DISPOSITION"},{"import": 1077,"src": 2359,"name": "KF_FLAG_CREATE"},{"import": 1077,"src": 2360,"name": "VOLUME_NAME_NT"},{"import": 1077,"src": 2361,"name": "VECTORED_EXCEPTION_HANDLER","kind": "const","type": 383,"value": 345},{"import": 1077,"src": 2362,"name": "FILE_ATTRIBUTE_ENCRYPTED"},{"import": 1077,"src": 2363,"name": "UINT","kind": "const","type": 383,"value": 1080},{"import": 1077,"src": 2364,"name": "FILE_NO_EA_KNOWLEDGE"},{"import": 1077,"src": 2365,"name": "COINIT_SPEED_OVER_MEMORY"},{"import": 1077,"src": 2366,"name": "PAGE_TARGETS_INVALID"},{"import": 1077,"src": 2367,"name": "FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS"},{"import": 1077,"src": 2368,"name": "HEAP_NO_SERIALIZE"},{"import": 1077,"src": 2369,"name": "FileIdInfo"},{"import": 1077,"src": 2370,"name": "LPTSTR"},{"import": 1077,"src": 2371,"name": "MEM_PHYSICAL"},{"import": 1077,"src": 2372,"name": "FALSE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2373,"name": "FILE_CREATE_TREE_CONNECTION"},{"import": 1077,"src": 2374,"name": "MOVEFILE_DELAY_UNTIL_REBOOT"},{"import": 1077,"src": 2375,"name": "KF_FLAG_SIMPLE_IDLIST"},{"import": 1077,"src": 2376,"name": "KF_FLAG_DONT_UNEXPAND"},{"import": 1077,"src": 2377,"name": "FILE_ATTRIBUTE_DIRECTORY"},{"import": 1077,"src": 2378,"name": "BY_HANDLE_FILE_INFORMATION"},{"import": 1077,"src": 2379,"name": "FileIoPriorityHintInfo"},{"import": 1077,"src": 2380,"name": "FILE_FLAG_WRITE_THROUGH"},{"import": 1077,"src": 2381,"name": "PEB_LDR_DATA","kind": "const","type": 383,"value": 1081},{"import": 1077,"src": 2382,"name": "FILE_CREATE"},{"import": 1077,"src": 2383,"name": "GENERIC_WRITE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2384,"name": "FILE_NON_DIRECTORY_FILE"},{"import": 1077,"src": 2385,"name": "INIT_ONCE_FN"},{"import": 1077,"src": 2386,"name": "FILE_FLAG_POSIX_SEMANTICS"},{"import": 1077,"src": 2387,"name": "HRESULT"},{"import": 1077,"src": 2388,"name": "MAX_PATH","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2389,"name": "SHORT","kind": "const","type": 383,"value": 1082},{"import": 1077,"src": 2390,"name": "LPCVOID"},{"import": 1077,"src": 2391,"name": "TLS_OUT_OF_INDEXES","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2392,"name": "PAGE_READONLY"},{"import": 1077,"src": 2393,"name": "SUBLANG","kind": "const","type": 383,"value": 1083},{"import": 1077,"src": 2394,"name": "FILE_RESERVE_OPFILTER"},{"import": 1077,"src": 2395,"name": "FORMAT_MESSAGE_FROM_SYSTEM","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2396,"name": "INFINITE"},{"import": 1077,"src": 2397,"name": "E_POINTER"},{"import": 1077,"src": 2398,"name": "FILE_SYNCHRONOUS_IO_ALERT"},{"import": 1077,"src": 2399,"name": "FileNameInfo","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2400,"name": "FILE_NOTIFY_CHANGE_CREATION"},{"import": 1077,"src": 2401,"name": "E_NOINTERFACE"},{"import": 1077,"src": 2402,"name": "FILETIME"},{"import": 1077,"src": 2403,"name": "OBJ_EXCLUSIVE"},{"import": 1077,"src": 2404,"name": "FileAlignmentInfo"},{"import": 1077,"src": 2405,"name": "STARTF_FORCEONFEEDBACK"},{"import": 1077,"src": 2406,"name": "INVALID_HANDLE_VALUE","kind": "const","type": 405,"value": null},{"import": 1077,"src": 2407,"name": "FILE_MODE_INFORMATION"},{"import": 1077,"src": 2408,"name": "FileRemoteProtocolInfo"},{"import": 1077,"src": 2409,"name": "EXCEPTION_RECORD","kind": "const","type": 383,"value": 1084},{"import": 1077,"src": 2410,"name": "KF_FLAG_ALIAS_ONLY"},{"import": 1077,"src": 2411,"name": "FileAttributeTagInfo"},{"import": 1077,"src": 2412,"name": "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"},{"import": 1077,"src": 2413,"name": "UNICODE","kind": "const","type": 382,"value": null},{"import": 1077,"src": 2414,"name": "FORMAT_MESSAGE_IGNORE_INSERTS","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2415,"name": "UNICODE_STRING","kind": "const","type": 383,"value": 1085},{"import": 1077,"src": 2416,"name": "LPTHREAD_START_ROUTINE"},{"import": 1077,"src": 2417,"name": "E_OUTOFMEMORY"},{"import": 1077,"src": 2418,"name": "LPCH"},{"import": 1077,"src": 2419,"name": "KF_FLAG_NO_APPCONTAINER_REDIRECTION"},{"import": 1077,"src": 2420,"name": "COORD","kind": "const","type": 383,"value": 1086},{"import": 1077,"src": 2421,"name": "STARTF_TITLEISLINKNAME"},{"import": 1077,"src": 2422,"name": "LPSECURITY_ATTRIBUTES","kind": "const","type": 383,"value": 903},{"import": 1077,"src": 2423,"name": "FILE_ATTRIBUTE_REPARSE_POINT"},{"import": 1077,"src": 2424,"name": "FORMAT_MESSAGE_MAX_WIDTH_MASK"},{"import": 1077,"src": 2425,"name": "FILE_NO_INTERMEDIATE_BUFFERING"},{"import": 1077,"src": 2426,"name": "TRUE"},{"import": 1077,"src": 2427,"name": "LPOVERLAPPED"},{"import": 1077,"src": 2428,"name": "EXCEPTION_CONTINUE_SEARCH","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2429,"name": "PAGE_GUARD"},{"import": 1077,"src": 2430,"name": "FILE_OPEN_IF"},{"import": 1077,"src": 2431,"name": "FileIdExtdDirectoryRestartInfo"},{"import": 1077,"src": 2432,"name": "MEM_DECOMMIT","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2433,"name": "OBJ_INHERIT"},{"import": 1077,"src": 2434,"name": "FILE_BOTH_DIRECTORY_INFORMATION"},{"import": 1077,"src": 2435,"name": "ERROR","kind": "const","type": 383,"value": 1087},{"import": 1077,"src": 2436,"name": "RTL_CRITICAL_SECTION_DEBUG"},{"import": 1077,"src": 2437,"name": "HLOCAL"},{"import": 1077,"src": 2438,"name": "WORD","kind": "const","type": 383,"value": 427},{"import": 1077,"src": 2439,"name": "FILE_ATTRIBUTE_NORMAL","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2440,"name": "FILE_SHARE_WRITE"},{"import": 1077,"src": 2441,"name": "GENERIC_READ","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2442,"name": "KF_FLAG_DEFAULT_PATH"},{"import": 1077,"src": 2443,"name": "FILE_ATTRIBUTE_READONLY"},{"import": 1077,"src": 2444,"name": "STARTF_USESTDHANDLES"},{"import": 1077,"src": 2445,"name": "FILE_FLAG_BACKUP_SEMANTICS"},{"import": 1077,"src": 2446,"name": "LIST_ENTRY","kind": "const","type": 383,"value": 1088},{"import": 1077,"src": 2447,"name": "FOREGROUND_RED","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2448,"name": "FILE_POSITION_INFORMATION"},{"import": 1077,"src": 2449,"name": "PAGE_WRITECOMBINE"},{"import": 1077,"src": 2450,"name": "TRUNCATE_EXISTING"},{"import": 1077,"src": 2451,"name": "FILE_DELETE_ON_CLOSE"},{"import": 1077,"src": 2452,"name": "MEM_RELEASE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2453,"name": "FILE_NOTIFY_CHANGE_DIR_NAME"},{"import": 1077,"src": 2454,"name": "MEM_RESET_UNDO"},{"import": 1077,"src": 2455,"name": "PAGE_NOACCESS","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2456,"name": "PWSTR"},{"import": 1077,"src": 2457,"name": "PAGE_NOCACHE"},{"import": 1077,"src": 2458,"name": "STATUS"},{"import": 1077,"src": 2459,"name": "WRITE_OWNER"},{"import": 1077,"src": 2460,"name": "OBJECT_ATTRIBUTES"},{"import": 1077,"src": 2461,"name": "LPVOID","kind": "const","type": 383,"value": 405},{"import": 1077,"src": 2462,"name": "FORMAT_MESSAGE_ARGUMENT_ARRAY"},{"import": 1077,"src": 2463,"name": "FILE_OPEN_FOR_FREE_SPACE_QUERY"},{"import": 1077,"src": 2464,"name": "INT"},{"import": 1077,"src": 2465,"name": "STARTF_UNTRUSTEDSOURCE"},{"import": 1077,"src": 2466,"name": "READ_CONTROL"},{"import": 1077,"src": 2467,"name": "FILE_STANDARD_INFORMATION"},{"import": 1077,"src": 2468,"name": "FileBasicInfo"},{"import": 1077,"src": 2469,"name": "FILE_NOTIFY_CHANGE_LAST_ACCESS"},{"import": 1077,"src": 2470,"name": "MEM_COALESCE_PLACEHOLDERS"},{"import": 1077,"src": 2471,"name": "FILE_ATTRIBUTE_NO_SCRUB_DATA"},{"import": 1077,"src": 2472,"name": "OBJ_PERMANENT"},{"import": 1077,"src": 2473,"name": "HCRYPTPROV"},{"import": 1077,"src": 2474,"name": "IMAGE_TLS_DIRECTORY64"},{"import": 1077,"src": 2475,"name": "FILE_NOTIFY_CHANGE_FILE_NAME"},{"import": 1077,"src": 2476,"name": "OBJ_VALID_ATTRIBUTES"},{"import": 1077,"src": 2477,"name": "FILE_NOTIFY_CHANGE_SIZE"},{"import": 1077,"src": 2478,"name": "FARPROC"},{"import": 1077,"src": 2479,"name": "OPEN_EXISTING","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2480,"name": "EXCEPTION_ILLEGAL_INSTRUCTION","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2481,"name": "S_OK"},{"import": 1077,"src": 2482,"name": "FILE_ACTION_REMOVED"},{"import": 1077,"src": 2483,"name": "FileStreamInfo"},{"import": 1077,"src": 2484,"name": "FORMAT_MESSAGE_FROM_STRING"},{"import": 1077,"src": 2485,"name": "PAGE_WRITECOPY"},{"import": 1077,"src": 2486,"name": "FILE_OVERWRITE_IF"},{"import": 1077,"src": 2487,"name": "MOVEFILE_FAIL_IF_NOT_TRACKABLE"},{"import": 1077,"src": 2488,"name": "HINSTANCE"},{"import": 1077,"src": 2489,"name": "CURDIR","kind": "const","type": 383,"value": 1089},{"import": 1077,"src": 2490,"name": "COINIT"},{"import": 1077,"src": 2491,"name": "HKEY__"},{"import": 1077,"src": 2492,"name": "MOVEFILE_COPY_ALLOWED"},{"import": 1077,"src": 2493,"name": "FILE_ALL_INFORMATION"},{"import": 1077,"src": 2494,"name": "STARTF_USESIZE"},{"import": 1077,"src": 2495,"name": "FILE_EA_INFORMATION"},{"import": 1077,"src": 2496,"name": "E_ABORT"},{"import": 1077,"src": 2497,"name": "RTL_USER_PROCESS_PARAMETERS","kind": "const","type": 383,"value": 1090},{"import": 1077,"src": 2498,"name": "FILE_SYNCHRONOUS_IO_NONALERT"},{"import": 1077,"src": 2499,"name": "LONGLONG"},{"import": 1077,"src": 2500,"name": "STARTF_PREVENTPINNING"},{"import": 1077,"src": 2501,"name": "LANGID","kind": "const","type": 383,"value": 659},{"import": 1077,"src": 2502,"name": "PVOID","kind": "const","type": 383,"value": 405},{"import": 1077,"src": 2503,"name": "FILE_OPEN_FOR_BACKUP_INTENT"},{"import": 1077,"src": 2504,"name": "FileEndOfFileInfo"},{"import": 1077,"src": 2505,"name": "FORMAT_MESSAGE_ALLOCATE_BUFFER"},{"import": 1077,"src": 2506,"name": "LPBYTE"},{"import": 1077,"src": 2507,"name": "FILE_NO_COMPRESSION"},{"import": 1077,"src": 2508,"name": "PAGE_READWRITE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2509,"name": "COINIT_MULTITHREADED"},{"import": 1077,"src": 2510,"name": "PAGE_EXECUTE_WRITECOPY"},{"import": 1077,"src": 2511,"name": "STD_OUTPUT_HANDLE"},{"import": 1077,"src": 2512,"name": "HANDLE_FLAG_INHERIT"},{"import": 1077,"src": 2513,"name": "FILE_ATTRIBUTE_ARCHIVE"},{"import": 1077,"src": 2514,"name": "LPCWSTR"},{"import": 1077,"src": 2515,"name": "FILE_ATTRIBUTE_OFFLINE"},{"import": 1077,"src": 2516,"name": "LPWSTR","kind": "const","type": 383,"value": 627},{"import": 1077,"src": 2517,"name": "MEM_RESERVE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2518,"name": "FILE_RANDOM_ACCESS"},{"import": 1077,"src": 2519,"name": "HANDLE_FLAG_PROTECT_FROM_CLOSE"},{"import": 1077,"src": 2520,"name": "PAGE_TARGETS_NO_UPDATE"},{"import": 1077,"src": 2521,"name": "MEM_COMMIT","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2522,"name": "FILE_BOTH_DIR_INFORMATION"},{"import": 1077,"src": 2523,"name": "E_HANDLE"},{"import": 1077,"src": 2524,"name": "INVALID_FILE_ATTRIBUTES"},{"import": 1077,"src": 2525,"name": "FILE_FLAG_RANDOM_ACCESS"},{"import": 1077,"src": 2526,"name": "FileIdExtdDirectoryInfo"},{"import": 1077,"src": 2527,"name": "MEM_RESET"},{"import": 1077,"src": 2528,"name": "WAIT_OBJECT_0"},{"import": 1077,"src": 2529,"name": "COINIT_APARTMENTTHREADED"},{"import": 1077,"src": 2530,"name": "LPOVERLAPPED_COMPLETION_ROUTINE"},{"import": 1077,"src": 2531,"name": "KF_FLAG_INIT"},{"import": 1077,"src": 2532,"name": "RTL_RUN_ONCE_INIT"},{"import": 1077,"src": 2533,"name": "FileDispositionInfo"},{"import": 1077,"src": 2534,"name": "FILE_NOTIFY_CHANGE_ATTRIBUTES"},{"import": 1077,"src": 2535,"name": "PROV_RSA_FULL"},{"import": 1077,"src": 2536,"name": "FILE_ACTION_RENAMED_OLD_NAME"},{"import": 1077,"src": 2537,"name": "FILE_CURRENT","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2538,"name": "E_FAIL"},{"import": 1077,"src": 2539,"name": "CHAR"},{"import": 1077,"src": 2540,"name": "FILE_OVERWRITE"},{"import": 1077,"src": 2541,"name": "CREATE_ALWAYS"},{"import": 1077,"src": 2542,"name": "OBJ_OPENLINK"},{"import": 1077,"src": 2543,"name": "STARTF_TITLEISAPPID"},{"import": 1077,"src": 2544,"name": "IMAGE_TLS_DIRECTORY"},{"import": 1077,"src": 2545,"name": "FILE_COMPLETE_IF_OPLOCKED"},{"import": 1077,"src": 2546,"name": "DUPLICATE_SAME_ACCESS"},{"import": 1077,"src": 2547,"name": "FILE_BASIC_INFORMATION"},{"import": 1077,"src": 2548,"name": "LARGE_INTEGER","kind": "const","type": 383,"value": 511},{"import": 1077,"src": 2549,"name": "FileRenameInfo"},{"import": 1077,"src": 2550,"name": "FILE_FLAG_DELETE_ON_CLOSE"},{"import": 1077,"src": 2551,"name": "ULONGLONG"},{"import": 1077,"src": 2552,"name": "VOLUME_NAME_GUID"},{"import": 1077,"src": 2553,"name": "GENERIC_ALL"},{"import": 1077,"src": 2554,"name": "HKEY"},{"import": 1077,"src": 2555,"name": "E_INVALIDARG"},{"import": 1077,"src": 2556,"name": "EXCEPTION_STACK_OVERFLOW","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2557,"name": "SYNCHRONIZE"},{"import": 1077,"src": 2558,"name": "FILE_FLAG_OPEN_NO_RECALL"},{"import": 1077,"src": 2559,"name": "BOOLEAN","kind": "const","type": 383,"value": 384},{"import": 1077,"src": 2560,"name": "SYSTEM_INFO"},{"import": 1077,"src": 2561,"name": "IO_STATUS_BLOCK"},{"import": 1077,"src": 2562,"name": "FILE_INFO_BY_HANDLE_CLASS","kind": "const","type": 383,"value": 397},{"import": 1077,"src": 2563,"name": "FILE_FLAG_NO_BUFFERING"},{"import": 1077,"src": 2564,"name": "DWORD","kind": "const","type": 383,"value": 397},{"import": 1077,"src": 2565,"name": "FILE_ALIGNMENT_INFORMATION"},{"import": 1077,"src": 2566,"name": "STARTF_USESHOWWINDOW"},{"import": 1077,"src": 2567,"name": "CONSOLE_SCREEN_BUFFER_INFO","kind": "const","type": 383,"value": 1091},{"import": 1077,"src": 2568,"name": "FOLDERID_LocalAppData"},{"import": 1077,"src": 2569,"name": "LPSTR"},{"import": 1077,"src": 2570,"name": "FILE_OPEN_OFFLINE_FILE"},{"import": 1077,"src": 2571,"name": "FILE_OPEN_BY_FILE_ID"},{"import": 1077,"src": 2572,"name": "RTL_CRITICAL_SECTION"},{"import": 1077,"src": 2573,"name": "FILE_END"},{"import": 1077,"src": 2574,"name": "DELETE"},{"import": 1077,"src": 2575,"name": "FILE_FLAG_SESSION_AWARE"},{"import": 1077,"src": 2576,"name": "MEM_LARGE_PAGES"},{"import": 1077,"src": 2577,"name": "STARTF_USECOUNTCHARS"},{"import": 1077,"src": 2578,"name": "FileAllocationInfo"},{"import": 1077,"src": 2579,"name": "VOLUME_NAME_NONE"},{"import": 1077,"src": 2580,"name": "PAGE_EXECUTE_READ"},{"import": 1077,"src": 2581,"name": "STARTF_USEHOTKEY"},{"import": 1077,"src": 2582,"name": "INIT_ONCE"},{"import": 1077,"src": 2583,"name": "FileFullDirectoryRestartInfo"},{"import": 1077,"src": 2584,"name": "E_NOTIMPL"},{"import": 1077,"src": 2585,"name": "E_ACCESSDENIED"},{"import": 1077,"src": 2586,"name": "PTHREAD_START_ROUTINE"},{"import": 1077,"src": 2587,"name": "LPCSTR"},{"import": 1077,"src": 2588,"name": "FILE_INFORMATION_CLASS"},{"import": 1077,"src": 2589,"name": "REGSAM"},{"import": 1077,"src": 2590,"name": "KF_FLAG_DONT_VERIFY"},{"import": 1077,"src": 2591,"name": "FILE_ATTRIBUTE_COMPRESSED"},{"import": 1077,"src": 2592,"name": "FILE_ACTION_RENAMED_NEW_NAME"},{"import": 1077,"src": 2593,"name": "FILE_NAME_OPENED"},{"import": 1077,"src": 2594,"name": "WAIT_FAILED"},{"import": 1077,"src": 2595,"name": "FileIdBothDirectoryRestartInfo"},{"import": 1077,"src": 2596,"name": "KF_FLAG_NO_ALIAS"},{"import": 1077,"src": 2597,"name": "VOLUME_NAME_DOS"},{"import": 1077,"src": 2598,"name": "STARTF_USEFILLATTRIBUTE"},{"import": 1077,"src": 2599,"name": "ULONG_PTR","kind": "const","type": 383,"value": 398},{"import": 1077,"src": 2600,"name": "FILE_ATTRIBUTE_SYSTEM"},{"import": 1077,"src": 2601,"name": "WAIT_TIMEOUT"},{"import": 1077,"src": 2602,"name": "MOVEFILE_CREATE_HARDLINK"},{"import": 1077,"src": 2603,"name": "HMODULE","kind": "const","type": 383,"value": 901},{"import": 1077,"src": 2604,"name": "PROCESS_INFORMATION"},{"import": 1077,"src": 2605,"name": "STARTF_USEPOSITION"},{"import": 1077,"src": 2606,"name": "IO_APC_ROUTINE"},{"import": 1077,"src": 2607,"name": "INIT_ONCE_STATIC_INIT"},{"import": 1077,"src": 2608,"name": "va_list","kind": "const","type": 383,"value": 1092},{"import": 1077,"src": 2609,"name": "HEAP_GENERATE_EXCEPTIONS"},{"import": 1077,"src": 2610,"name": "FILE_SUPERSEDE"},{"import": 1077,"src": 2611,"name": "FILE_FLAG_OPEN_REPARSE_POINT"},{"import": 1077,"src": 2612,"name": "TCHAR","kind": "const","type": 383,"value": 384},{"import": 1077,"src": 2613,"name": "SECURITY_ATTRIBUTES","kind": "const","type": 383,"value": 1072},{"import": 1077,"src": 2614,"name": "FILE_ATTRIBUTE_TEMPORARY"},{"import": 1077,"src": 2615,"name": "FILE_ATTRIBUTE_SPARSE_FILE"},{"import": 1077,"src": 2616,"name": "MEM_TOP_DOWN"},{"import": 1077,"src": 2617,"name": "PIMAGE_TLS_CALLBACK","kind": "const","type": 383,"value": 1093},{"import": 1077,"src": 2618,"name": "FILE_ACTION_ADDED"},{"import": 1077,"src": 2619,"name": "FILE_SEQUENTIAL_ONLY"},{"import": 1077,"src": 2620,"name": "FileIdBothDirectoryInfo"},{"import": 1077,"src": 2621,"name": "FileStandardInfo"},{"import": 1077,"src": 2622,"name": "GUID"},{"import": 1077,"src": 2623,"name": "FILE_OPEN_FOR_RECOVERY"},{"import": 1077,"src": 2624,"name": "FOREGROUND_INTENSITY","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2625,"name": "LONG"},{"import": 1077,"src": 2626,"name": "FILE_LIST_DIRECTORY"},{"import": 1077,"src": 2627,"name": "FILE_WRITE_THROUGH"},{"import": 1077,"src": 2628,"name": "OBJ_CASE_INSENSITIVE"},{"import": 1077,"src": 2629,"name": "MOVEFILE_REPLACE_EXISTING"},{"import": 1077,"src": 2630,"name": "STARTF_FORCEOFFFEEDBACK"},{"import": 1077,"src": 2631,"name": "FILE_SHARE_READ","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2632,"name": "PPS_POST_PROCESS_INIT_ROUTINE","kind": "const","type": 383,"value": 1068},{"import": 1077,"src": 2633,"name": "STANDARD_RIGHTS_REQUIRED"},{"import": 1077,"src": 2634,"name": "STD_ERROR_HANDLE"},{"import": 1077,"src": 2635,"name": "MOVEFILE_WRITE_THROUGH"},{"import": 1077,"src": 2636,"name": "FOREGROUND_GREEN","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2637,"name": "FILE_ATTRIBUTE_HIDDEN"},{"import": 1077,"src": 2638,"name": "FORMAT_MESSAGE_FROM_HMODULE"},{"import": 1077,"src": 2639,"name": "FILE_SHARE_DELETE"},{"import": 1077,"src": 2640,"name": "FILE_NAME_INFO","kind": "const","type": 383,"value": 1094},{"import": 1077,"src": 2641,"name": "FileStorageInfo"},{"import": 1077,"src": 2642,"name": "ULONG","kind": "const","type": 383,"value": 397},{"import": 1077,"src": 2643,"name": "RTL_RUN_ONCE"},{"import": 1077,"src": 2644,"name": "GENERIC_EXECUTE"},{"import": 1077,"src": 2645,"name": "LPDWORD"},{"import": 1077,"src": 2646,"name": "MEM_WRITE_WATCH"},{"import": 1077,"src": 2647,"name": "LSTATUS"},{"import": 1077,"src": 2648,"name": "BYTE","kind": "const","type": 383,"value": 384},{"import": 1077,"src": 2649,"name": "FILE_ATTRIBUTE_DEVICE"},{"import": 1077,"src": 2650,"name": "STARTUPINFOW"},{"import": 1077,"src": 2651,"name": "HEAP_CREATE_ENABLE_EXECUTE"},{"import": 1077,"src": 2652,"name": "FLOAT"},{"import": 1077,"src": 2653,"name": "FILE_ATTRIBUTE_INTEGRITY_STREAM"},{"import": 1077,"src": 2654,"name": "KNOWNFOLDERID"},{"import": 1077,"src": 2655,"name": "OVERLAPPED","kind": "const","type": 383,"value": 962},{"import": 1077,"src": 2656,"name": "FILE_BEGIN","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2657,"name": "DWORD_PTR"},{"import": 1077,"src": 2658,"name": "ACCESS_MASK","kind": "const","type": 383,"value": 397},{"import": 1077,"src": 2659,"name": "FILE_FLAG_SEQUENTIAL_SCAN"},{"import": 1077,"src": 2660,"name": "CREATE_NEW"},{"import": 1077,"src": 2661,"name": "PATH_MAX_WIDE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2662,"name": "CRITICAL_SECTION"},{"import": 1077,"src": 2663,"name": "OPEN_ALWAYS"},{"import": 1077,"src": 2664,"name": "FILE_ATTRIBUTE_RECALL_ON_OPEN"},{"import": 1077,"src": 2665,"name": "STD_INPUT_HANDLE"},{"import": 1077,"src": 2666,"name": "FILE_NOTIFY_CHANGE_SECURITY"},{"import": 1077,"src": 2667,"name": "IMAGE_TLS_DIRECTORY32"},{"import": 1077,"src": 2668,"name": "SIZE_T","kind": "const","type": 383,"value": 398},{"import": 1077,"src": 2669,"name": "KF_FLAG_DEFAULT"},{"import": 1077,"src": 2670,"name": "FOREGROUND_BLUE","kind": "const","type": 409,"value": null},{"import": 1077,"src": 2671,"name": "FILE_NOTIFY_CHANGE_LAST_WRITE"},{"import": 1077,"src": 2672,"name": "FILE_INTERNAL_INFORMATION"},{"import": 1077,"src": 2673,"name": "SMALL_RECT","kind": "const","type": 383,"value": 1095},{"import": 1077,"src": 2674,"name": "PAGE_EXECUTE"},{"import": 1077,"src": 2675,"name": "WAIT_ABANDONED"},{"import": 1077,"src": 2676,"name": "FILE_ATTRIBUTE_VIRTUAL"},{"import": 1077,"src": 2677,"name": "PEB","kind": "const","type": 383,"value": 878},{"import": 1077,"src": 2678,"name": "FILE_DIRECTORY_FILE"},{"import": 1077,"src": 2679,"name": "PAGE_EXECUTE_READWRITE"},{"import": 1000,"src": 2680,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 1003,"src": 2681,"name": "WaitForSingleObjectError"},{"import": 1003,"src": 2682,"name": "fromSysTime"},{"import": 1003,"src": 2683,"name": "CreateIoCompletionPort"},{"import": 1003,"src": 2684,"name": "RtlGenRandomError"},{"import": 1003,"src": 2685,"name": "FindFirstFile"},{"import": 1003,"src": 210,"name": "WriteFile","kind": "const","type": 286,"value": 363},{"import": 1003,"src": 2686,"name": "HeapDestroy"},{"import": 1003,"src": 2687,"name": "CreateProcessError"},{"import": 1003,"src": 175,"name": "CloseHandle","kind": "const","type": 188,"value": 280},{"import": 1003,"src": 2688,"name": "GetEnvironmentStringsW"},{"import": 1003,"src": 133,"name": "VirtualFree","kind": "const","type": 184,"value": 203},{"import": 1003,"src": 2689,"name": "TerminateProcessError"},{"import": 1003,"src": 2690,"name": "ReadFileError","kind": "const","type": 383,"value": 923},{"import": 1003,"src": 2691,"name": "SetHandleInformation"},{"import": 1003,"src": 2692,"name": "GetFileAttributesError"},{"import": 1003,"src": 176,"name": "SetFilePointerEx_BEGIN","kind": "const","type": 230,"value": 281},{"import": 1003,"src": 2693,"name": "WaitForSingleObject"},{"import": 1003,"src": 2694,"name": "GetFinalPathNameByHandleW"},{"import": 1003,"src": 2695,"name": "MoveFileError"},{"import": 1003,"src": 2696,"name": "CreatePipeError"},{"import": 1003,"src": 2697,"name": "MoveFileEx"},{"import": 1003,"src": 172,"name": "VirtualAlloc","kind": "const","type": 227,"value": 276},{"import": 1003,"src": 2698,"name": "CreateSymbolicLinkW"},{"import": 1003,"src": 2699,"name": "MoveFileExW"},{"import": 1003,"src": 2700,"name": "GetFinalPathNameByHandleError"},{"import": 1003,"src": 2701,"name": "CreateSymbolicLinkError"},{"import": 1003,"src": 2702,"name": "ntdll","kind": "const","type": 383,"value": 1096},{"import": 1003,"src": 203,"name": "ReadFile","kind": "const","type": 275,"value": 338},{"import": 1003,"src": 2703,"name": "FindNextFile"},{"import": 1003,"src": 2704,"name": "fileTimeToNanoSeconds"},{"import": 1003,"src": 2705,"name": "RemoveDirectory"},{"import": 1003,"src": 2706,"name": "CreatePipe"},{"import": 1003,"src": 149,"name": "sliceToPrefixedSuffixedFileW","kind": "const","type": 1097,"value": 646},{"import": 1003,"src": 2707,"name": "DeleteFileError"},{"import": 1003,"src": 2708,"name": "GetQueuedCompletionStatusResult"},{"import": 1003,"src": 146,"name": "GetCurrentDirectory","kind": "const","type": 194,"value": 218},{"import": 1003,"src": 2709,"name": "WriteFileError","kind": "const","type": 383,"value": 926},{"import": 1003,"src": 2710,"name": "ole32"},{"import": 1003,"src": 2711,"name": "RemoveDirectoryW"},{"import": 1003,"src": 2712,"name": "GetFileAttributesW"},{"import": 1003,"src": 2713,"name": "toSysTime"},{"import": 1003,"src": 2714,"name": "InitOnceExecuteOnce"},{"import": 1003,"src": 2715,"name": "shell32"},{"import": 1003,"src": 148,"name": "sliceToPrefixedFileW","kind": "const","type": 195,"value": 220},{"import": 1003,"src": 2716,"name": "FreeLibrary"},{"import": 1003,"src": 2717,"name": "FreeEnvironmentStringsW"},{"import": 1003,"src": 267,"name": "QueryPerformanceFrequency","kind": "const","type": 357,"value": 489},{"import": 1003,"src": 173,"name": "GetModuleFileNameW","kind": "const","type": 228,"value": 277},{"import": 1003,"src": 2718,"name": "CreateDirectory"},{"import": 1003,"src": 2719,"name": "RemoveDirectoryError"},{"import": 1003,"src": 2720,"name": "SetConsoleTextAttributeError","kind": "const","type": 383,"value": 893},{"import": 1003,"src": 2721,"name": "VirtualAllocError","kind": "const","type": 383,"value": 899},{"import": 1003,"src": 2722,"name": "TerminateProcess"},{"import": 1003,"src": 2723,"name": "CreateDirectoryError"},{"import": 1003,"src": 177,"name": "SetFilePointerEx_CURRENT","kind": "const","type": 231,"value": 282},{"import": 1003,"src": 2724,"name": "GetCurrentDirectoryError","kind": "const","type": 383,"value": 885},{"import": 1003,"src": 268,"name": "QueryPerformanceCounter","kind": "const","type": 357,"value": 490},{"import": 1003,"src": 2725,"name": "PostQueuedCompletionStatus"},{"import": 1003,"src": 2726,"name": "PostQueuedCompletionStatusError"},{"import": 1003,"src": 2727,"name": "GetEnvironmentVariableError","kind": "const","type": 383,"value": 920},{"import": 1003,"src": 2728,"name": "self_process_handle"},{"import": 1003,"src": 2729,"name": "RtlGenRandom"},{"import": 1003,"src": 2730,"name": "GetFileAttributes"},{"import": 1003,"src": 2731,"name": "LoadLibraryW"},{"import": 1003,"src": 2732,"name": "FindFirstFileError"},{"import": 1003,"src": 2733,"name": "SetHandleInformationError"},{"import": 1003,"src": 2734,"name": "LoadLibraryError"},{"import": 1003,"src": 126,"name": "peb","kind": "const","type": 179,"value": 196},{"import": 1003,"src": 2735,"name": "GetFileInformationByHandleError"},{"import": 1003,"src": 178,"name": "unexpectedError","kind": "const","type": 234,"value": 285},{"import": 1003,"src": 2736,"name": "FindClose"},{"import": 1003,"src": 2737,"name": "CreateDirectoryW"},{"import": 1003,"src": 2738,"name": "cStrToPrefixedFileW"},{"import": 1003,"src": 2739,"name": "SetFilePointerEx_CURRENT_get"},{"import": 1003,"src": 161,"name": "SetConsoleTextAttribute","kind": "const","type": 210,"value": 250},{"import": 1003,"src": 2740,"name": "CreateFileError","kind": "const","type": 383,"value": 902},{"import": 1003,"src": 2741,"name": "SetFileTimeError"},{"import": 1003,"src": 2742,"name": "FindNextFileError"},{"import": 1003,"src": 2743,"name": "CreateSymbolicLink"},{"import": 1003,"src": 2744,"name": "nanoSecondsToFileTime"},{"import": 1003,"src": 2745,"name": "HeapFree"},{"import": 1003,"src": 2746,"name": "DeleteFile"},{"import": 1003,"src": 2747,"name": "GetQueuedCompletionStatus"},{"import": 1003,"src": 2748,"name": "GetStdHandle"},{"import": 1003,"src": 2749,"name": "unexpectedStatus"},{"import": 1003,"src": 2750,"name": "DeleteFileW"},{"import": 1003,"src": 2751,"name": "CreateIoCompletionPortError"},{"import": 1003,"src": 2752,"name": "SetFilePointerError","kind": "const","type": 383,"value": 904},{"import": 1003,"src": 196,"name": "GetEnvironmentVariableW","kind": "const","type": 266,"value": 324},{"import": 1003,"src": 2753,"name": "SetFileTime"},{"import": 1003,"src": 2754,"name": "GetFileSizeError","kind": "const","type": 383,"value": 891},{"import": 1003,"src": 174,"name": "CreateFileW","kind": "const","type": 229,"value": 278},{"import": 1003,"src": 153,"name": "GetFileSizeEx","kind": "const","type": 200,"value": 226},{"import": 1003,"src": 2755,"name": "GetFileInformationByHandle"},{"import": 1003,"src": 2756,"name": "advapi32"},{"import": 1003,"src": 2757,"name": "GetEnvironmentStringsError"},{"import": 1003,"src": 2758,"name": "GetStdHandleError"},{"import": 1003,"src": 2759,"name": "SetFilePointerEx_END"},{"import": 1003,"src": 2760,"name": "kernel32","kind": "const","type": 383,"value": 1098},{"import": 1003,"src": 2761,"name": "CreateFile"},{"import": 1003,"src": 2762,"name": "CreateProcessW"},{"import": 1003,"src": 2763,"name": "assert","kind": "const","type": 3,"value": 3},{"import": 1003,"src": 204,"name": "MAKELANGID","kind": "const","type": 279,"value": 349},{"import": 1003,"src": 2764,"name": "math","kind": "const","type": 383,"value": 766},{"import": 1003,"src": 2765,"name": "std","kind": "const","type": 383,"value": 454},{"import": 1003,"src": 2766,"name": "maxInt","kind": "const","type": 433,"value": 580},{"import": 1003,"src": 2767,"name": "builtin","kind": "const","type": 383,"value": 453},{"import": 1003,"src": 2768,"name": "GetModuleFileNameError","kind": "const","type": 383,"value": 900},{"import": 1003,"src": 2769,"name": "mem","kind": "const","type": 383,"value": 765},{"import": 769,"src": 2770,"name": "addressLessThan"},{"import": 769,"src": 2771,"name": "address"},{"import": 960,"src": 2772,"name": "startCpuBoundOperation"},{"import": 960,"src": 2773,"name": "finishOneEvent"},{"import": 960,"src": 2774,"name": "instance","kind": "const","type": 1100,"value": null},{"import": 960,"src": 2775,"name": "onNextTick"},{"import": 960,"src": 2776,"name": "initSingleThreaded"},{"import": 960,"src": 2777,"name": "beginOneEvent"},{"import": 960,"src": 2778,"name": "deinit"},{"import": 960,"src": 2779,"name": "linuxModFd"},{"import": 960,"src": 2780,"name": "yield"},{"import": 960,"src": 2781,"name": "waitUntilFdWritable"},{"import": 960,"src": 2782,"name": "linuxRemoveFd"},{"import": 960,"src": 2783,"name": "ResumeNode","kind": "const","type": 383,"value": 734},{"import": 960,"src": 2784,"name": "run"},{"import": 960,"src": 2785,"name": "bsdRemoveKev"},{"import": 960,"src": 2786,"name": "initMultiThreaded"},{"import": 960,"src": 2787,"name": "bsdAddKev"},{"import": 960,"src": 2788,"name": "bsdWaitKev"},{"import": 960,"src": 2789,"name": "cancelOnNextTick"},{"import": 960,"src": 2790,"name": "linuxWaitFd"},{"import": 960,"src": 2791,"name": "waitUntilFdWritableOrReadable"},{"import": 960,"src": 2792,"name": "NextTickNode"},{"import": 960,"src": 2793,"name": "init"},{"import": 960,"src": 2794,"name": "waitUntilFdReadable"},{"import": 960,"src": 2795,"name": "initThreadPool"},{"import": 960,"src": 2796,"name": "linuxAddFd"},{"import": 960,"src": 2797,"name": "posixFsRequest"},{"import": 960,"src": 2798,"name": "initOsData"},{"import": 960,"src": 2799,"name": "global_instance_state"},{"import": 960,"src": 2800,"name": "default_instance","kind": "const","type": 1100,"value": null},{"import": 960,"src": 2801,"name": "InitOsDataError"},{"import": 960,"src": 2802,"name": "deinitOsData"},{"import": 960,"src": 2803,"name": "posixFsRun"},{"import": 960,"src": 2804,"name": "OsData","kind": "const","type": 383,"value": 1101},{"import": 960,"src": 2805,"name": "posixFsCancel"},{"import": 960,"src": 2806,"name": "workerRun"},{"import": 960,"src": 2807,"name": "KEventData"},{"import": 960,"src": 2808,"name": "LinuxOsData"},{"import": 960,"src": 2809,"name": "dispatch"},{"import": 960,"src": 2810,"name": "wakeup_bytes"},{"import": 777,"src": 2811,"name": "Flags","kind": "const","type": 383,"value": 1105},{"import": 1048,"src": 2812,"name": "HashStrategy","kind": "const","type": 383,"value": 1107},{"import": 1048,"src": 241,"name": "hash","kind": "const","type": 1108,"value": 647},{"import": 1048,"src": 2813,"name": "hashArray"},{"import": 1048,"src": 238,"name": "autoHash","kind": "const","type": 964,"value": 596},{"import": 1048,"src": 2814,"name": "hashPointer"},{"import": 1048,"src": 2815,"name": "builtin"},{"import": 1048,"src": 2816,"name": "testHashDeep"},{"import": 1048,"src": 2817,"name": "Wyhash"},{"import": 1048,"src": 2818,"name": "testHash"},{"import": 1048,"src": 2819,"name": "std","kind": "const","type": 383,"value": 454},{"import": 1048,"src": 2820,"name": "testHashDeepRecursive"},{"import": 1048,"src": 2821,"name": "testHashShallow"},{"import": 1048,"src": 2822,"name": "meta","kind": "const","type": 383,"value": 780},{"import": 1048,"src": 2823,"name": "assert"},{"import": 1048,"src": 2824,"name": "testing"},{"import": 1048,"src": 2825,"name": "mem"},{"import": 782,"src": 132,"name": "shrink","kind": "const","type": 9,"value": 202},{"import": 782,"src": 130,"name": "realloc","kind": "const","type": 182,"value": 200},{"import": 782,"src": 131,"name": "alloc","kind": "const","type": 183,"value": 201},{"import": 706,"src": 2826,"name": "Inline","kind": "const","type": 383,"value": 1110},{"import": 1077,"src": 2827,"name": "assert"},{"import": 1077,"src": 2828,"name": "std","kind": "const","type": 383,"value": 454},{"import": 1077,"src": 2829,"name": "maxInt","kind": "const","type": 433,"value": 580},{"import": 1077,"src": 2830,"name": "builtin"},{"import": 1079,"src": 2831,"name": "IGBO"},{"import": 1079,"src": 2832,"name": "CZECH"},{"import": 1079,"src": 2833,"name": "LOWER_SORBIAN"},{"import": 1079,"src": 2834,"name": "CROATIAN"},{"import": 1079,"src": 2835,"name": "DUTCH"},{"import": 1079,"src": 2836,"name": "KYRGYZ"},{"import": 1079,"src": 2837,"name": "GERMAN"},{"import": 1079,"src": 2838,"name": "AZERI"},{"import": 1079,"src": 2839,"name": "BRETON"},{"import": 1079,"src": 2840,"name": "KICHE"},{"import": 1079,"src": 2841,"name": "SANSKRIT"},{"import": 1079,"src": 2842,"name": "HUNGARIAN"},{"import": 1079,"src": 2843,"name": "CORSICAN"},{"import": 1079,"src": 2844,"name": "SPANISH"},{"import": 1079,"src": 2845,"name": "MALAYALAM"},{"import": 1079,"src": 2846,"name": "ASSAMESE"},{"import": 1079,"src": 2847,"name": "ALBANIAN"},{"import": 1079,"src": 2848,"name": "SAKHA"},{"import": 1079,"src": 2849,"name": "FARSI"},{"import": 1079,"src": 2850,"name": "JAPANESE"},{"import": 1079,"src": 2851,"name": "AFRIKAANS"},{"import": 1079,"src": 2852,"name": "TIGRIGNA"},{"import": 1079,"src": 2853,"name": "GEORGIAN"},{"import": 1079,"src": 2854,"name": "PERSIAN"},{"import": 1079,"src": 2855,"name": "TAJIK"},{"import": 1079,"src": 2856,"name": "TIGRINYA"},{"import": 1079,"src": 2857,"name": "HAWAIIAN"},{"import": 1079,"src": 2858,"name": "NEUTRAL","kind": "const","type": 409,"value": null},{"import": 1079,"src": 2859,"name": "CHEROKEE"},{"import": 1079,"src": 2860,"name": "VALENCIAN"},{"import": 1079,"src": 2861,"name": "FRENCH"},{"import": 1079,"src": 2862,"name": "TATAR"},{"import": 1079,"src": 2863,"name": "TSWANA"},{"import": 1079,"src": 2864,"name": "BASHKIR"},{"import": 1079,"src": 2865,"name": "KINYARWANDA"},{"import": 1079,"src": 2866,"name": "AMHARIC"},{"import": 1079,"src": 2867,"name": "DIVEHI"},{"import": 1079,"src": 2868,"name": "POLISH"},{"import": 1079,"src": 2869,"name": "LATVIAN"},{"import": 1079,"src": 2870,"name": "OCCITAN"},{"import": 1079,"src": 2871,"name": "VIETNAMESE"},{"import": 1079,"src": 2872,"name": "TURKISH"},{"import": 1079,"src": 2873,"name": "BASQUE"},{"import": 1079,"src": 2874,"name": "FAEROESE"},{"import": 1079,"src": 2875,"name": "HAUSA"},{"import": 1079,"src": 2876,"name": "TAMIL"},{"import": 1079,"src": 2877,"name": "FRISIAN"},{"import": 1079,"src": 2878,"name": "SLOVAK"},{"import": 1079,"src": 2879,"name": "SYRIAC"},{"import": 1079,"src": 2880,"name": "ORIYA"},{"import": 1079,"src": 2881,"name": "FILIPINO"},{"import": 1079,"src": 2882,"name": "HINDI"},{"import": 1079,"src": 2883,"name": "MACEDONIAN"},{"import": 1079,"src": 2884,"name": "BOSNIAN_NEUTRAL"},{"import": 1079,"src": 2885,"name": "BULGARIAN"},{"import": 1079,"src": 2886,"name": "YORUBA"},{"import": 1079,"src": 2887,"name": "THAI"},{"import": 1079,"src": 2888,"name": "CATALAN"},{"import": 1079,"src": 2889,"name": "SWAHILI"},{"import": 1079,"src": 2890,"name": "SWEDISH"},{"import": 1079,"src": 2891,"name": "CENTRAL_KURDISH"},{"import": 1079,"src": 2892,"name": "ROMANSH"},{"import": 1079,"src": 2893,"name": "ARMENIAN"},{"import": 1079,"src": 2894,"name": "BANGLA"},{"import": 1079,"src": 2895,"name": "SOTHO"},{"import": 1079,"src": 2896,"name": "RUSSIAN"},{"import": 1079,"src": 2897,"name": "ARABIC"},{"import": 1079,"src": 2898,"name": "URDU"},{"import": 1079,"src": 2899,"name": "MARATHI"},{"import": 1079,"src": 2900,"name": "GALICIAN"},{"import": 1079,"src": 2901,"name": "GREENLANDIC"},{"import": 1079,"src": 2902,"name": "SLOVENIAN"},{"import": 1079,"src": 2903,"name": "UKRAINIAN"},{"import": 1079,"src": 2904,"name": "YAKUT"},{"import": 1079,"src": 2905,"name": "INVARIANT"},{"import": 1079,"src": 2906,"name": "DARI"},{"import": 1079,"src": 2907,"name": "KANNADA"},{"import": 1079,"src": 2908,"name": "BOSNIAN"},{"import": 1079,"src": 2909,"name": "GREEK"},{"import": 1079,"src": 2910,"name": "WELSH"},{"import": 1079,"src": 2911,"name": "INDONESIAN"},{"import": 1079,"src": 2912,"name": "ICELANDIC"},{"import": 1079,"src": 2913,"name": "LITHUANIAN"},{"import": 1079,"src": 2914,"name": "SCOTTISH_GAELIC"},{"import": 1079,"src": 2915,"name": "CHINESE_TRADITIONAL"},{"import": 1079,"src": 2916,"name": "KONKANI"},{"import": 1079,"src": 2917,"name": "MALTESE"},{"import": 1079,"src": 2918,"name": "LUXEMBOURGISH"},{"import": 1079,"src": 2919,"name": "SERBIAN"},{"import": 1079,"src": 2920,"name": "SERBIAN_NEUTRAL"},{"import": 1079,"src": 2921,"name": "MANIPURI"},{"import": 1079,"src": 2922,"name": "ESTONIAN"},{"import": 1079,"src": 2923,"name": "PORTUGUESE"},{"import": 1079,"src": 2924,"name": "PUNJABI"},{"import": 1079,"src": 2925,"name": "QUECHUA"},{"import": 1079,"src": 2926,"name": "KOREAN"},{"import": 1079,"src": 2927,"name": "INUKTITUT"},{"import": 1079,"src": 2928,"name": "LAO"},{"import": 1079,"src": 2929,"name": "SINHALESE"},{"import": 1079,"src": 2930,"name": "GUJARATI"},{"import": 1079,"src": 2931,"name": "MAPUDUNGUN"},{"import": 1079,"src": 2932,"name": "TURKMEN"},{"import": 1079,"src": 2933,"name": "KHMER"},{"import": 1079,"src": 2934,"name": "ROMANIAN"},{"import": 1079,"src": 2935,"name": "NORWEGIAN"},{"import": 1079,"src": 2936,"name": "ODIA"},{"import": 1079,"src": 2937,"name": "AZERBAIJANI"},{"import": 1079,"src": 2938,"name": "SINDHI"},{"import": 1079,"src": 2939,"name": "FINNISH"},{"import": 1079,"src": 2940,"name": "UPPER_SORBIAN"},{"import": 1079,"src": 2941,"name": "DANISH"},{"import": 1079,"src": 2942,"name": "PASHTO"},{"import": 1079,"src": 2943,"name": "UZBEK"},{"import": 1079,"src": 2944,"name": "WOLOF"},{"import": 1079,"src": 2945,"name": "MAORI"},{"import": 1079,"src": 2946,"name": "XHOSA"},{"import": 1079,"src": 2947,"name": "ZULU"},{"import": 1079,"src": 2948,"name": "MOHAWK"},{"import": 1079,"src": 2949,"name": "MONGOLIAN"},{"import": 1079,"src": 2950,"name": "MALAY"},{"import": 1079,"src": 2951,"name": "NEPALI"},{"import": 1079,"src": 2952,"name": "TELUGU"},{"import": 1079,"src": 2953,"name": "KAZAK"},{"import": 1079,"src": 2954,"name": "ALSATIAN"},{"import": 1079,"src": 2955,"name": "BELARUSIAN"},{"import": 1079,"src": 2956,"name": "YI"},{"import": 1079,"src": 2957,"name": "CHINESE"},{"import": 1079,"src": 2958,"name": "FULAH"},{"import": 1079,"src": 2959,"name": "IRISH"},{"import": 1079,"src": 2960,"name": "TAMAZIGHT"},{"import": 1079,"src": 2961,"name": "ITALIAN"},{"import": 1079,"src": 2962,"name": "SAMI"},{"import": 1079,"src": 2963,"name": "KASHMIRI"},{"import": 1079,"src": 2964,"name": "UIGHUR"},{"import": 1079,"src": 2965,"name": "PULAR"},{"import": 1079,"src": 2966,"name": "TIBETAN"},{"import": 1079,"src": 2967,"name": "BENGALI"},{"import": 1079,"src": 2968,"name": "CHINESE_SIMPLIFIED"},{"import": 1079,"src": 2969,"name": "ENGLISH"},{"import": 1079,"src": 2970,"name": "HEBREW"},{"import": 1083,"src": 2971,"name": "CROATIAN_BOSNIA_HERZEGOVINA_LATIN"},{"import": 1083,"src": 2972,"name": "SERBIAN_CROATIA"},{"import": 1083,"src": 2973,"name": "SPANISH_GUATEMALA"},{"import": 1083,"src": 2974,"name": "ARABIC_JORDAN"},{"import": 1083,"src": 2975,"name": "GERMAN_LUXEMBOURG"},{"import": 1083,"src": 2976,"name": "SERBIAN_MONTENEGRO_CYRILLIC"},{"import": 1083,"src": 2977,"name": "HAWAIIAN_US"},{"import": 1083,"src": 2978,"name": "CHINESE_SINGAPORE"},{"import": 1083,"src": 2979,"name": "ARABIC_SYRIA"},{"import": 1083,"src": 2980,"name": "ENGLISH_NZ"},{"import": 1083,"src": 2981,"name": "KONKANI_INDIA"},{"import": 1083,"src": 2982,"name": "HINDI_INDIA"},{"import": 1083,"src": 2983,"name": "SPANISH"},{"import": 1083,"src": 2984,"name": "ENGLISH_INDIA"},{"import": 1083,"src": 2985,"name": "MONGOLIAN_PRC"},{"import": 1083,"src": 2986,"name": "SERBIAN_MONTENEGRO_LATIN"},{"import": 1083,"src": 2987,"name": "SPANISH_COSTA_RICA"},{"import": 1083,"src": 2988,"name": "ENGLISH_ZIMBABWE"},{"import": 1083,"src": 2989,"name": "GERMAN_LIECHTENSTEIN"},{"import": 1083,"src": 2990,"name": "POLISH_POLAND"},{"import": 1083,"src": 2991,"name": "ARABIC_LIBYA"},{"import": 1083,"src": 2992,"name": "SAMI_LULE_SWEDEN"},{"import": 1083,"src": 2993,"name": "MAPUDUNGUN_CHILE"},{"import": 1083,"src": 2994,"name": "BELARUSIAN_BELARUS"},{"import": 1083,"src": 2995,"name": "QUECHUA_PERU"},{"import": 1083,"src": 2996,"name": "INUKTITUT_CANADA_LATIN"},{"import": 1083,"src": 2997,"name": "KANNADA_INDIA"},{"import": 1083,"src": 2998,"name": "MALTESE_MALTA"},{"import": 1083,"src": 2999,"name": "PERSIAN_IRAN"},{"import": 1083,"src": 3000,"name": "XHOSA_SOUTH_AFRICA"},{"import": 1083,"src": 3001,"name": "FRENCH_MONACO"},{"import": 1083,"src": 3002,"name": "SINDHI_INDIA"},{"import": 1083,"src": 3003,"name": "FRENCH"},{"import": 1083,"src": 3004,"name": "CROATIAN_CROATIA"},{"import": 1083,"src": 3005,"name": "SPANISH_EL_SALVADOR"},{"import": 1083,"src": 3006,"name": "SINDHI_PAKISTAN"},{"import": 1083,"src": 3007,"name": "FRENCH_CANADIAN"},{"import": 1083,"src": 3008,"name": "TATAR_RUSSIA"},{"import": 1083,"src": 3009,"name": "SINHALESE_SRI_LANKA"},{"import": 1083,"src": 3010,"name": "SAKHA_RUSSIA"},{"import": 1083,"src": 3011,"name": "BANGLA_BANGLADESH"},{"import": 1083,"src": 3012,"name": "PUNJABI_INDIA"},{"import": 1083,"src": 3013,"name": "SPANISH_US"},{"import": 1083,"src": 3014,"name": "PORTUGUESE_BRAZILIAN"},{"import": 1083,"src": 3015,"name": "ARABIC_IRAQ"},{"import": 1083,"src": 3016,"name": "TELUGU_INDIA"},{"import": 1083,"src": 3017,"name": "DARI_AFGHANISTAN"},{"import": 1083,"src": 3018,"name": "YORUBA_NIGERIA"},{"import": 1083,"src": 3019,"name": "MAORI_NEW_ZEALAND"},{"import": 1083,"src": 3020,"name": "SPANISH_URUGUAY"},{"import": 1083,"src": 3021,"name": "LUXEMBOURGISH_LUXEMBOURG"},{"import": 1083,"src": 3022,"name": "ALBANIAN_ALBANIA"},{"import": 1083,"src": 3023,"name": "ICELANDIC_ICELAND"},{"import": 1083,"src": 3024,"name": "SPANISH_PARAGUAY"},{"import": 1083,"src": 3025,"name": "SAMI_NORTHERN_FINLAND"},{"import": 1083,"src": 3026,"name": "MARATHI_INDIA"},{"import": 1083,"src": 3027,"name": "TIGRIGNA_ERITREA"},{"import": 1083,"src": 3028,"name": "SPANISH_BOLIVIA"},{"import": 1083,"src": 3029,"name": "ENGLISH_SOUTH_AFRICA"},{"import": 1083,"src": 3030,"name": "FRENCH_SWISS"},{"import": 1083,"src": 3031,"name": "IRISH_IRELAND"},{"import": 1083,"src": 3032,"name": "CUSTOM_DEFAULT"},{"import": 1083,"src": 3033,"name": "SERBIAN_LATIN"},{"import": 1083,"src": 3034,"name": "FRENCH_BELGIAN"},{"import": 1083,"src": 3035,"name": "CZECH_CZECH_REPUBLIC"},{"import": 1083,"src": 3036,"name": "MALAY_BRUNEI_DARUSSALAM"},{"import": 1083,"src": 3037,"name": "ARABIC_UAE"},{"import": 1083,"src": 3038,"name": "SYS_DEFAULT"},{"import": 1083,"src": 3039,"name": "ENGLISH_SINGAPORE"},{"import": 1083,"src": 3040,"name": "ODIA_INDIA"},{"import": 1083,"src": 3041,"name": "GREENLANDIC_GREENLAND"},{"import": 1083,"src": 3042,"name": "INUKTITUT_CANADA"},{"import": 1083,"src": 3043,"name": "ZULU_SOUTH_AFRICA"},{"import": 1083,"src": 3044,"name": "TURKMEN_TURKMENISTAN"},{"import": 1083,"src": 3045,"name": "TURKISH_TURKEY"},{"import": 1083,"src": 3046,"name": "SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC"},{"import": 1083,"src": 3047,"name": "ROMANIAN_ROMANIA"},{"import": 1083,"src": 3048,"name": "BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC"},{"import": 1083,"src": 3049,"name": "NEPALI_NEPAL"},{"import": 1083,"src": 3050,"name": "SWEDISH_FINLAND"},{"import": 1083,"src": 3051,"name": "GUJARATI_INDIA"},{"import": 1083,"src": 3052,"name": "QUECHUA_BOLIVIA"},{"import": 1083,"src": 3053,"name": "INDONESIAN_INDONESIA"},{"import": 1083,"src": 3054,"name": "SAMI_SKOLT_FINLAND"},{"import": 1083,"src": 3055,"name": "SAMI_INARI_FINLAND"},{"import": 1083,"src": 3056,"name": "CHEROKEE_CHEROKEE"},{"import": 1083,"src": 3057,"name": "SCOTTISH_GAELIC"},{"import": 1083,"src": 3058,"name": "SOTHO_NORTHERN_SOUTH_AFRICA"},{"import": 1083,"src": 3059,"name": "KASHMIRI_SASIA"},{"import": 1083,"src": 3060,"name": "BENGALI_INDIA"},{"import": 1083,"src": 3061,"name": "ARABIC_BAHRAIN"},{"import": 1083,"src": 3062,"name": "FILIPINO_PHILIPPINES"},{"import": 1083,"src": 3063,"name": "DANISH_DENMARK"},{"import": 1083,"src": 3064,"name": "BANGLA_INDIA"},{"import": 1083,"src": 3065,"name": "BRETON_FRANCE"},{"import": 1083,"src": 3066,"name": "FULAH_SENEGAL"},{"import": 1083,"src": 3067,"name": "KOREAN"},{"import": 1083,"src": 3068,"name": "SERBIAN_CYRILLIC"},{"import": 1083,"src": 3069,"name": "UZBEK_LATIN"},{"import": 1083,"src": 3070,"name": "FRENCH_LUXEMBOURG"},{"import": 1083,"src": 3071,"name": "TAMAZIGHT_ALGERIA_LATIN"},{"import": 1083,"src": 3072,"name": "SLOVAK_SLOVAKIA"},{"import": 1083,"src": 3073,"name": "SERBIAN_SERBIA_CYRILLIC"},{"import": 1083,"src": 3074,"name": "ARABIC_EGYPT"},{"import": 1083,"src": 3075,"name": "SPANISH_CHILE"},{"import": 1083,"src": 3076,"name": "ENGLISH_JAMAICA"},{"import": 1083,"src": 3077,"name": "BENGALI_BANGLADESH"},{"import": 1083,"src": 3078,"name": "TIGRINYA_ETHIOPIA"},{"import": 1083,"src": 3079,"name": "UZBEK_CYRILLIC"},{"import": 1083,"src": 3080,"name": "AFRIKAANS_SOUTH_AFRICA"},{"import": 1083,"src": 3081,"name": "SANSKRIT_INDIA"},{"import": 1083,"src": 3082,"name": "ARABIC_QATAR"},{"import": 1083,"src": 3083,"name": "SAMI_LULE_NORWAY"},{"import": 1083,"src": 3084,"name": "VIETNAMESE_VIETNAM"},{"import": 1083,"src": 3085,"name": "SERBIAN_BOSNIA_HERZEGOVINA_LATIN"},{"import": 1083,"src": 3086,"name": "ENGLISH_TRINIDAD"},{"import": 1083,"src": 3087,"name": "TAJIK_TAJIKISTAN"},{"import": 1083,"src": 3088,"name": "SWAHILI_KENYA"},{"import": 1083,"src": 3089,"name": "BOSNIAN_BOSNIA_HERZEGOVINA_LATIN"},{"import": 1083,"src": 3090,"name": "ARABIC_ALGERIA"},{"import": 1083,"src": 3091,"name": "TSWANA_SOUTH_AFRICA"},{"import": 1083,"src": 3092,"name": "ITALIAN"},{"import": 1083,"src": 3093,"name": "CENTRAL_KURDISH_IRAQ"},{"import": 1083,"src": 3094,"name": "VALENCIAN_VALENCIA"},{"import": 1083,"src": 3095,"name": "SPANISH_ECUADOR"},{"import": 1083,"src": 3096,"name": "THAI_THAILAND"},{"import": 1083,"src": 3097,"name": "SPANISH_HONDURAS"},{"import": 1083,"src": 3098,"name": "CATALAN_CATALAN"},{"import": 1083,"src": 3099,"name": "ARMENIAN_ARMENIA"},{"import": 1083,"src": 3100,"name": "ENGLISH_US"},{"import": 1083,"src": 3101,"name": "CHINESE_SIMPLIFIED"},{"import": 1083,"src": 3102,"name": "AZERBAIJANI_AZERBAIJAN_LATIN"},{"import": 1083,"src": 3103,"name": "TAMIL_SRI_LANKA"},{"import": 1083,"src": 3104,"name": "TIGRINYA_ERITREA"},{"import": 1083,"src": 3105,"name": "SPANISH_MEXICAN"},{"import": 1083,"src": 3106,"name": "CUSTOM_UNSPECIFIED"},{"import": 1083,"src": 3107,"name": "AZERBAIJANI_AZERBAIJAN_CYRILLIC"},{"import": 1083,"src": 3108,"name": "ARABIC_MOROCCO"},{"import": 1083,"src": 3109,"name": "UIGHUR_PRC"},{"import": 1083,"src": 3110,"name": "DUTCH"},{"import": 1083,"src": 3111,"name": "GERMAN"},{"import": 1083,"src": 3112,"name": "WELSH_UNITED_KINGDOM"},{"import": 1083,"src": 3113,"name": "SPANISH_DOMINICAN_REPUBLIC"},{"import": 1083,"src": 3114,"name": "TSWANA_BOTSWANA"},{"import": 1083,"src": 3115,"name": "SPANISH_VENEZUELA"},{"import": 1083,"src": 3116,"name": "SPANISH_PERU"},{"import": 1083,"src": 3117,"name": "WOLOF_SENEGAL"},{"import": 1083,"src": 3118,"name": "MOHAWK_MOHAWK"},{"import": 1083,"src": 3119,"name": "CHINESE_MACAU"},{"import": 1083,"src": 3120,"name": "HUNGARIAN_HUNGARY"},{"import": 1083,"src": 3121,"name": "LAO_LAO"},{"import": 1083,"src": 3122,"name": "AZERI_CYRILLIC"},{"import": 1083,"src": 3123,"name": "UPPER_SORBIAN_GERMANY"},{"import": 1083,"src": 3124,"name": "FAEROESE_FAROE_ISLANDS"},{"import": 1083,"src": 3125,"name": "NEUTRAL"},{"import": 1083,"src": 3126,"name": "KINYARWANDA_RWANDA"},{"import": 1083,"src": 3127,"name": "PULAR_SENEGAL"},{"import": 1083,"src": 3128,"name": "GALICIAN_GALICIAN"},{"import": 1083,"src": 3129,"name": "LATVIAN_LATVIA"},{"import": 1083,"src": 3130,"name": "ARABIC_OMAN"},{"import": 1083,"src": 3131,"name": "UKRAINIAN_UKRAINE"},{"import": 1083,"src": 3132,"name": "KASHMIRI_INDIA"},{"import": 1083,"src": 3133,"name": "IGBO_NIGERIA"},{"import": 1083,"src": 3134,"name": "SPANISH_COLOMBIA"},{"import": 1083,"src": 3135,"name": "KICHE_GUATEMALA"},{"import": 1083,"src": 3136,"name": "DIVEHI_MALDIVES"},{"import": 1083,"src": 3137,"name": "DUTCH_BELGIAN"},{"import": 1083,"src": 3138,"name": "SYRIAC_SYRIA"},{"import": 1083,"src": 3139,"name": "PASHTO_AFGHANISTAN"},{"import": 1083,"src": 3140,"name": "KYRGYZ_KYRGYZSTAN"},{"import": 1083,"src": 3141,"name": "SAMI_NORTHERN_SWEDEN"},{"import": 1083,"src": 3142,"name": "SAMI_SOUTHERN_NORWAY"},{"import": 1083,"src": 3143,"name": "ARABIC_YEMEN"},{"import": 1083,"src": 3144,"name": "BULGARIAN_BULGARIA"},{"import": 1083,"src": 3145,"name": "NORWEGIAN_NYNORSK"},{"import": 1083,"src": 3146,"name": "FRISIAN_NETHERLANDS"},{"import": 1083,"src": 3147,"name": "URDU_PAKISTAN"},{"import": 1083,"src": 3148,"name": "SPANISH_MODERN"},{"import": 1083,"src": 3149,"name": "ENGLISH_AUS"},{"import": 1083,"src": 3150,"name": "ESTONIAN_ESTONIA"},{"import": 1083,"src": 3151,"name": "NEPALI_INDIA"},{"import": 1083,"src": 3152,"name": "SLOVENIAN_SLOVENIA"},{"import": 1083,"src": 3153,"name": "YI_PRC"},{"import": 1083,"src": 3154,"name": "LOWER_SORBIAN_GERMANY"},{"import": 1083,"src": 3155,"name": "GERMAN_SWISS"},{"import": 1083,"src": 3156,"name": "SERBIAN_SERBIA_LATIN"},{"import": 1083,"src": 3157,"name": "AMHARIC_ETHIOPIA"},{"import": 1083,"src": 3158,"name": "SWEDISH"},{"import": 1083,"src": 3159,"name": "KAZAK_KAZAKHSTAN"},{"import": 1083,"src": 3160,"name": "UI_CUSTOM_DEFAULT"},{"import": 1083,"src": 3161,"name": "PUNJABI_PAKISTAN"},{"import": 1083,"src": 3162,"name": "ARABIC_TUNISIA"},{"import": 1083,"src": 3163,"name": "ROMANSH_SWITZERLAND"},{"import": 1083,"src": 3164,"name": "SPANISH_NICARAGUA"},{"import": 1083,"src": 3165,"name": "ENGLISH_CAN"},{"import": 1083,"src": 3166,"name": "ENGLISH_UK"},{"import": 1083,"src": 3167,"name": "SPANISH_PUERTO_RICO"},{"import": 1083,"src": 3168,"name": "ARABIC_LEBANON"},{"import": 1083,"src": 3169,"name": "ENGLISH_EIRE"},{"import": 1083,"src": 3170,"name": "ALSATIAN_FRANCE"},{"import": 1083,"src": 3171,"name": "TIBETAN_PRC"},{"import": 1083,"src": 3172,"name": "CORSICAN_FRANCE"},{"import": 1083,"src": 3173,"name": "OCCITAN_FRANCE"},{"import": 1083,"src": 3174,"name": "CHINESE_HONGKONG"},{"import": 1083,"src": 3175,"name": "LITHUANIAN"},{"import": 1083,"src": 3176,"name": "GEORGIAN_GEORGIA"},{"import": 1083,"src": 3177,"name": "TAMIL_INDIA"},{"import": 1083,"src": 3178,"name": "SAMI_NORTHERN_NORWAY"},{"import": 1083,"src": 3179,"name": "MALAY_MALAYSIA"},{"import": 1083,"src": 3180,"name": "HAUSA_NIGERIA_LATIN"},{"import": 1083,"src": 3181,"name": "NORWEGIAN_BOKMAL"},{"import": 1083,"src": 3182,"name": "FINNISH_FINLAND"},{"import": 1083,"src": 3183,"name": "CHINESE_TRADITIONAL"},{"import": 1083,"src": 3184,"name": "ITALIAN_SWISS"},{"import": 1083,"src": 3185,"name": "ARABIC_SAUDI_ARABIA"},{"import": 1083,"src": 3186,"name": "ENGLISH_MALAYSIA"},{"import": 1083,"src": 3187,"name": "MALAYALAM_INDIA"},{"import": 1083,"src": 3188,"name": "ASSAMESE_INDIA"},{"import": 1083,"src": 3189,"name": "YAKUT_RUSSIA"},{"import": 1083,"src": 3190,"name": "PORTUGUESE"},{"import": 1083,"src": 3191,"name": "ARABIC_KUWAIT"},{"import": 1083,"src": 3192,"name": "SPANISH_PANAMA"},{"import": 1083,"src": 3193,"name": "GREEK_GREECE"},{"import": 1083,"src": 3194,"name": "SINDHI_AFGHANISTAN"},{"import": 1083,"src": 3195,"name": "QUECHUA_ECUADOR"},{"import": 1083,"src": 3196,"name": "ORIYA_INDIA"},{"import": 1083,"src": 3197,"name": "ENGLISH_PHILIPPINES"},{"import": 1083,"src": 3198,"name": "SPANISH_ARGENTINA"},{"import": 1083,"src": 3199,"name": "JAPANESE_JAPAN"},{"import": 1083,"src": 3200,"name": "ENGLISH_CARIBBEAN"},{"import": 1083,"src": 3201,"name": "MACEDONIAN_MACEDONIA"},{"import": 1083,"src": 3202,"name": "MONGOLIAN_CYRILLIC_MONGOLIA"},{"import": 1083,"src": 3203,"name": "KHMER_CAMBODIA"},{"import": 1083,"src": 3204,"name": "HEBREW_ISRAEL"},{"import": 1083,"src": 3205,"name": "URDU_INDIA"},{"import": 1083,"src": 3206,"name": "SAMI_SOUTHERN_SWEDEN"},{"import": 1083,"src": 3207,"name": "ENGLISH_BELIZE"},{"import": 1083,"src": 3208,"name": "BASQUE_BASQUE"},{"import": 1083,"src": 3209,"name": "TAMAZIGHT_MOROCCO_TIFINAGH"},{"import": 1083,"src": 3210,"name": "RUSSIAN_RUSSIA"},{"import": 1083,"src": 3211,"name": "BASHKIR_RUSSIA"},{"import": 1083,"src": 3212,"name": "AZERI_LATIN"},{"import": 1083,"src": 3213,"name": "DEFAULT","kind": "const","type": 409,"value": null},{"import": 1083,"src": 3214,"name": "GERMAN_AUSTRIAN"},{"import": 1087,"src": 3215,"name": "LUIDS_EXHAUSTED"},{"import": 1087,"src": 3216,"name": "INTERRUPT_STILL_CONNECTED"},{"import": 1087,"src": 3217,"name": "PRINTER_NOT_SHAREABLE"},{"import": 1087,"src": 3218,"name": "FATAL_APP_EXIT"},{"import": 1087,"src": 3219,"name": "LOGON_SESSION_COLLISION"},{"import": 1087,"src": 3220,"name": "XMLDSIG_ERROR"},{"import": 1087,"src": 3221,"name": "CONTEXT_EXPIRED"},{"import": 1087,"src": 3222,"name": "SEM_TIMEOUT"},{"import": 1087,"src": 3223,"name": "MOD_NOT_FOUND"},{"import": 1087,"src": 3224,"name": "DATA_CHECKSUM_ERROR"},{"import": 1087,"src": 3225,"name": "INVALID_LDT_SIZE"},{"import": 1087,"src": 3226,"name": "NO_MORE_SEARCH_HANDLES"},{"import": 1087,"src": 3227,"name": "INVALID_LDT_OFFSET"},{"import": 1087,"src": 3228,"name": "SYSTEM_SHUTDOWN"},{"import": 1087,"src": 3229,"name": "EAS_DIDNT_FIT"},{"import": 1087,"src": 3230,"name": "TOO_MANY_THREADS"},{"import": 1087,"src": 3231,"name": "PRINT_MONITOR_ALREADY_INSTALLED"},{"import": 1087,"src": 3232,"name": "USER_PROFILE_LOAD"},{"import": 1087,"src": 3233,"name": "LISTBOX_ID_NOT_FOUND"},{"import": 1087,"src": 3234,"name": "RPC_S_UNKNOWN_IF"},{"import": 1087,"src": 3235,"name": "BAD_MCFG_TABLE"},{"import": 1087,"src": 3236,"name": "VERSION_PARSE_ERROR"},{"import": 1087,"src": 3237,"name": "NOT_TINY_STREAM"},{"import": 1087,"src": 3238,"name": "LOG_HARD_ERROR"},{"import": 1087,"src": 3239,"name": "UNABLE_TO_UNLOAD_MEDIA"},{"import": 1087,"src": 3240,"name": "EXCL_SEM_ALREADY_OWNED"},{"import": 1087,"src": 3241,"name": "RPC_X_BYTE_COUNT_TOO_SMALL"},{"import": 1087,"src": 3242,"name": "NO_VOLUME_LABEL"},{"import": 1087,"src": 3243,"name": "RPC_S_UNKNOWN_AUTHN_SERVICE"},{"import": 1087,"src": 3244,"name": "POPUP_ALREADY_ACTIVE"},{"import": 1087,"src": 3245,"name": "RPC_S_GRP_ELT_NOT_REMOVED"},{"import": 1087,"src": 3246,"name": "PWD_TOO_LONG"},{"import": 1087,"src": 3247,"name": "SEM_USER_LIMIT"},{"import": 1087,"src": 3248,"name": "SYSTEM_POWERSTATE_TRANSITION"},{"import": 1087,"src": 3249,"name": "DISK_QUOTA_EXCEEDED"},{"import": 1087,"src": 3250,"name": "CANTWRITE"},{"import": 1087,"src": 3251,"name": "NO_WILDCARD_CHARACTERS"},{"import": 1087,"src": 3252,"name": "INSTALL_PACKAGE_INVALID"},{"import": 1087,"src": 3253,"name": "DISK_REPAIR_REDIRECTED"},{"import": 1087,"src": 3254,"name": "HOOK_NOT_INSTALLED"},{"import": 1087,"src": 3255,"name": "DUP_NAME"},{"import": 1087,"src": 3256,"name": "OBJECT_NAME_EXISTS"},{"import": 1087,"src": 3257,"name": "INVALID_FORM_NAME"},{"import": 1087,"src": 3258,"name": "LOCK_VIOLATION"},{"import": 1087,"src": 3259,"name": "ACCESS_DISABLED_BY_POLICY"},{"import": 1087,"src": 3260,"name": "SERVICE_START_HANG"},{"import": 1087,"src": 3261,"name": "ALL_USER_TRUST_QUOTA_EXCEEDED"},{"import": 1087,"src": 3262,"name": "ILLEGAL_ELEMENT_ADDRESS"},{"import": 1087,"src": 3263,"name": "INVALID_FLAG_NUMBER"},{"import": 1087,"src": 3264,"name": "SCOPE_NOT_FOUND"},{"import": 1087,"src": 3265,"name": "INVALID_COMPUTERNAME"},{"import": 1087,"src": 3266,"name": "MORE_WRITES"},{"import": 1087,"src": 3267,"name": "INVALID_MESSAGENAME"},{"import": 1087,"src": 3268,"name": "PATCH_REMOVAL_DISALLOWED"},{"import": 1087,"src": 3269,"name": "PRINT_JOB_RESTART_REQUIRED"},{"import": 1087,"src": 3270,"name": "INVALID_ACCOUNT_NAME"},{"import": 1087,"src": 3271,"name": "BAD_DESCRIPTOR_FORMAT"},{"import": 1087,"src": 3272,"name": "DBG_EXCEPTION_HANDLED"},{"import": 1087,"src": 3273,"name": "INVALID_UNWIND_TARGET"},{"import": 1087,"src": 3274,"name": "CALL_NOT_IMPLEMENTED"},{"import": 1087,"src": 3275,"name": "BOOT_ALREADY_ACCEPTED"},{"import": 1087,"src": 3276,"name": "PAGE_FAULT_DEMAND_ZERO"},{"import": 1087,"src": 3277,"name": "SPECIAL_GROUP"},{"import": 1087,"src": 3278,"name": "WINDOW_NOT_COMBOBOX"},{"import": 1087,"src": 3279,"name": "PIPE_LOCAL"},{"import": 1087,"src": 3280,"name": "RPC_S_UNSUPPORTED_NAME_SYNTAX"},{"import": 1087,"src": 3281,"name": "RPC_X_NO_MORE_ENTRIES"},{"import": 1087,"src": 3282,"name": "THREAD_1_INACTIVE"},{"import": 1087,"src": 3283,"name": "SEEK"},{"import": 1087,"src": 3284,"name": "NO_TOKEN"},{"import": 1087,"src": 3285,"name": "WAIT_63"},{"import": 1087,"src": 3286,"name": "OPERATION_ABORTED","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3287,"name": "NOT_ENOUGH_QUOTA","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3288,"name": "DEVICE_FEATURE_NOT_SUPPORTED"},{"import": 1087,"src": 3289,"name": "NOT_SUBSTED"},{"import": 1087,"src": 3290,"name": "UNKNOWN_PORT"},{"import": 1087,"src": 3291,"name": "INVALID_PRINTER_DRIVER_MANIFEST"},{"import": 1087,"src": 3292,"name": "NETLOGON_NOT_STARTED"},{"import": 1087,"src": 3293,"name": "RPC_S_CANNOT_SUPPORT"},{"import": 1087,"src": 3294,"name": "ALREADY_ASSIGNED"},{"import": 1087,"src": 3295,"name": "INVALID_INDEX"},{"import": 1087,"src": 3296,"name": "INVALID_GW_COMMAND"},{"import": 1087,"src": 3297,"name": "CANNOT_LOAD_REGISTRY_FILE"},{"import": 1087,"src": 3298,"name": "DISK_RESET_FAILED"},{"import": 1087,"src": 3299,"name": "RPC_X_ENUM_VALUE_OUT_OF_RANGE"},{"import": 1087,"src": 3300,"name": "PAGEFILE_QUOTA_EXCEEDED"},{"import": 1087,"src": 3301,"name": "UNKNOWN_COMPONENT"},{"import": 1087,"src": 3302,"name": "RPC_S_NO_MORE_BINDINGS"},{"import": 1087,"src": 3303,"name": "DLL_INIT_FAILED"},{"import": 1087,"src": 3304,"name": "UNIDENTIFIED_ERROR"},{"import": 1087,"src": 3305,"name": "RPC_S_CANT_CREATE_ENDPOINT"},{"import": 1087,"src": 3306,"name": "GRACEFUL_DISCONNECT"},{"import": 1087,"src": 3307,"name": "NO_NET_OR_BAD_PATH"},{"import": 1087,"src": 3308,"name": "INCOMPATIBLE_SERVICE_SID_TYPE"},{"import": 1087,"src": 3309,"name": "TOO_MANY_LUIDS_REQUESTED"},{"import": 1087,"src": 3310,"name": "INVALID_CAP"},{"import": 1087,"src": 3311,"name": "SEGMENT_NOTIFICATION"},{"import": 1087,"src": 3312,"name": "EA_FILE_CORRUPT"},{"import": 1087,"src": 3313,"name": "NO_MATCH"},{"import": 1087,"src": 3314,"name": "NO_SUCH_GROUP"},{"import": 1087,"src": 3315,"name": "BAD_TOKEN_TYPE"},{"import": 1087,"src": 3316,"name": "INSTALL_PACKAGE_OPEN_FAILED"},{"import": 1087,"src": 3317,"name": "PRINTQ_FULL"},{"import": 1087,"src": 3318,"name": "TOO_MANY_POSTS"},{"import": 1087,"src": 3319,"name": "INTERRUPT_VECTOR_ALREADY_CONNECTED"},{"import": 1087,"src": 3320,"name": "UNEXP_NET_ERR"},{"import": 1087,"src": 3321,"name": "SERVICE_NOT_ACTIVE"},{"import": 1087,"src": 3322,"name": "INVALID_DATATYPE"},{"import": 1087,"src": 3323,"name": "NO_MORE_FILES"},{"import": 1087,"src": 3324,"name": "INVALID_DOMAIN_ROLE"},{"import": 1087,"src": 3325,"name": "INSTALL_NOTUSED"},{"import": 1087,"src": 3326,"name": "BUS_RESET"},{"import": 1087,"src": 3327,"name": "DISK_FULL"},{"import": 1087,"src": 3328,"name": "SYSTEM_POWERSTATE_COMPLEX_TRANSITION"},{"import": 1087,"src": 3329,"name": "WINDOW_OF_OTHER_THREAD"},{"import": 1087,"src": 3330,"name": "RPC_S_INVALID_VERS_OPTION"},{"import": 1087,"src": 3331,"name": "LOST_WRITEBEHIND_DATA"},{"import": 1087,"src": 3332,"name": "INSTALL_LANGUAGE_UNSUPPORTED"},{"import": 1087,"src": 3333,"name": "MP_PROCESSOR_MISMATCH"},{"import": 1087,"src": 3334,"name": "WAIT_1"},{"import": 1087,"src": 3335,"name": "BAD_ACCESSOR_FLAGS"},{"import": 1087,"src": 3336,"name": "NO_DATA_DETECTED"},{"import": 1087,"src": 3337,"name": "ALREADY_WIN32"},{"import": 1087,"src": 3338,"name": "RPC_S_NOT_CANCELLED"},{"import": 1087,"src": 3339,"name": "PROC_NOT_FOUND"},{"import": 1087,"src": 3340,"name": "ARENA_TRASHED"},{"import": 1087,"src": 3341,"name": "KEY_HAS_CHILDREN"},{"import": 1087,"src": 3342,"name": "POTENTIAL_FILE_FOUND"},{"import": 1087,"src": 3343,"name": "BADDB"},{"import": 1087,"src": 3344,"name": "INVALID_PASSWORDNAME"},{"import": 1087,"src": 3345,"name": "PAGEFILE_QUOTA"},{"import": 1087,"src": 3346,"name": "INVALID_LOCK_RANGE"},{"import": 1087,"src": 3347,"name": "PIPE_NOT_CONNECTED"},{"import": 1087,"src": 3348,"name": "CREATE_FAILED"},{"import": 1087,"src": 3349,"name": "NONPAGED_SYSTEM_RESOURCES"},{"import": 1087,"src": 3350,"name": "MAX_SESSIONS_REACHED"},{"import": 1087,"src": 3351,"name": "RPC_S_NOT_ALL_OBJS_UNEXPORTED"},{"import": 1087,"src": 3352,"name": "DRIVE_LOCKED"},{"import": 1087,"src": 3353,"name": "RPC_S_ADDRESS_ERROR"},{"import": 1087,"src": 3354,"name": "JOIN_TO_JOIN"},{"import": 1087,"src": 3355,"name": "FAIL_I24"},{"import": 1087,"src": 3356,"name": "BAD_FILE_TYPE"},{"import": 1087,"src": 3357,"name": "TOO_MANY_SESS"},{"import": 1087,"src": 3358,"name": "SEEK_ON_DEVICE"},{"import": 1087,"src": 3359,"name": "INSTALL_TRANSFORM_FAILURE"},{"import": 1087,"src": 3360,"name": "RPC_S_DUPLICATE_ENDPOINT"},{"import": 1087,"src": 3361,"name": "BAD_VALIDATION_CLASS"},{"import": 1087,"src": 3362,"name": "ACTIVE_CONNECTIONS"},{"import": 1087,"src": 3363,"name": "EXCEPTION_IN_SERVICE"},{"import": 1087,"src": 3364,"name": "SERVICE_LOGON_FAILED"},{"import": 1087,"src": 3365,"name": "SHORT_NAMES_NOT_ENABLED_ON_VOLUME"},{"import": 1087,"src": 3366,"name": "RPC_S_ALREADY_LISTENING"},{"import": 1087,"src": 3367,"name": "INTERMIXED_KERNEL_EA_OPERATION"},{"import": 1087,"src": 3368,"name": "DC_NOT_FOUND"},{"import": 1087,"src": 3369,"name": "SINGLE_INSTANCE_APP"},{"import": 1087,"src": 3370,"name": "INSTALL_SERVICE_FAILURE"},{"import": 1087,"src": 3371,"name": "INVALID_CURSOR_HANDLE"},{"import": 1087,"src": 3372,"name": "JOURNAL_HOOK_SET"},{"import": 1087,"src": 3373,"name": "HOST_UNREACHABLE"},{"import": 1087,"src": 3374,"name": "USER_EXISTS"},{"import": 1087,"src": 3375,"name": "INVALID_BLOCK"},{"import": 1087,"src": 3376,"name": "DEVICE_NOT_CONNECTED"},{"import": 1087,"src": 3377,"name": "PNP_INVALID_ID"},{"import": 1087,"src": 3378,"name": "BAD_QUERY_SYNTAX"},{"import": 1087,"src": 3379,"name": "REGISTRY_CORRUPT"},{"import": 1087,"src": 3380,"name": "MUTUAL_AUTH_FAILED"},{"import": 1087,"src": 3381,"name": "DDE_FAIL"},{"import": 1087,"src": 3382,"name": "RPC_S_PROTOCOL_ERROR"},{"import": 1087,"src": 3383,"name": "INVALID_FILTER_PROC"},{"import": 1087,"src": 3384,"name": "CORRUPT_LOG_OVERFULL"},{"import": 1087,"src": 3385,"name": "NO_SUCH_PRIVILEGE"},{"import": 1087,"src": 3386,"name": "DELETE_PENDING"},{"import": 1087,"src": 3387,"name": "UNHANDLED_EXCEPTION"},{"import": 1087,"src": 3388,"name": "INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING"},{"import": 1087,"src": 3389,"name": "UNKNOWN_PRINT_MONITOR"},{"import": 1087,"src": 3390,"name": "CORRUPT_LOG_UNAVAILABLE"},{"import": 1087,"src": 3391,"name": "OPLOCK_NOT_GRANTED"},{"import": 1087,"src": 3392,"name": "KERNEL_APC"},{"import": 1087,"src": 3393,"name": "DISK_REPAIR_DISABLED"},{"import": 1087,"src": 3394,"name": "IMAGE_MACHINE_TYPE_MISMATCH"},{"import": 1087,"src": 3395,"name": "BADSTARTPOSITION"},{"import": 1087,"src": 3396,"name": "ACCESS_DENIED","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3397,"name": "NOT_REDUNDANT_STORAGE"},{"import": 1087,"src": 3398,"name": "PROFILING_AT_LIMIT"},{"import": 1087,"src": 3399,"name": "NOACCESS"},{"import": 1087,"src": 3400,"name": "PLUGPLAY_QUERY_VETOED"},{"import": 1087,"src": 3401,"name": "BAD_INHERITANCE_ACL"},{"import": 1087,"src": 3402,"name": "PRINTER_DRIVER_WARNED"},{"import": 1087,"src": 3403,"name": "PATH_NOT_FOUND","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3404,"name": "RPC_S_ZERO_DIVIDE"},{"import": 1087,"src": 3405,"name": "RPC_X_WRONG_PIPE_VERSION"},{"import": 1087,"src": 3406,"name": "DUPLICATE_SERVICE_NAME"},{"import": 1087,"src": 3407,"name": "RPC_X_BAD_STUB_DATA"},{"import": 1087,"src": 3408,"name": "XML_PARSE_ERROR"},{"import": 1087,"src": 3409,"name": "PASSWORD_RESTRICTION"},{"import": 1087,"src": 3410,"name": "VDM_DISALLOWED"},{"import": 1087,"src": 3411,"name": "INVALID_STARTING_CODESEG"},{"import": 1087,"src": 3412,"name": "TIMER_RESOLUTION_NOT_SET"},{"import": 1087,"src": 3413,"name": "CONNECTION_ACTIVE"},{"import": 1087,"src": 3414,"name": "PATCH_PACKAGE_UNSUPPORTED"},{"import": 1087,"src": 3415,"name": "CLASS_DOES_NOT_EXIST"},{"import": 1087,"src": 3416,"name": "RING2SEG_MUST_BE_MOVABLE"},{"import": 1087,"src": 3417,"name": "OPLOCK_SWITCHED_TO_NEW_HANDLE"},{"import": 1087,"src": 3418,"name": "SET_POWER_STATE_FAILED"},{"import": 1087,"src": 3419,"name": "INVALID_HOOK_FILTER"},{"import": 1087,"src": 3420,"name": "UNWIND_CONSOLIDATE"},{"import": 1087,"src": 3421,"name": "NO_MEDIA_IN_DRIVE"},{"import": 1087,"src": 3422,"name": "PROCESS_MODE_NOT_BACKGROUND"},{"import": 1087,"src": 3423,"name": "INVALID_WINDOW_STYLE"},{"import": 1087,"src": 3424,"name": "RPC_S_INVALID_NETWORK_OPTIONS"},{"import": 1087,"src": 3425,"name": "UNKNOWN_PROPERTY"},{"import": 1087,"src": 3426,"name": "FILE_NOT_FOUND","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3427,"name": "REDIR_PAUSED"},{"import": 1087,"src": 3428,"name": "POINT_NOT_FOUND"},{"import": 1087,"src": 3429,"name": "RPC_S_NO_CONTEXT_AVAILABLE"},{"import": 1087,"src": 3430,"name": "NOT_READ_FROM_COPY"},{"import": 1087,"src": 3431,"name": "ACCESS_DISABLED_WEBBLADE"},{"import": 1087,"src": 3432,"name": "RPC_S_UNKNOWN_AUTHN_TYPE"},{"import": 1087,"src": 3433,"name": "OPERATION_IN_PROGRESS"},{"import": 1087,"src": 3434,"name": "CORRUPT_LOG_CORRUPTED"},{"import": 1087,"src": 3435,"name": "INVALID_PRIMARY_GROUP"},{"import": 1087,"src": 3436,"name": "AUTHENTICATION_FIREWALL_FAILED"},{"import": 1087,"src": 3437,"name": "INVALID_QUOTA_LOWER"},{"import": 1087,"src": 3438,"name": "VDM_HARD_ERROR"},{"import": 1087,"src": 3439,"name": "RPC_S_NOT_ALL_OBJS_EXPORTED"},{"import": 1087,"src": 3440,"name": "IMAGE_SUBSYSTEM_NOT_PRESENT"},{"import": 1087,"src": 3441,"name": "INVALID_CATEGORY"},{"import": 1087,"src": 3442,"name": "SERVICE_EXISTS"},{"import": 1087,"src": 3443,"name": "DEVICE_ENUMERATION_ERROR"},{"import": 1087,"src": 3444,"name": "RPC_S_NO_ENDPOINT_FOUND"},{"import": 1087,"src": 3445,"name": "TOO_MANY_CONTEXT_IDS"},{"import": 1087,"src": 3446,"name": "RPC_S_PRF_ELT_NOT_REMOVED"},{"import": 1087,"src": 3447,"name": "BAD_PROFILE"},{"import": 1087,"src": 3448,"name": "INVALID_PORT_ATTRIBUTES"},{"import": 1087,"src": 3449,"name": "LOG_FILE_FULL"},{"import": 1087,"src": 3450,"name": "PNP_RESTART_ENUMERATION"},{"import": 1087,"src": 3451,"name": "FSFILTER_OP_COMPLETED_SUCCESSFULLY"},{"import": 1087,"src": 3452,"name": "LB_WITHOUT_TABSTOPS"},{"import": 1087,"src": 3453,"name": "RPC_S_INVALID_TAG"},{"import": 1087,"src": 3454,"name": "ALIAS_EXISTS"},{"import": 1087,"src": 3455,"name": "RPC_S_NO_PROTSEQS"},{"import": 1087,"src": 3456,"name": "CONTENT_BLOCKED"},{"import": 1087,"src": 3457,"name": "REM_NOT_LIST"},{"import": 1087,"src": 3458,"name": "SHARING_PAUSED"},{"import": 1087,"src": 3459,"name": "CORE_DRIVER_PACKAGE_NOT_FOUND"},{"import": 1087,"src": 3460,"name": "DRIVER_FAILED_SLEEP"},{"import": 1087,"src": 3461,"name": "RELOC_CHAIN_XEEDS_SEGLIM"},{"import": 1087,"src": 3462,"name": "RPC_S_ALREADY_REGISTERED"},{"import": 1087,"src": 3463,"name": "RPC_S_BINDING_HAS_NO_AUTH"},{"import": 1087,"src": 3464,"name": "REQUEST_ABORTED"},{"import": 1087,"src": 3465,"name": "NETWORK_BUSY"},{"import": 1087,"src": 3466,"name": "JOIN_TO_SUBST"},{"import": 1087,"src": 3467,"name": "EXE_MACHINE_TYPE_MISMATCH"},{"import": 1087,"src": 3468,"name": "JOURNAL_NOT_ACTIVE"},{"import": 1087,"src": 3469,"name": "BAD_LOGON_SESSION_STATE"},{"import": 1087,"src": 3470,"name": "IO_INCOMPLETE"},{"import": 1087,"src": 3471,"name": "MULTIPLE_FAULT_VIOLATION"},{"import": 1087,"src": 3472,"name": "INVALID_SHARENAME"},{"import": 1087,"src": 3473,"name": "PIPE_LISTENING"},{"import": 1087,"src": 3474,"name": "NT_CROSS_ENCRYPTION_REQUIRED"},{"import": 1087,"src": 3475,"name": "CANTREAD"},{"import": 1087,"src": 3476,"name": "ELEVATION_REQUIRED"},{"import": 1087,"src": 3477,"name": "SMARTCARD_SUBSYSTEM_FAILURE"},{"import": 1087,"src": 3478,"name": "MACHINE_LOCKED"},{"import": 1087,"src": 3479,"name": "KEY_DELETED"},{"import": 1087,"src": 3480,"name": "BUSY"},{"import": 1087,"src": 3481,"name": "RPC_S_NO_PROTSEQS_REGISTERED"},{"import": 1087,"src": 3482,"name": "INVALID_DOMAINNAME"},{"import": 1087,"src": 3483,"name": "INSTRUCTION_MISALIGNMENT"},{"import": 1087,"src": 3484,"name": "NETWORK_ACCESS_DENIED"},{"import": 1087,"src": 3485,"name": "ALREADY_RUNNING_LKG"},{"import": 1087,"src": 3486,"name": "MEMBER_NOT_IN_ALIAS"},{"import": 1087,"src": 3487,"name": "DBG_CONTINUE"},{"import": 1087,"src": 3488,"name": "REMOTE_PRINT_CONNECTIONS_BLOCKED"},{"import": 1087,"src": 3489,"name": "INSTALL_TRANSFORM_REJECTED"},{"import": 1087,"src": 3490,"name": "RESIDENT_FILE_NOT_SUPPORTED"},{"import": 1087,"src": 3491,"name": "CHILD_MUST_BE_VOLATILE"},{"import": 1087,"src": 3492,"name": "PORT_UNREACHABLE"},{"import": 1087,"src": 3493,"name": "DRIVER_FAILED_PRIOR_UNLOAD"},{"import": 1087,"src": 3494,"name": "BAD_LENGTH"},{"import": 1087,"src": 3495,"name": "SECTOR_NOT_FOUND"},{"import": 1087,"src": 3496,"name": "INVALID_GROUP_ATTRIBUTES"},{"import": 1087,"src": 3497,"name": "DIFFERENT_SERVICE_ACCOUNT"},{"import": 1087,"src": 3498,"name": "NO_PROC_SLOTS"},{"import": 1087,"src": 3499,"name": "DESTROY_OBJECT_OF_OTHER_THREAD"},{"import": 1087,"src": 3500,"name": "UNEXPECTED_MM_CREATE_ERR"},{"import": 1087,"src": 3501,"name": "COMPRESSED_FILE_NOT_SUPPORTED"},{"import": 1087,"src": 3502,"name": "DRIVER_BLOCKED"},{"import": 1087,"src": 3503,"name": "LOGON_NOT_GRANTED"},{"import": 1087,"src": 3504,"name": "RPC_S_CALL_FAILED_DNE"},{"import": 1087,"src": 3505,"name": "LOGIN_WKSTA_RESTRICTION"},{"import": 1087,"src": 3506,"name": "RESTART_APPLICATION"},{"import": 1087,"src": 3507,"name": "DEVICE_DOOR_OPEN"},{"import": 1087,"src": 3508,"name": "RPC_S_SEND_INCOMPLETE"},{"import": 1087,"src": 3509,"name": "INVALID_SCROLLBAR_RANGE"},{"import": 1087,"src": 3510,"name": "ALREADY_THREAD"},{"import": 1087,"src": 3511,"name": "CANCELLED"},{"import": 1087,"src": 3512,"name": "ALREADY_INITIALIZED"},{"import": 1087,"src": 3513,"name": "APPHELP_BLOCK"},{"import": 1087,"src": 3514,"name": "SEM_OWNER_DIED"},{"import": 1087,"src": 3515,"name": "BAD_COMPRESSION_BUFFER"},{"import": 1087,"src": 3516,"name": "SUCCESS_REBOOT_REQUIRED"},{"import": 1087,"src": 3517,"name": "INVALID_LOGON_TYPE"},{"import": 1087,"src": 3518,"name": "FAIL_RESTART"},{"import": 1087,"src": 3519,"name": "INVALID_PRINTER_NAME"},{"import": 1087,"src": 3520,"name": "CHECKOUT_REQUIRED"},{"import": 1087,"src": 3521,"name": "FOUND_OUT_OF_SCOPE"},{"import": 1087,"src": 3522,"name": "VC_DISCONNECTED"},{"import": 1087,"src": 3523,"name": "RPC_S_FP_DIV_ZERO"},{"import": 1087,"src": 3524,"name": "CANT_RESOLVE_FILENAME"},{"import": 1087,"src": 3525,"name": "INVALID_PRINT_MONITOR"},{"import": 1087,"src": 3526,"name": "DISK_OPERATION_FAILED"},{"import": 1087,"src": 3527,"name": "INVALID_PIXEL_FORMAT"},{"import": 1087,"src": 3528,"name": "SHARING_BUFFER_EXCEEDED"},{"import": 1087,"src": 3529,"name": "UNKNOWN_PATCH"},{"import": 1087,"src": 3530,"name": "BAD_CONFIGURATION"},{"import": 1087,"src": 3531,"name": "TAG_NOT_FOUND"},{"import": 1087,"src": 3532,"name": "PRINTER_DRIVER_BLOCKED"},{"import": 1087,"src": 3533,"name": "INVALID_GROUPNAME"},{"import": 1087,"src": 3534,"name": "OUT_OF_STRUCTURES"},{"import": 1087,"src": 3535,"name": "ARITHMETIC_OVERFLOW"},{"import": 1087,"src": 3536,"name": "INSTALL_REMOTE_DISALLOWED"},{"import": 1087,"src": 3537,"name": "IP_ADDRESS_CONFLICT1"},{"import": 1087,"src": 3538,"name": "RPC_X_INVALID_ES_ACTION"},{"import": 1087,"src": 3539,"name": "ALREADY_REGISTERED"},{"import": 1087,"src": 3540,"name": "RECEIVE_PARTIAL_EXPEDITED"},{"import": 1087,"src": 3541,"name": "NO_TRACKING_SERVICE"},{"import": 1087,"src": 3542,"name": "RPC_X_SS_CONTEXT_DAMAGED"},{"import": 1087,"src": 3543,"name": "NO_USER_SESSION_KEY"},{"import": 1087,"src": 3544,"name": "HANDLE_DISK_FULL"},{"import": 1087,"src": 3545,"name": "DBG_CONTROL_C"},{"import": 1087,"src": 3546,"name": "ILL_FORMED_PASSWORD"},{"import": 1087,"src": 3547,"name": "WAS_UNLOCKED"},{"import": 1087,"src": 3548,"name": "INVALID_BLOCK_LENGTH"},{"import": 1087,"src": 3549,"name": "RPC_S_CALL_IN_PROGRESS"},{"import": 1087,"src": 3550,"name": "DISK_REPAIR_UNSUCCESSFUL"},{"import": 1087,"src": 3551,"name": "SUCCESS"},{"import": 1087,"src": 3552,"name": "DEVICE_REINITIALIZATION_NEEDED"},{"import": 1087,"src": 3553,"name": "OPLOCK_BREAK_IN_PROGRESS"},{"import": 1087,"src": 3554,"name": "INVALID_ID_AUTHORITY"},{"import": 1087,"src": 3555,"name": "REQUIRES_INTERACTIVE_WINDOWSTATION"},{"import": 1087,"src": 3556,"name": "MUTANT_LIMIT_EXCEEDED"},{"import": 1087,"src": 3557,"name": "DLL_NOT_FOUND"},{"import": 1087,"src": 3558,"name": "INVALID_MINALLOCSIZE"},{"import": 1087,"src": 3559,"name": "BAD_ARGUMENTS"},{"import": 1087,"src": 3560,"name": "NO_YIELD_PERFORMED"},{"import": 1087,"src": 3561,"name": "INSTALL_REJECTED"},{"import": 1087,"src": 3562,"name": "RPC_S_NO_MORE_MEMBERS"},{"import": 1087,"src": 3563,"name": "INVALID_LEVEL"},{"import": 1087,"src": 3564,"name": "ILLEGAL_DLL_RELOCATION"},{"import": 1087,"src": 3565,"name": "RPC_X_PIPE_EMPTY"},{"import": 1087,"src": 3566,"name": "INVALID_FIELD_IN_PARAMETER_LIST"},{"import": 1087,"src": 3567,"name": "REGISTRY_IO_FAILED"},{"import": 1087,"src": 3568,"name": "INTERNAL_DB_CORRUPTION"},{"import": 1087,"src": 3569,"name": "WRONG_PASSWORD"},{"import": 1087,"src": 3570,"name": "SERVICE_NOTIFICATION"},{"import": 1087,"src": 3571,"name": "ABANDONED_WAIT_63"},{"import": 1087,"src": 3572,"name": "RPC_S_INVALID_BOUND"},{"import": 1087,"src": 3573,"name": "RPC_S_ENTRY_ALREADY_EXISTS"},{"import": 1087,"src": 3574,"name": "PROCESS_ABORTED"},{"import": 1087,"src": 3575,"name": "DOMAIN_EXISTS"},{"import": 1087,"src": 3576,"name": "RPC_S_INVALID_ASYNC_HANDLE"},{"import": 1087,"src": 3577,"name": "HOTKEY_NOT_REGISTERED"},{"import": 1087,"src": 3578,"name": "INVALID_EA_NAME"},{"import": 1087,"src": 3579,"name": "EXTENDED_ERROR"},{"import": 1087,"src": 3580,"name": "CONNECTION_INVALID"},{"import": 1087,"src": 3581,"name": "REG_NAT_CONSUMPTION"},{"import": 1087,"src": 3582,"name": "SYSTEM_TRACE"},{"import": 1087,"src": 3583,"name": "GENERIC_NOT_MAPPED"},{"import": 1087,"src": 3584,"name": "INVALID_ADDRESS"},{"import": 1087,"src": 3585,"name": "LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR"},{"import": 1087,"src": 3586,"name": "NO_UNICODE_TRANSLATION"},{"import": 1087,"src": 3587,"name": "NO_CALLBACK_ACTIVE"},{"import": 1087,"src": 3588,"name": "INVALID_SERVER_STATE"},{"import": 1087,"src": 3589,"name": "ERRORS_ENCOUNTERED"},{"import": 1087,"src": 3590,"name": "FILE_CORRUPT"},{"import": 1087,"src": 3591,"name": "INVALID_ENVIRONMENT"},{"import": 1087,"src": 3592,"name": "DBG_COMMAND_EXCEPTION"},{"import": 1087,"src": 3593,"name": "RPC_X_SS_IN_NULL_CONTEXT"},{"import": 1087,"src": 3594,"name": "INVALID_WORKSTATION"},{"import": 1087,"src": 3595,"name": "SIGNAL_PENDING"},{"import": 1087,"src": 3596,"name": "PIPE_BUSY","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3597,"name": "INVALID_TARGET_HANDLE"},{"import": 1087,"src": 3598,"name": "BUFFER_ALL_ZEROS"},{"import": 1087,"src": 3599,"name": "PRINT_CANCELLED"},{"import": 1087,"src": 3600,"name": "PER_USER_TRUST_QUOTA_EXCEEDED"},{"import": 1087,"src": 3601,"name": "INSTALL_UI_FAILURE"},{"import": 1087,"src": 3602,"name": "CLIENT_SERVER_PARAMETERS_INVALID"},{"import": 1087,"src": 3603,"name": "NET_OPEN_FAILED"},{"import": 1087,"src": 3604,"name": "RPC_S_PROTSEQ_NOT_SUPPORTED"},{"import": 1087,"src": 3605,"name": "DBG_TERMINATE_THREAD"},{"import": 1087,"src": 3606,"name": "TOO_MANY_TCBS"},{"import": 1087,"src": 3607,"name": "BAD_PROVIDER"},{"import": 1087,"src": 3608,"name": "DEVICE_ALREADY_ATTACHED"},{"import": 1087,"src": 3609,"name": "CONTROL_C_EXIT"},{"import": 1087,"src": 3610,"name": "MEDIA_CHANGED"},{"import": 1087,"src": 3611,"name": "NON_MDICHILD_WINDOW"},{"import": 1087,"src": 3612,"name": "INVALID_PRINTER_COMMAND"},{"import": 1087,"src": 3613,"name": "ABIOS_ERROR"},{"import": 1087,"src": 3614,"name": "PATCH_NO_SEQUENCE"},{"import": 1087,"src": 3615,"name": "INVALID_EXCEPTION_HANDLER"},{"import": 1087,"src": 3616,"name": "OPLOCK_HANDLE_CLOSED"},{"import": 1087,"src": 3617,"name": "INVALID_TASK_INDEX"},{"import": 1087,"src": 3618,"name": "INVALID_PATCH_XML"},{"import": 1087,"src": 3619,"name": "OR_INVALID_OID"},{"import": 1087,"src": 3620,"name": "BAD_IMPERSONATION_LEVEL"},{"import": 1087,"src": 3621,"name": "NOT_ENOUGH_SERVER_MEMORY"},{"import": 1087,"src": 3622,"name": "NOT_FOUND"},{"import": 1087,"src": 3623,"name": "BAD_FORMAT"},{"import": 1087,"src": 3624,"name": "ICM_NOT_ENABLED"},{"import": 1087,"src": 3625,"name": "NETWORK_UNREACHABLE"},{"import": 1087,"src": 3626,"name": "CRC"},{"import": 1087,"src": 3627,"name": "SERVICE_CANNOT_ACCEPT_CTRL"},{"import": 1087,"src": 3628,"name": "RPC_S_BINDING_INCOMPLETE"},{"import": 1087,"src": 3629,"name": "HOST_DOWN"},{"import": 1087,"src": 3630,"name": "SCRUB_DATA_DISABLED"},{"import": 1087,"src": 3631,"name": "UNEXPECTED_MM_MAP_ERROR"},{"import": 1087,"src": 3632,"name": "WRONG_DISK"},{"import": 1087,"src": 3633,"name": "INVALID_SEGMENT_NUMBER"},{"import": 1087,"src": 3634,"name": "INVALID_ACCESS"},{"import": 1087,"src": 3635,"name": "DYNLINK_FROM_INVALID_RING"},{"import": 1087,"src": 3636,"name": "SPECIAL_ACCOUNT"},{"import": 1087,"src": 3637,"name": "NO_SYSTEM_RESOURCES"},{"import": 1087,"src": 3638,"name": "BAD_DRIVER_LEVEL"},{"import": 1087,"src": 3639,"name": "NO_TRUST_LSA_SECRET"},{"import": 1087,"src": 3640,"name": "SPECIAL_USER"},{"import": 1087,"src": 3641,"name": "ACCESS_DISABLED_WEBBLADE_TAMPER"},{"import": 1087,"src": 3642,"name": "RESOURCE_DATA_NOT_FOUND"},{"import": 1087,"src": 3643,"name": "TRANSFORM_NOT_SUPPORTED"},{"import": 1087,"src": 3644,"name": "INVALID_COLORINDEX"},{"import": 1087,"src": 3645,"name": "RPC_X_PIPE_DISCIPLINE_ERROR"},{"import": 1087,"src": 3646,"name": "LOGIN_TIME_RESTRICTION"},{"import": 1087,"src": 3647,"name": "NOT_SAFE_MODE_DRIVER"},{"import": 1087,"src": 3648,"name": "SETCOUNT_ON_BAD_LB"},{"import": 1087,"src": 3649,"name": "REGISTRY_QUOTA_LIMIT"},{"import": 1087,"src": 3650,"name": "UNABLE_TO_REMOVE_REPLACED"},{"import": 1087,"src": 3651,"name": "INTERNAL_ERROR"},{"import": 1087,"src": 3652,"name": "RXACT_INVALID_STATE"},{"import": 1087,"src": 3653,"name": "RPC_X_SS_HANDLES_MISMATCH"},{"import": 1087,"src": 3654,"name": "TOO_MANY_SEMAPHORES"},{"import": 1087,"src": 3655,"name": "NOINTERFACE"},{"import": 1087,"src": 3656,"name": "CLASS_ALREADY_EXISTS"},{"import": 1087,"src": 3657,"name": "PRINTER_ALREADY_EXISTS"},{"import": 1087,"src": 3658,"name": "MARSHALL_OVERFLOW"},{"import": 1087,"src": 3659,"name": "RMODE_APP"},{"import": 1087,"src": 3660,"name": "SERVICE_ALREADY_RUNNING"},{"import": 1087,"src": 3661,"name": "CANT_ACCESS_DOMAIN_INFO"},{"import": 1087,"src": 3662,"name": "INVALID_ORDINAL"},{"import": 1087,"src": 3663,"name": "TIMER_NOT_CANCELED"},{"import": 1087,"src": 3664,"name": "SERVICE_DOES_NOT_EXIST"},{"import": 1087,"src": 3665,"name": "RPC_S_INTERFACE_NOT_EXPORTED"},{"import": 1087,"src": 3666,"name": "NEGATIVE_SEEK"},{"import": 1087,"src": 3667,"name": "NO_SPOOL_SPACE"},{"import": 1087,"src": 3668,"name": "PROCESS_MODE_ALREADY_BACKGROUND"},{"import": 1087,"src": 3669,"name": "PRINTER_DRIVER_IN_USE"},{"import": 1087,"src": 3670,"name": "PATCH_PACKAGE_REJECTED"},{"import": 1087,"src": 3671,"name": "INSTALL_ALREADY_RUNNING"},{"import": 1087,"src": 3672,"name": "CONVERT_TO_LARGE"},{"import": 1087,"src": 3673,"name": "SUCCESS_REBOOT_INITIATED"},{"import": 1087,"src": 3674,"name": "INVALID_AT_INTERRUPT_TIME"},{"import": 1087,"src": 3675,"name": "NOT_SUPPORTED_ON_SBS"},{"import": 1087,"src": 3676,"name": "UNABLE_TO_LOCK_MEDIA"},{"import": 1087,"src": 3677,"name": "TOO_MANY_MUXWAITERS"},{"import": 1087,"src": 3678,"name": "DBG_RIPEXCEPTION"},{"import": 1087,"src": 3679,"name": "INVALID_IMPORT_OF_NON_DLL"},{"import": 1087,"src": 3680,"name": "SPL_NO_STARTDOC"},{"import": 1087,"src": 3681,"name": "RECEIVE_PARTIAL"},{"import": 1087,"src": 3682,"name": "MEMBERS_PRIMARY_GROUP"},{"import": 1087,"src": 3683,"name": "MEMBER_NOT_IN_GROUP"},{"import": 1087,"src": 3684,"name": "BAD_DLL_ENTRYPOINT"},{"import": 1087,"src": 3685,"name": "CONNECTED_OTHER_PASSWORD_DEFAULT"},{"import": 1087,"src": 3686,"name": "SERVICE_SPECIFIC_ERROR"},{"import": 1087,"src": 3687,"name": "INVALID_MESSAGEDEST"},{"import": 1087,"src": 3688,"name": "MEMBER_IN_ALIAS"},{"import": 1087,"src": 3689,"name": "FLOPPY_UNKNOWN_ERROR"},{"import": 1087,"src": 3690,"name": "OR_INVALID_OXID"},{"import": 1087,"src": 3691,"name": "SERVICE_NOT_FOUND"},{"import": 1087,"src": 3692,"name": "BAD_DEV_TYPE"},{"import": 1087,"src": 3693,"name": "PARAMETER_QUOTA_EXCEEDED"},{"import": 1087,"src": 3694,"name": "MCA_OCCURED"},{"import": 1087,"src": 3695,"name": "DEVICE_REQUIRES_CLEANING"},{"import": 1087,"src": 3696,"name": "QUOTA_LIST_INCONSISTENT"},{"import": 1087,"src": 3697,"name": "EA_ACCESS_DENIED"},{"import": 1087,"src": 3698,"name": "INSTALL_SOURCE_ABSENT"},{"import": 1087,"src": 3699,"name": "CORRUPT_SYSTEM_FILE"},{"import": 1087,"src": 3700,"name": "INVALID_LABEL"},{"import": 1087,"src": 3701,"name": "PRINT_PROCESSOR_ALREADY_INSTALLED"},{"import": 1087,"src": 3702,"name": "NO_SIGNAL_SENT"},{"import": 1087,"src": 3703,"name": "BAD_SERVICE_ENTRYPOINT"},{"import": 1087,"src": 3704,"name": "SERVICE_NOT_IN_EXE"},{"import": 1087,"src": 3705,"name": "NOT_CONTAINER"},{"import": 1087,"src": 3706,"name": "DATATYPE_MISMATCH"},{"import": 1087,"src": 3707,"name": "SYSTEM_HIVE_TOO_LARGE"},{"import": 1087,"src": 3708,"name": "INVALID_VARIANT"},{"import": 1087,"src": 3709,"name": "INVALID_SPI_VALUE"},{"import": 1087,"src": 3710,"name": "FAILED_SERVICE_CONTROLLER_CONNECT"},{"import": 1087,"src": 3711,"name": "INVALID_ACCEL_HANDLE"},{"import": 1087,"src": 3712,"name": "PWD_HISTORY_CONFLICT"},{"import": 1087,"src": 3713,"name": "INVALID_HW_PROFILE"},{"import": 1087,"src": 3714,"name": "INCOMPATIBLE_SERVICE_PRIVILEGE"},{"import": 1087,"src": 3715,"name": "NO_MORE_ITEMS"},{"import": 1087,"src": 3716,"name": "GLOBAL_ONLY_HOOK"},{"import": 1087,"src": 3717,"name": "NO_QUOTAS_FOR_ACCOUNT"},{"import": 1087,"src": 3718,"name": "RPC_S_STRING_TOO_LONG"},{"import": 1087,"src": 3719,"name": "ILLEGAL_CHARACTER"},{"import": 1087,"src": 3720,"name": "RPC_X_WRONG_STUB_VERSION"},{"import": 1087,"src": 3721,"name": "ACCOUNT_EXPIRED"},{"import": 1087,"src": 3722,"name": "SPL_NO_ADDJOB"},{"import": 1087,"src": 3723,"name": "CHECKING_FILE_SYSTEM"},{"import": 1087,"src": 3724,"name": "ALREADY_FIBER"},{"import": 1087,"src": 3725,"name": "STACK_BUFFER_OVERRUN"},{"import": 1087,"src": 3726,"name": "NO_MORE_USER_HANDLES"},{"import": 1087,"src": 3727,"name": "HANDLES_CLOSED"},{"import": 1087,"src": 3728,"name": "USER_APC"},{"import": 1087,"src": 3729,"name": "CLIPPING_NOT_SUPPORTED"},{"import": 1087,"src": 3730,"name": "SEM_NOT_FOUND"},{"import": 1087,"src": 3731,"name": "MENU_ITEM_NOT_FOUND"},{"import": 1087,"src": 3732,"name": "TAG_NOT_PRESENT"},{"import": 1087,"src": 3733,"name": "NOLOGON_INTERDOMAIN_TRUST_ACCOUNT"},{"import": 1087,"src": 3734,"name": "SERVICE_DATABASE_LOCKED"},{"import": 1087,"src": 3735,"name": "ALREADY_WAITING"},{"import": 1087,"src": 3736,"name": "ALREADY_EXISTS","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3737,"name": "APP_INIT_FAILURE"},{"import": 1087,"src": 3738,"name": "NO_TRUST_SAM_ACCOUNT"},{"import": 1087,"src": 3739,"name": "DOMAIN_CONTROLLER_NOT_FOUND"},{"import": 1087,"src": 3740,"name": "NO_INHERITANCE"},{"import": 1087,"src": 3741,"name": "BAD_USER_PROFILE"},{"import": 1087,"src": 3742,"name": "NOLOGON_SERVER_TRUST_ACCOUNT"},{"import": 1087,"src": 3743,"name": "TIMER_RESUME_IGNORED"},{"import": 1087,"src": 3744,"name": "DUP_DOMAINNAME"},{"import": 1087,"src": 3745,"name": "NOTIFY_CLEANUP"},{"import": 1087,"src": 3746,"name": "DRIVERS_LEAKING_LOCKED_PAGES"},{"import": 1087,"src": 3747,"name": "INVALID_SERVICE_CONTROL"},{"import": 1087,"src": 3748,"name": "GEN_FAILURE"},{"import": 1087,"src": 3749,"name": "DEVICE_NOT_PARTITIONED"},{"import": 1087,"src": 3750,"name": "NO_LOGON_SERVERS"},{"import": 1087,"src": 3751,"name": "NOT_ALL_ASSIGNED"},{"import": 1087,"src": 3752,"name": "INVALID_WINDOW_HANDLE"},{"import": 1087,"src": 3753,"name": "RETRY"},{"import": 1087,"src": 3754,"name": "EVENTLOG_FILE_CORRUPT"},{"import": 1087,"src": 3755,"name": "CANNOT_MAKE"},{"import": 1087,"src": 3756,"name": "NOT_READY"},{"import": 1087,"src": 3757,"name": "INVALID_THREAD_ID"},{"import": 1087,"src": 3758,"name": "INVALID_EDIT_HEIGHT"},{"import": 1087,"src": 3759,"name": "FIRMWARE_UPDATED"},{"import": 1087,"src": 3760,"name": "INVALID_USER_BUFFER","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3761,"name": "NO_RECOVERY_PROGRAM"},{"import": 1087,"src": 3762,"name": "WORKING_SET_QUOTA"},{"import": 1087,"src": 3763,"name": "THREAD_ALREADY_IN_TASK"},{"import": 1087,"src": 3764,"name": "ALERTED"},{"import": 1087,"src": 3765,"name": "CHILD_WINDOW_MENU"},{"import": 1087,"src": 3766,"name": "NO_PAGEFILE"},{"import": 1087,"src": 3767,"name": "INVALID_NETNAME"},{"import": 1087,"src": 3768,"name": "IS_SUBSTED"},{"import": 1087,"src": 3769,"name": "CONNECTION_REFUSED"},{"import": 1087,"src": 3770,"name": "FLOPPY_BAD_REGISTERS"},{"import": 1087,"src": 3771,"name": "NON_ACCOUNT_SID"},{"import": 1087,"src": 3772,"name": "INFLOOP_IN_RELOC_CHAIN"},{"import": 1087,"src": 3773,"name": "ACCESS_AUDIT_BY_POLICY"},{"import": 1087,"src": 3774,"name": "SYNCHRONIZATION_REQUIRED"},{"import": 1087,"src": 3775,"name": "NO_ACE_CONDITION"},{"import": 1087,"src": 3776,"name": "HOTKEY_ALREADY_REGISTERED"},{"import": 1087,"src": 3777,"name": "WRITE_FAULT"},{"import": 1087,"src": 3778,"name": "DIRECTORY_NOT_SUPPORTED"},{"import": 1087,"src": 3779,"name": "DOMAIN_LIMIT_EXCEEDED"},{"import": 1087,"src": 3780,"name": "CANNOT_GRANT_REQUESTED_OPLOCK"},{"import": 1087,"src": 3781,"name": "WAKE_SYSTEM_DEBUGGER"},{"import": 1087,"src": 3782,"name": "DEVICE_SUPPORT_IN_PROGRESS"},{"import": 1087,"src": 3783,"name": "INVALID_EA_HANDLE"},{"import": 1087,"src": 3784,"name": "EOM_OVERFLOW"},{"import": 1087,"src": 3785,"name": "CANNOT_FIND_WND_CLASS"},{"import": 1087,"src": 3786,"name": "RPC_S_CALL_CANCELLED"},{"import": 1087,"src": 3787,"name": "TRUSTED_RELATIONSHIP_FAILURE"},{"import": 1087,"src": 3788,"name": "LOGON_SESSION_EXISTS"},{"import": 1087,"src": 3789,"name": "RANGE_NOT_FOUND"},{"import": 1087,"src": 3790,"name": "APP_WRONG_OS"},{"import": 1087,"src": 3791,"name": "UNABLE_TO_MOVE_REPLACEMENT"},{"import": 1087,"src": 3792,"name": "TOO_MANY_MODULES"},{"import": 1087,"src": 3793,"name": "INVALID_PROFILE"},{"import": 1087,"src": 3794,"name": "IMAGE_MACHINE_TYPE_MISMATCH_EXE"},{"import": 1087,"src": 3795,"name": "PASSWORD_CHANGE_REQUIRED"},{"import": 1087,"src": 3796,"name": "RPC_S_INVALID_ENDPOINT_FORMAT"},{"import": 1087,"src": 3797,"name": "TRUSTED_DOMAIN_FAILURE"},{"import": 1087,"src": 3798,"name": "LICENSE_QUOTA_EXCEEDED"},{"import": 1087,"src": 3799,"name": "UNRECOGNIZED_MEDIA"},{"import": 1087,"src": 3800,"name": "HANDLE_EOF"},{"import": 1087,"src": 3801,"name": "ALLOTTED_SPACE_EXCEEDED"},{"import": 1087,"src": 3802,"name": "DOMAIN_CTRLR_CONFIG_ERROR"},{"import": 1087,"src": 3803,"name": "RECOVERY_FAILURE"},{"import": 1087,"src": 3804,"name": "INVALID_MEMBER"},{"import": 1087,"src": 3805,"name": "RXACT_STATE_CREATED"},{"import": 1087,"src": 3806,"name": "PRODUCT_UNINSTALLED"},{"import": 1087,"src": 3807,"name": "INVALID_MSGBOX_STYLE"},{"import": 1087,"src": 3808,"name": "MAPPED_ALIGNMENT"},{"import": 1087,"src": 3809,"name": "RPC_S_GROUP_MEMBER_NOT_FOUND"},{"import": 1087,"src": 3810,"name": "MAGAZINE_NOT_PRESENT"},{"import": 1087,"src": 3811,"name": "EVENTLOG_FILE_CHANGED"},{"import": 1087,"src": 3812,"name": "SERVICE_DISABLED"},{"import": 1087,"src": 3813,"name": "MOUNT_POINT_NOT_RESOLVED"},{"import": 1087,"src": 3814,"name": "RPC_S_NOTHING_TO_EXPORT"},{"import": 1087,"src": 3815,"name": "RPC_X_INVALID_PIPE_OBJECT"},{"import": 1087,"src": 3816,"name": "INVALID_PARAMETER","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3817,"name": "PROFILING_NOT_STOPPED"},{"import": 1087,"src": 3818,"name": "EVALUATION_EXPIRATION"},{"import": 1087,"src": 3819,"name": "IO_PENDING","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3820,"name": "PASSWORD_MUST_CHANGE"},{"import": 1087,"src": 3821,"name": "BEYOND_VDL"},{"import": 1087,"src": 3822,"name": "CANNOT_BREAK_OPLOCK"},{"import": 1087,"src": 3823,"name": "OLD_WIN_VERSION"},{"import": 1087,"src": 3824,"name": "PASSWORD_EXPIRED"},{"import": 1087,"src": 3825,"name": "NULL_LM_PASSWORD"},{"import": 1087,"src": 3826,"name": "RPC_S_INCOMPLETE_NAME"},{"import": 1087,"src": 3827,"name": "DELAY_LOAD_FAILED"},{"import": 1087,"src": 3828,"name": "WAKE_SYSTEM"},{"import": 1087,"src": 3829,"name": "NO_NETWORK"},{"import": 1087,"src": 3830,"name": "INCORRECT_SIZE"},{"import": 1087,"src": 3831,"name": "VERIFIER_STOP"},{"import": 1087,"src": 3832,"name": "RING2_STACK_IN_USE"},{"import": 1087,"src": 3833,"name": "MR_MID_NOT_FOUND"},{"import": 1087,"src": 3834,"name": "VOLSNAP_PREPARE_HIBERNATE"},{"import": 1087,"src": 3835,"name": "COULD_NOT_INTERPRET"},{"import": 1087,"src": 3836,"name": "INSTALL_PACKAGE_VERSION"},{"import": 1087,"src": 3837,"name": "UNKNOWN_PRINTER_DRIVER"},{"import": 1087,"src": 3838,"name": "RPC_S_INVALID_ASYNC_CALL"},{"import": 1087,"src": 3839,"name": "PNP_BAD_MPS_TABLE"},{"import": 1087,"src": 3840,"name": "ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY"},{"import": 1087,"src": 3841,"name": "RPC_S_UNKNOWN_AUTHN_LEVEL"},{"import": 1087,"src": 3842,"name": "SYMLINK_CLASS_DISABLED"},{"import": 1087,"src": 3843,"name": "COMPRESSION_DISABLED"},{"import": 1087,"src": 3844,"name": "DLL_MIGHT_BE_INSECURE"},{"import": 1087,"src": 3845,"name": "WAIT_3"},{"import": 1087,"src": 3846,"name": "MEDIA_CHECK"},{"import": 1087,"src": 3847,"name": "RPC_S_INVALID_STRING_BINDING"},{"import": 1087,"src": 3848,"name": "FILE_TOO_LARGE"},{"import": 1087,"src": 3849,"name": "RXACT_COMMIT_FAILURE"},{"import": 1087,"src": 3850,"name": "RESOURCE_NAME_NOT_FOUND"},{"import": 1087,"src": 3851,"name": "INVALID_CMM"},{"import": 1087,"src": 3852,"name": "COMMITMENT_MINIMUM"},{"import": 1087,"src": 3853,"name": "INVALID_COMBOBOX_MESSAGE"},{"import": 1087,"src": 3854,"name": "OPEN_FAILED"},{"import": 1087,"src": 3855,"name": "SCREEN_ALREADY_LOCKED"},{"import": 1087,"src": 3856,"name": "SERVER_SID_MISMATCH"},{"import": 1087,"src": 3857,"name": "BAD_CURRENT_DIRECTORY"},{"import": 1087,"src": 3858,"name": "ONLY_IF_CONNECTED"},{"import": 1087,"src": 3859,"name": "RPC_X_WRONG_ES_VERSION"},{"import": 1087,"src": 3860,"name": "USER_DELETE_TRUST_QUOTA_EXCEEDED"},{"import": 1087,"src": 3861,"name": "NOT_SUPPORTED"},{"import": 1087,"src": 3862,"name": "FS_DRIVER_REQUIRED"},{"import": 1087,"src": 3863,"name": "CANNOT_DETECT_PROCESS_ABORT"},{"import": 1087,"src": 3864,"name": "INVALID_VERIFY_SWITCH"},{"import": 1087,"src": 3865,"name": "WAIT_FOR_OPLOCK"},{"import": 1087,"src": 3866,"name": "FILE_LEVEL_TRIM_NOT_SUPPORTED"},{"import": 1087,"src": 3867,"name": "INVALID_HOOK_HANDLE"},{"import": 1087,"src": 3868,"name": "DRIVER_PROCESS_TERMINATED"},{"import": 1087,"src": 3869,"name": "UNDEFINED_SCOPE"},{"import": 1087,"src": 3870,"name": "CONNECTION_COUNT_LIMIT"},{"import": 1087,"src": 3871,"name": "LOCK_FAILED"},{"import": 1087,"src": 3872,"name": "WINDOW_NOT_DIALOG"},{"import": 1087,"src": 3873,"name": "PRINTER_DRIVER_ALREADY_INSTALLED"},{"import": 1087,"src": 3874,"name": "INVALID_SECURITY_DESCR"},{"import": 1087,"src": 3875,"name": "EPT_S_CANT_CREATE"},{"import": 1087,"src": 3876,"name": "PAGE_FAULT_COPY_ON_WRITE"},{"import": 1087,"src": 3877,"name": "RPC_S_TYPE_ALREADY_REGISTERED"},{"import": 1087,"src": 3878,"name": "FLOPPY_WRONG_CYLINDER"},{"import": 1087,"src": 3879,"name": "DIRECT_ACCESS_HANDLE"},{"import": 1087,"src": 3880,"name": "INVALID_LB_MESSAGE"},{"import": 1087,"src": 3881,"name": "SET_NOT_FOUND"},{"import": 1087,"src": 3882,"name": "IS_SUBST_PATH"},{"import": 1087,"src": 3883,"name": "CSCSHARE_OFFLINE"},{"import": 1087,"src": 3884,"name": "EVENTLOG_CANT_START"},{"import": 1087,"src": 3885,"name": "RPC_S_PROFILE_NOT_ADDED"},{"import": 1087,"src": 3886,"name": "SET_POWER_STATE_VETOED"},{"import": 1087,"src": 3887,"name": "CORRUPT_LOG_DELETED_FULL"},{"import": 1087,"src": 3888,"name": "RPC_S_UNKNOWN_MGR_TYPE"},{"import": 1087,"src": 3889,"name": "FAILED_DRIVER_ENTRY"},{"import": 1087,"src": 3890,"name": "EXE_MARKED_INVALID"},{"import": 1087,"src": 3891,"name": "LOGON_SERVER_CONFLICT"},{"import": 1087,"src": 3892,"name": "VIRUS_DELETED"},{"import": 1087,"src": 3893,"name": "INVALID_MESSAGE"},{"import": 1087,"src": 3894,"name": "CANT_TERMINATE_SELF"},{"import": 1087,"src": 3895,"name": "ENVVAR_NOT_FOUND","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3896,"name": "INVALID_DOMAIN_STATE"},{"import": 1087,"src": 3897,"name": "COMMITMENT_LIMIT"},{"import": 1087,"src": 3898,"name": "BAD_NETPATH"},{"import": 1087,"src": 3899,"name": "BROKEN_PIPE","kind": "const","type": 409,"value": null},{"import": 1087,"src": 3900,"name": "JOURNAL_ENTRY_DELETED"},{"import": 1087,"src": 3901,"name": "DEV_NOT_EXIST"},{"import": 1087,"src": 3902,"name": "BAD_DEVICE"},{"import": 1087,"src": 3903,"name": "UNSUPPORTED_TYPE"},{"import": 1087,"src": 3904,"name": "NOTIFICATION_GUID_ALREADY_DEFINED"},{"import": 1087,"src": 3905,"name": "INVALID_KEYBOARD_HANDLE"},{"import": 1087,"src": 3906,"name": "INVALID_TABLE"},{"import": 1087,"src": 3907,"name": "NOLOGON_WORKSTATION_TRUST_ACCOUNT"},{"import": 1087,"src": 3908,"name": "WX86_ERROR"},{"import": 1087,"src": 3909,"name": "BAD_USERNAME"},{"import": 1087,"src": 3910,"name": "PROFILE_NOT_FOUND"},{"import": 1087,"src": 3911,"name": "INVALID_OWNER"},{"import": 1087,"src": 3912,"name": "EA_TABLE_FULL"},{"import": 1087,"src": 3913,"name": "EXTRANEOUS_INFORMATION"},{"import": 1087,"src": 3914,"name": "LOGON_FAILURE"},{"import": 1087,"src": 3915,"name": "CANT_DISABLE_MANDATORY"},{"import": 1087,"src": 3916,"name": "RPC_S_UNSUPPORTED_TRANS_SYN"},{"import": 1087,"src": 3917,"name": "UNKNOWN_PRINTPROCESSOR"},{"import": 1087,"src": 3918,"name": "SHUTDOWN_IS_SCHEDULED"},{"import": 1087,"src": 3919,"name": "EPT_S_NOT_REGISTERED"},{"import": 1087,"src": 3920,"name": "RPC_S_CALL_FAILED"},{"import": 1087,"src": 3921,"name": "DBG_TERMINATE_PROCESS"},{"import": 1087,"src": 3922,"name": "OPEN_FILES"},{"import": 1087,"src": 3923,"name": "TRANSLATION_COMPLETE"},{"import": 1087,"src": 3924,"name": "INVALID_EXE_SIGNATURE"},{"import": 1087,"src": 3925,"name": "UNDEFINED_CHARACTER"},{"import": 1087,"src": 3926,"name": "MEMORY_HARDWARE"},{"import": 1087,"src": 3927,"name": "VALIDATE_CONTINUE"},{"import": 1087,"src": 3928,"name": "RESOURCE_REQUIREMENTS_CHANGED"},{"import": 1087,"src": 3929,"name": "AUDIT_FAILED"},{"import": 1087,"src": 3930,"name": "ALLOCATE_BUCKET"},{"import": 1087,"src": 3931,"name": "CRASH_DUMP"},{"import": 1087,"src": 3932,"name": "PATCH_TARGET_NOT_FOUND"},{"import": 1087,"src": 3933,"name": "BAD_NET_RESP"},{"import": 1087,"src": 3934,"name": "CONTROL_ID_NOT_FOUND"},{"import": 1087,"src": 3935,"name": "INSUFFICIENT_BUFFER"},{"import": 1087,"src": 3936,"name": "THREAD_NOT_IN_PROCESS"},{"import": 1087,"src": 3937,"name": "PATH_BUSY"},{"import": 1087,"src": 3938,"name": "INVALID_IMAGE_HASH"},{"import": 1087,"src": 3939,"name": "ROWSNOTRELEASED"},{"import": 1087,"src": 3940,"name": "IS_JOINED"},{"import": 1087,"src": 3941,"name": "NO_IMPERSONATION_TOKEN"},{"import": 1087,"src": 3942,"name": "PROFILE_DOES_NOT_MATCH_DEVICE"},{"import": 1087,"src": 3943,"name": "DATABASE_DOES_NOT_EXIST"},{"import": 1087,"src": 3944,"name": "DISK_CORRUPT"},{"import": 1087,"src": 3945,"name": "CARDBUS_NOT_SUPPORTED"},{"import": 1087,"src": 3946,"name": "TOO_MANY_OPEN_FILES"},{"import": 1087,"src": 3947,"name": "STACK_OVERFLOW"},{"import": 1087,"src": 3948,"name": "PROTOCOL_UNREACHABLE"},{"import": 1087,"src": 3949,"name": "RPC_S_SEC_PKG_ERROR"},{"import": 1087,"src": 3950,"name": "BAD_REM_ADAP"},{"import": 1087,"src": 3951,"name": "SERIAL_NO_DEVICE"},{"import": 1087,"src": 3952,"name": "INVALID_PRINTER_STATE"},{"import": 1087,"src": 3953,"name": "NO_SUCH_SITE"},{"import": 1087,"src": 3954,"name": "NO_SITENAME"},{"import": 1087,"src": 3955,"name": "INVALID_FORM_SIZE"},{"import": 1087,"src": 3956,"name": "SAME_DRIVE"},{"import": 1087,"src": 3957,"name": "INVALID_MONITOR_HANDLE"},{"import": 1087,"src": 3958,"name": "INVALID_SUB_AUTHORITY"},{"import": 1087,"src": 3959,"name": "EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY"},{"import": 1087,"src": 3960,"name": "INSTALL_TEMP_UNWRITABLE"},{"import": 1087,"src": 3961,"name": "TOO_MANY_SECRETS"},{"import": 1087,"src": 3962,"name": "DIR_NOT_EMPTY"},{"import": 1087,"src": 3963,"name": "UNWIND"},{"import": 1087,"src": 3964,"name": "END_OF_MEDIA"},{"import": 1087,"src": 3965,"name": "NET_WRITE_FAULT"},{"import": 1087,"src": 3966,"name": "FILEMARK_DETECTED"},{"import": 1087,"src": 3967,"name": "USER_MAPPED_FILE"},{"import": 1087,"src": 3968,"name": "CURRENT_DOMAIN_NOT_ALLOWED"},{"import": 1087,"src": 3969,"name": "CAN_NOT_COMPLETE"},{"import": 1087,"src": 3970,"name": "INVALID_CRUNTIME_PARAMETER"},{"import": 1087,"src": 3971,"name": "IMPLEMENTATION_LIMIT"},{"import": 1087,"src": 3972,"name": "CANT_ENABLE_DENY_ONLY"},{"import": 1087,"src": 3973,"name": "CANTFETCHBACKWARDS"},{"import": 1087,"src": 3974,"name": "RANGE_LIST_CONFLICT"},{"import": 1087,"src": 3975,"name": "GUID_SUBSTITUTION_MADE"},{"import": 1087,"src": 3976,"name": "CONTINUE"},{"import": 1087,"src": 3977,"name": "BAD_NET_NAME"},{"import": 1087,"src": 3978,"name": "NOT_SAFEBOOT_SERVICE"},{"import": 1087,"src": 3979,"name": "RPC_S_NO_BINDINGS"},{"import": 1087,"src": 3980,"name": "PNP_REBOOT_REQUIRED"},{"import": 1087,"src": 3981,"name": "HOOK_NEEDS_HMOD"},{"import": 1087,"src": 3982,"name": "RPC_S_UNSUPPORTED_TYPE"},{"import": 1087,"src": 3983,"name": "TOO_MANY_NAMES"},{"import": 1087,"src": 3984,"name": "FULLSCREEN_MODE"},{"import": 1087,"src": 3985,"name": "SUBST_TO_SUBST"},{"import": 1087,"src": 3986,"name": "BAD_FUNCTION_TABLE"},{"import": 1087,"src": 3987,"name": "SERVICE_REQUEST_TIMEOUT"},{"import": 1087,"src": 3988,"name": "NON_DOMAIN_SID"},{"import": 1087,"src": 3989,"name": "NO_SECURITY_ON_OBJECT"},{"import": 1087,"src": 3990,"name": "FUNCTION_NOT_CALLED"},{"import": 1087,"src": 3991,"name": "META_EXPANSION_TOO_LONG"},{"import": 1087,"src": 3992,"name": "TOO_MANY_LINKS"},{"import": 1087,"src": 3993,"name": "REQUEST_OUT_OF_SEQUENCE"},{"import": 1087,"src": 3994,"name": "ORPHAN_NAME_EXHAUSTED"},{"import": 1087,"src": 3995,"name": "ACPI_ERROR"},{"import": 1087,"src": 3996,"name": "RPC_S_PROCNUM_OUT_OF_RANGE"},{"import": 1087,"src": 3997,"name": "NOT_REGISTRY_FILE"},{"import": 1087,"src": 3998,"name": "RPC_S_GRP_ELT_NOT_ADDED"},{"import": 1087,"src": 3999,"name": "RPC_S_NO_ENTRY_NAME"},{"import": 1087,"src": 4000,"name": "UNABLE_TO_MOVE_REPLACEMENT_2"},{"import": 1087,"src": 4001,"name": "EA_LIST_INCONSISTENT"},{"import": 1087,"src": 4002,"name": "PROFILING_NOT_STARTED"},{"import": 1087,"src": 4003,"name": "UNRECOGNIZED_VOLUME"},{"import": 1087,"src": 4004,"name": "INVALID_OPLOCK_PROTOCOL"},{"import": 1087,"src": 4005,"name": "MAX_THRDS_REACHED"},{"import": 1087,"src": 4006,"name": "PARTITION_FAILURE"},{"import": 1087,"src": 4007,"name": "WAS_LOCKED"},{"import": 1087,"src": 4008,"name": "FAIL_REBOOT_INITIATED"},{"import": 1087,"src": 4009,"name": "NO_NVRAM_RESOURCES"},{"import": 1087,"src": 4010,"name": "FAIL_FAST_EXCEPTION"},{"import": 1087,"src": 4011,"name": "INSTALL_SERVICE_SAFEBOOT"},{"import": 1087,"src": 4012,"name": "RPC_S_UNKNOWN_AUTHZ_SERVICE"},{"import": 1087,"src": 4013,"name": "SUCCESS_RESTART_REQUIRED"},{"import": 1087,"src": 4014,"name": "PRINTER_DELETED"},{"import": 1087,"src": 4015,"name": "FLOPPY_VOLUME"},{"import": 1087,"src": 4016,"name": "MCA_EXCEPTION"},{"import": 1087,"src": 4017,"name": "SHARING_VIOLATION","kind": "const","type": 409,"value": null},{"import": 1087,"src": 4018,"name": "COUNTER_TIMEOUT"},{"import": 1087,"src": 4019,"name": "RECEIVE_EXPEDITED"},{"import": 1087,"src": 4020,"name": "LABEL_TOO_LONG"},{"import": 1087,"src": 4021,"name": "HIBERNATED"},{"import": 1087,"src": 4022,"name": "RPC_S_ENTRY_TYPE_MISMATCH"},{"import": 1087,"src": 4023,"name": "CANNOT_IMPERSONATE"},{"import": 1087,"src": 4024,"name": "TOO_MANY_DESCRIPTORS"},{"import": 1087,"src": 4025,"name": "NETNAME_DELETED"},{"import": 1087,"src": 4026,"name": "UNEXPECTED_MM_EXTEND_ERR"},{"import": 1087,"src": 4027,"name": "INVALID_SHOWWIN_COMMAND"},{"import": 1087,"src": 4028,"name": "INVALID_DATA"},{"import": 1087,"src": 4029,"name": "DBG_EXCEPTION_NOT_HANDLED"},{"import": 1087,"src": 4030,"name": "INVALID_NAME"},{"import": 1087,"src": 4031,"name": "REPARSE"},{"import": 1087,"src": 4032,"name": "VOLSNAP_HIBERNATE_READY"},{"import": 1087,"src": 4033,"name": "DRIVER_DATABASE_ERROR"},{"import": 1087,"src": 4034,"name": "SPOOL_FILE_NOT_FOUND"},{"import": 1087,"src": 4035,"name": "REDIRECTOR_HAS_OPEN_HANDLES"},{"import": 1087,"src": 4036,"name": "CANT_WAIT"},{"import": 1087,"src": 4037,"name": "RPC_S_UUID_LOCAL_ONLY"},{"import": 1087,"src": 4038,"name": "IP_ADDRESS_CONFLICT2"},{"import": 1087,"src": 4039,"name": "INTERNAL_DB_ERROR"},{"import": 1087,"src": 4040,"name": "CHILD_NOT_COMPLETE"},{"import": 1087,"src": 4041,"name": "SECRET_TOO_LONG"},{"import": 1087,"src": 4042,"name": "NOT_LOGON_PROCESS"},{"import": 1087,"src": 4043,"name": "CANTSCROLLBACKWARDS"},{"import": 1087,"src": 4044,"name": "LM_CROSS_ENCRYPTION_REQUIRED"},{"import": 1087,"src": 4045,"name": "PWD_TOO_SHORT"},{"import": 1087,"src": 4046,"name": "RPC_S_FP_UNDERFLOW"},{"import": 1087,"src": 4047,"name": "INVALID_LIST_FORMAT"},{"import": 1087,"src": 4048,"name": "PROFILE_NOT_ASSOCIATED_WITH_DEVICE"},{"import": 1087,"src": 4049,"name": "PORT_MESSAGE_TOO_LONG"},{"import": 1087,"src": 4050,"name": "INVALID_SERVICENAME"},{"import": 1087,"src": 4051,"name": "OFFSET_ALIGNMENT_VIOLATION"},{"import": 1087,"src": 4052,"name": "INVALID_ACL"},{"import": 1087,"src": 4053,"name": "CONNECTED_OTHER_PASSWORD"},{"import": 1087,"src": 4054,"name": "SERVICE_DEPENDENCY_FAIL"},{"import": 1087,"src": 4055,"name": "BUSY_DRIVE"},{"import": 1087,"src": 4056,"name": "REGISTRY_HIVE_RECOVERED"},{"import": 1087,"src": 4057,"name": "SERVER_NOT_DISABLED"},{"import": 1087,"src": 4058,"name": "NO_GUID_TRANSLATION"},{"import": 1087,"src": 4059,"name": "ABANDONED_WAIT_0"},{"import": 1087,"src": 4060,"name": "DIR_NOT_ROOT"},{"import": 1087,"src": 4061,"name": "NONE_MAPPED"},{"import": 1087,"src": 4062,"name": "WAIT_2"},{"import": 1087,"src": 4063,"name": "NOT_JOINED"},{"import": 1087,"src": 4064,"name": "LONGJUMP"},{"import": 1087,"src": 4065,"name": "FT_WRITE_RECOVERY"},{"import": 1087,"src": 4066,"name": "FLOAT_MULTIPLE_TRAPS"},{"import": 1087,"src": 4067,"name": "UNKNOWN_PRODUCT"},{"import": 1087,"src": 4068,"name": "BAD_COMMAND"},{"import": 1087,"src": 4069,"name": "TOO_MANY_SIDS"},{"import": 1087,"src": 4070,"name": "WOW_ASSERTION"},{"import": 1087,"src": 4071,"name": "RPC_S_UNSUPPORTED_AUTHN_LEVEL"},{"import": 1087,"src": 4072,"name": "RPC_X_SS_CANNOT_GET_CALL_HANDLE"},{"import": 1087,"src": 4073,"name": "DISK_CHANGE"},{"import": 1087,"src": 4074,"name": "CANNOT_DETECT_DRIVER_FAILURE"},{"import": 1087,"src": 4075,"name": "RPC_S_COMM_FAILURE"},{"import": 1087,"src": 4076,"name": "RXACT_COMMIT_NECESSARY"},{"import": 1087,"src": 4077,"name": "PRINTER_NOT_FOUND"},{"import": 1087,"src": 4078,"name": "SERVER_DISABLED"},{"import": 1087,"src": 4079,"name": "BACKUP_CONTROLLER"},{"import": 1087,"src": 4080,"name": "NO_ASSOCIATION"},{"import": 1087,"src": 4081,"name": "RPC_S_PRF_ELT_NOT_ADDED"},{"import": 1087,"src": 4082,"name": "EVENT_PENDING"},{"import": 1087,"src": 4083,"name": "INVALID_SEGDPL"},{"import": 1087,"src": 4084,"name": "DRIVER_CANCEL_TIMEOUT"},{"import": 1087,"src": 4085,"name": "PATCH_PACKAGE_INVALID"},{"import": 1087,"src": 4086,"name": "RPC_S_PROXY_ACCESS_DENIED"},{"import": 1087,"src": 4087,"name": "IRQ_BUSY"},{"import": 1087,"src": 4088,"name": "SYMLINK_NOT_SUPPORTED"},{"import": 1087,"src": 4089,"name": "WX86_WARNING"},{"import": 1087,"src": 4090,"name": "REGISTRY_RECOVERED"},{"import": 1087,"src": 4091,"name": "SERVICE_MARKED_FOR_DELETE"},{"import": 1087,"src": 4092,"name": "RESUME_HIBERNATION"},{"import": 1087,"src": 4093,"name": "DISK_RECALIBRATE_FAILED"},{"import": 1087,"src": 4094,"name": "AUTHIP_FAILURE"},{"import": 1087,"src": 4095,"name": "INVALID_DLL"},{"import": 1087,"src": 4096,"name": "IMAGE_NOT_AT_BASE"},{"import": 1087,"src": 4097,"name": "PKINIT_FAILURE"},{"import": 1087,"src": 4098,"name": "TOO_MANY_SEM_REQUESTS"},{"import": 1087,"src": 4099,"name": "RXACT_COMMITTED"},{"import": 1087,"src": 4100,"name": "RPC_S_INVALID_NAME_SYNTAX"},{"import": 1087,"src": 4101,"name": "BAD_UNIT"},{"import": 1087,"src": 4102,"name": "INVALID_LOGON_HOURS"},{"import": 1087,"src": 4103,"name": "RPC_S_OBJECT_NOT_FOUND"},{"import": 1087,"src": 4104,"name": "PORT_NOT_SET"},{"import": 1087,"src": 4105,"name": "EVENT_DONE"},{"import": 1087,"src": 4106,"name": "NOT_DOS_DISK"},{"import": 1087,"src": 4107,"name": "TLW_WITH_WSCHILD"},{"import": 1087,"src": 4108,"name": "INVALID_MENU_HANDLE"},{"import": 1087,"src": 4109,"name": "DLL_MIGHT_BE_INCOMPATIBLE"},{"import": 1087,"src": 4110,"name": "DBG_UNABLE_TO_PROVIDE_HANDLE"},{"import": 1087,"src": 4111,"name": "IO_DEVICE"},{"import": 1087,"src": 4112,"name": "CANT_ACCESS_FILE"},{"import": 1087,"src": 4113,"name": "IMEOUT"},{"import": 1087,"src": 4114,"name": "RPC_S_INTERNAL_ERROR"},{"import": 1087,"src": 4115,"name": "INVALID_LDT_DESCRIPTOR"},{"import": 1087,"src": 4116,"name": "NO_LOG_SPACE"},{"import": 1087,"src": 4117,"name": "INVALID_COLORSPACE"},{"import": 1087,"src": 4118,"name": "FAIL_SHUTDOWN"},{"import": 1087,"src": 4119,"name": "LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR"},{"import": 1087,"src": 4120,"name": "MISSING_SYSTEMFILE"},{"import": 1087,"src": 4121,"name": "RPC_S_ENTRY_NOT_FOUND"},{"import": 1087,"src": 4122,"name": "READ_FAULT"},{"import": 1087,"src": 4123,"name": "NOT_SAME_DEVICE"},{"import": 1087,"src": 4124,"name": "NO_SHUTDOWN_IN_PROGRESS"},{"import": 1087,"src": 4125,"name": "METAFILE_NOT_SUPPORTED"},{"import": 1087,"src": 4126,"name": "RPC_X_SS_CHAR_TRANS_SHORT_FILE"},{"import": 1087,"src": 4127,"name": "POSSIBLE_DEADLOCK"},{"import": 1087,"src": 4128,"name": "REQUEST_PAUSED"},{"import": 1087,"src": 4129,"name": "JOURNAL_DELETE_IN_PROGRESS"},{"import": 1087,"src": 4130,"name": "RPC_S_NO_PRINC_NAME"},{"import": 1087,"src": 4131,"name": "CANNOT_COPY"},{"import": 1087,"src": 4132,"name": "DOMAIN_TRUST_INCONSISTENT"},{"import": 1087,"src": 4133,"name": "NO_VOLUME_ID"},{"import": 1087,"src": 4134,"name": "LOCAL_USER_SESSION_KEY"},{"import": 1087,"src": 4135,"name": "IO_PRIVILEGE_FAILED"},{"import": 1087,"src": 4136,"name": "OR_INVALID_SET"},{"import": 1087,"src": 4137,"name": "RPC_S_INVALID_AUTH_IDENTITY"},{"import": 1087,"src": 4138,"name": "RESOURCE_TYPE_NOT_FOUND"},{"import": 1087,"src": 4139,"name": "FORMS_AUTH_REQUIRED"},{"import": 1087,"src": 4140,"name": "PARTIAL_COPY"},{"import": 1087,"src": 4141,"name": "DEVICE_REMOVED"},{"import": 1087,"src": 4142,"name": "LOCKED"},{"import": 1087,"src": 4143,"name": "VIRUS_INFECTED"},{"import": 1087,"src": 4144,"name": "DELETING_ICM_XFORM"},{"import": 1087,"src": 4145,"name": "REPARSE_OBJECT"},{"import": 1087,"src": 4146,"name": "DBG_CONTROL_BREAK"},{"import": 1087,"src": 4147,"name": "AUTODATASEG_EXCEEDS_64k"},{"import": 1087,"src": 4148,"name": "CANT_OPEN_ANONYMOUS"},{"import": 1087,"src": 4149,"name": "INSTALL_REMOTE_PROHIBITED"},{"import": 1087,"src": 4150,"name": "WRITE_PROTECT"},{"import": 1087,"src": 4151,"name": "IS_JOIN_PATH"},{"import": 1087,"src": 4152,"name": "WRONG_TARGET_NAME"},{"import": 1087,"src": 4153,"name": "INSTALL_SUSPEND"},{"import": 1087,"src": 4154,"name": "PIPE_CONNECTED"},{"import": 1087,"src": 4155,"name": "BAD_DEVICE_PATH"},{"import": 1087,"src": 4156,"name": "BEGINNING_OF_MEDIA"},{"import": 1087,"src": 4157,"name": "RPC_S_NOT_LISTENING"},{"import": 1087,"src": 4158,"name": "APP_HANG"},{"import": 1087,"src": 4159,"name": "PAGEFILE_CREATE_FAILED"},{"import": 1087,"src": 4160,"name": "UNKNOWN_FEATURE"},{"import": 1087,"src": 4161,"name": "WRONG_COMPARTMENT"},{"import": 1087,"src": 4162,"name": "RPC_S_INTERFACE_NOT_FOUND"},{"import": 1087,"src": 4163,"name": "LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED"},{"import": 1087,"src": 4164,"name": "CALLBACK_SUPPLIED_INVALID_DATA"},{"import": 1087,"src": 4165,"name": "PRIVILEGE_NOT_HELD"},{"import": 1087,"src": 4166,"name": "SERVER_SHUTDOWN_IN_PROGRESS"},{"import": 1087,"src": 4167,"name": "RPC_X_PIPE_CLOSED"},{"import": 1087,"src": 4168,"name": "REQ_NOT_ACCEP"},{"import": 1087,"src": 4169,"name": "SERVER_HAS_OPEN_HANDLES"},{"import": 1087,"src": 4170,"name": "FILE_HANDLE_REVOKED"},{"import": 1087,"src": 4171,"name": "BAD_PATHNAME"},{"import": 1087,"src": 4172,"name": "DEPENDENT_SERVICES_RUNNING"},{"import": 1087,"src": 4173,"name": "INCORRECT_ADDRESS"},{"import": 1087,"src": 4174,"name": "DLL_INIT_FAILED_LOGOFF"},{"import": 1087,"src": 4175,"name": "TOKEN_ALREADY_IN_USE"},{"import": 1087,"src": 4176,"name": "BAD_ENVIRONMENT"},{"import": 1087,"src": 4177,"name": "OVERRIDE_NOCHANGES"},{"import": 1087,"src": 4178,"name": "OUT_OF_PAPER"},{"import": 1087,"src": 4179,"name": "NOT_CHILD_WINDOW"},{"import": 1087,"src": 4180,"name": "RPC_S_FP_OVERFLOW"},{"import": 1087,"src": 4181,"name": "PAGE_FAULT_TRANSITION"},{"import": 1087,"src": 4182,"name": "BAD_STACK"},{"import": 1087,"src": 4183,"name": "DEBUG_ATTACH_FAILED"},{"import": 1087,"src": 4184,"name": "DATA_NOT_ACCEPTED"},{"import": 1087,"src": 4185,"name": "INSTALL_PLATFORM_UNSUPPORTED"},{"import": 1087,"src": 4186,"name": "INSUFFICIENT_POWER"},{"import": 1087,"src": 4187,"name": "RPC_S_SERVER_UNAVAILABLE"},{"import": 1087,"src": 4188,"name": "UNSUPPORTED_COMPRESSION"},{"import": 1087,"src": 4189,"name": "HIBERNATION_FAILURE"},{"import": 1087,"src": 4190,"name": "FAIL_REBOOT_REQUIRED"},{"import": 1087,"src": 4191,"name": "INSTALL_USEREXIT"},{"import": 1087,"src": 4192,"name": "INVALID_DEVICE_OBJECT_PARAMETER"},{"import": 1087,"src": 4193,"name": "INVALID_TRANSFORM"},{"import": 1087,"src": 4194,"name": "INSUFFICIENT_LOGON_INFO"},{"import": 1087,"src": 4195,"name": "CONNECTION_ABORTED"},{"import": 1087,"src": 4196,"name": "DOMAIN_CONTROLLER_EXISTS"},{"import": 1087,"src": 4197,"name": "INVALID_SEPARATOR_FILE"},{"import": 1087,"src": 4198,"name": "DBG_PRINTEXCEPTION_C"},{"import": 1087,"src": 4199,"name": "DISCARDED"},{"import": 1087,"src": 4200,"name": "RPC_S_INVALID_NAF_ID"},{"import": 1087,"src": 4201,"name": "HWNDS_HAVE_DIFF_PARENT"},{"import": 1087,"src": 4202,"name": "NO_MORE_MATCHES"},{"import": 1087,"src": 4203,"name": "DBG_REPLY_LATER"},{"import": 1087,"src": 4204,"name": "INVALID_FUNCTION"},{"import": 1087,"src": 4205,"name": "ADAP_HDW_ERR"},{"import": 1087,"src": 4206,"name": "ITERATED_DATA_EXCEEDS_64k"},{"import": 1087,"src": 4207,"name": "DEVICE_IN_USE"},{"import": 1087,"src": 4208,"name": "NOT_ALLOWED_ON_SYSTEM_FILE"},{"import": 1087,"src": 4209,"name": "PRIVATE_DIALOG_INDEX"},{"import": 1087,"src": 4210,"name": "SOME_NOT_MAPPED"},{"import": 1087,"src": 4211,"name": "PAGE_FAULT_PAGING_FILE"},{"import": 1087,"src": 4212,"name": "DEVICE_UNREACHABLE"},{"import": 1087,"src": 4213,"name": "PWD_TOO_RECENT"},{"import": 1087,"src": 4214,"name": "WAIT_NO_CHILDREN"},{"import": 1087,"src": 4215,"name": "ACCOUNT_RESTRICTION"},{"import": 1087,"src": 4216,"name": "DUPLICATE_PRIVILEGES"},{"import": 1087,"src": 4217,"name": "NO_DATA"},{"import": 1087,"src": 4218,"name": "BADKEY"},{"import": 1087,"src": 4219,"name": "PROCESS_IN_JOB"},{"import": 1087,"src": 4220,"name": "INVALID_TOKEN"},{"import": 1087,"src": 4221,"name": "THREAD_MODE_NOT_BACKGROUND"},{"import": 1087,"src": 4222,"name": "CACHE_PAGE_LOCKED"},{"import": 1087,"src": 4223,"name": "CANNOT_OPEN_PROFILE"},{"import": 1087,"src": 4224,"name": "INVALID_HANDLE_STATE"},{"import": 1087,"src": 4225,"name": "NOT_ENOUGH_MEMORY","kind": "const","type": 409,"value": null},{"import": 1087,"src": 4226,"name": "SERVICE_NOTIFY_CLIENT_LAGGING"},{"import": 1087,"src": 4227,"name": "RPC_S_MAX_CALLS_TOO_SMALL"},{"import": 1087,"src": 4228,"name": "STOPPED_ON_SYMLINK"},{"import": 1087,"src": 4229,"name": "INVALID_HANDLE","kind": "const","type": 409,"value": null},{"import": 1087,"src": 4230,"name": "NESTING_NOT_ALLOWED"},{"import": 1087,"src": 4231,"name": "INVALID_TIME"},{"import": 1087,"src": 4232,"name": "LOGON_TYPE_NOT_GRANTED"},{"import": 1087,"src": 4233,"name": "NO_EVENT_PAIR"},{"import": 1087,"src": 4234,"name": "INVALID_SERVICE_ACCOUNT"},{"import": 1087,"src": 4235,"name": "PATCH_PACKAGE_OPEN_FAILED"},{"import": 1087,"src": 4236,"name": "SYSTEM_IMAGE_BAD_SIGNATURE"},{"import": 1087,"src": 4237,"name": "RPC_S_SERVER_TOO_BUSY"},{"import": 1087,"src": 4238,"name": "LAST_ADMIN"},{"import": 1087,"src": 4239,"name": "PNP_IRQ_TRANSLATION_FAILED"},{"import": 1087,"src": 4240,"name": "SHUTDOWN_USERS_LOGGED_ON"},{"import": 1087,"src": 4241,"name": "BAD_EXE_FORMAT"},{"import": 1087,"src": 4242,"name": "EPT_S_CANT_PERFORM_OP"},{"import": 1087,"src": 4243,"name": "RPC_S_INVALID_OBJECT"},{"import": 1087,"src": 4244,"name": "FILE_SYSTEM_LIMITATION"},{"import": 1087,"src": 4245,"name": "PRIMARY_TRANSPORT_CONNECT_FAILED"},{"import": 1087,"src": 4246,"name": "NTLM_BLOCKED"},{"import": 1087,"src": 4247,"name": "PRINTER_HAS_JOBS_QUEUED"},{"import": 1087,"src": 4248,"name": "ADDRESS_NOT_ASSOCIATED"},{"import": 1087,"src": 4249,"name": "INVALID_PASSWORD"},{"import": 1087,"src": 4250,"name": "SESSION_CREDENTIAL_CONFLICT"},{"import": 1087,"src": 4251,"name": "CONNECTION_UNAVAIL"},{"import": 1087,"src": 4252,"name": "INVALID_STACKSEG"},{"import": 1087,"src": 4253,"name": "CANCEL_VIOLATION"},{"import": 1087,"src": 4254,"name": "NOT_LOCKED"},{"import": 1087,"src": 4255,"name": "RPC_S_NOT_RPC_ERROR"},{"import": 1087,"src": 4256,"name": "STACK_OVERFLOW_READ"},{"import": 1087,"src": 4257,"name": "RPC_S_INVALID_NET_ADDR"},{"import": 1087,"src": 4258,"name": "GROUP_EXISTS"},{"import": 1087,"src": 4259,"name": "EPT_S_INVALID_ENTRY"},{"import": 1087,"src": 4260,"name": "IS_JOIN_TARGET"},{"import": 1087,"src": 4261,"name": "INVALID_EVENTNAME"},{"import": 1087,"src": 4262,"name": "NOT_AUTHENTICATED"},{"import": 1087,"src": 4263,"name": "INVALID_EVENT_COUNT"},{"import": 1087,"src": 4264,"name": "THREAD_MODE_ALREADY_BACKGROUND"},{"import": 1087,"src": 4265,"name": "NO_SUCH_ALIAS"},{"import": 1087,"src": 4266,"name": "ACCOUNT_DISABLED"},{"import": 1087,"src": 4267,"name": "BAD_PIPE"},{"import": 1087,"src": 4268,"name": "NOT_OWNER"},{"import": 1087,"src": 4269,"name": "INVALID_PLUGPLAY_DEVICE_PATH"},{"import": 1087,"src": 4270,"name": "INSTALL_LOG_FAILURE"},{"import": 1087,"src": 4271,"name": "RPC_X_SS_CHAR_TRANS_OPEN_FAIL"},{"import": 1087,"src": 4272,"name": "ASSERTION_FAILURE"},{"import": 1087,"src": 4273,"name": "NO_RANGES_PROCESSED"},{"import": 1087,"src": 4274,"name": "CALLBACK_POP_STACK"},{"import": 1087,"src": 4275,"name": "RPC_S_NAME_SERVICE_UNAVAILABLE"},{"import": 1087,"src": 4276,"name": "PAGE_FAULT_GUARD_PAGE"},{"import": 1087,"src": 4277,"name": "CIRCULAR_DEPENDENCY"},{"import": 1087,"src": 4278,"name": "INVALID_ICON_HANDLE"},{"import": 1087,"src": 4279,"name": "SWAPERROR"},{"import": 1087,"src": 4280,"name": "SOURCE_ELEMENT_EMPTY"},{"import": 1087,"src": 4281,"name": "DUPLICATE_TAG"},{"import": 1087,"src": 4282,"name": "BUFFER_OVERFLOW"},{"import": 1087,"src": 4283,"name": "RPC_S_UUID_NO_ADDRESS"},{"import": 1087,"src": 4284,"name": "SERVICE_NO_THREAD"},{"import": 1087,"src": 4285,"name": "TIME_SKEW"},{"import": 1087,"src": 4286,"name": "INSTALL_FAILURE"},{"import": 1087,"src": 4287,"name": "PROCESS_IS_PROTECTED"},{"import": 1087,"src": 4288,"name": "DESTINATION_ELEMENT_FULL"},{"import": 1087,"src": 4289,"name": "RPC_X_WRONG_PIPE_ORDER"},{"import": 1087,"src": 4290,"name": "PRINTER_DRIVER_DOWNLOAD_NEEDED"},{"import": 1087,"src": 4291,"name": "RPC_S_INVALID_TIMEOUT"},{"import": 1087,"src": 4292,"name": "EAS_NOT_SUPPORTED"},{"import": 1087,"src": 4293,"name": "TRUST_FAILURE"},{"import": 1087,"src": 4294,"name": "IOPL_NOT_ENABLED"},{"import": 1087,"src": 4295,"name": "RPC_S_INVALID_RPC_PROTSEQ"},{"import": 1087,"src": 4296,"name": "PATCH_REMOVAL_UNSUPPORTED"},{"import": 1087,"src": 4297,"name": "INVALID_SERVICE_LOCK"},{"import": 1087,"src": 4298,"name": "ABANDON_HIBERFILE"},{"import": 1087,"src": 4299,"name": "PATCH_MANAGED_ADVERTISED_PRODUCT"},{"import": 1087,"src": 4300,"name": "SERVICE_NEVER_STARTED"},{"import": 1087,"src": 4301,"name": "ARBITRATION_UNHANDLED"},{"import": 1087,"src": 4302,"name": "NOT_LOGGED_ON"},{"import": 1087,"src": 4303,"name": "RPC_S_NO_CALL_ACTIVE"},{"import": 1087,"src": 4304,"name": "EXE_CANNOT_MODIFY_SIGNED_BINARY"},{"import": 1087,"src": 4305,"name": "HOOK_TYPE_NOT_ALLOWED"},{"import": 1087,"src": 4306,"name": "RESOURCE_LANG_NOT_FOUND"},{"import": 1087,"src": 4307,"name": "FAIL_NOACTION_REBOOT"},{"import": 1087,"src": 4308,"name": "VOLUME_MOUNTED"},{"import": 1087,"src": 4309,"name": "PNP_TRANSLATION_FAILED"},{"import": 1087,"src": 4310,"name": "DOWNGRADE_DETECTED"},{"import": 1087,"src": 4311,"name": "INVALID_SID"},{"import": 1087,"src": 4312,"name": "DEVICE_ALREADY_REMEMBERED"},{"import": 1087,"src": 4313,"name": "UNKNOWN_REVISION"},{"import": 1087,"src": 4314,"name": "INVALID_MODULETYPE"},{"import": 1087,"src": 4315,"name": "MORE_DATA"},{"import": 1087,"src": 4316,"name": "MESSAGE_SYNC_ONLY"},{"import": 1087,"src": 4317,"name": "SYSTEM_PROCESS_TERMINATED"},{"import": 1087,"src": 4318,"name": "INSTALL_PACKAGE_REJECTED"},{"import": 1087,"src": 4319,"name": "IMAGE_AT_DIFFERENT_BASE"},{"import": 1087,"src": 4320,"name": "RPC_S_COOKIE_AUTH_FAILED"},{"import": 1087,"src": 4321,"name": "IO_REISSUE_AS_CACHED"},{"import": 1087,"src": 4322,"name": "CURRENT_DIRECTORY"},{"import": 1087,"src": 4323,"name": "SERVICE_DEPENDENCY_DELETED"},{"import": 1087,"src": 4324,"name": "BAD_DRIVER"},{"import": 1087,"src": 4325,"name": "INVALID_PRIORITY"},{"import": 1087,"src": 4326,"name": "FILE_EXISTS","kind": "const","type": 409,"value": null},{"import": 1087,"src": 4327,"name": "NO_SYSTEM_MENU"},{"import": 1087,"src": 4328,"name": "TIMEOUT"},{"import": 1087,"src": 4329,"name": "SIGNAL_REFUSED"},{"import": 1087,"src": 4330,"name": "FT_READ_RECOVERY_FROM_BACKUP"},{"import": 1087,"src": 4331,"name": "KM_DRIVER_BLOCKED"},{"import": 1087,"src": 4332,"name": "NOT_GUI_PROCESS"},{"import": 1087,"src": 4333,"name": "CORRUPT_LOG_CLEARED"},{"import": 1087,"src": 4334,"name": "RPC_S_OUT_OF_RESOURCES"},{"import": 1087,"src": 4335,"name": "OUTOFMEMORY"},{"import": 1087,"src": 4336,"name": "INVALID_DRIVE"},{"import": 1087,"src": 4337,"name": "NO_SUCH_DOMAIN"},{"import": 1087,"src": 4338,"name": "FILENAME_EXCED_RANGE","kind": "const","type": 409,"value": null},{"import": 1087,"src": 4339,"name": "ILLEGAL_FLOAT_CONTEXT"},{"import": 1087,"src": 4340,"name": "RPC_X_NULL_REF_POINTER"},{"import": 1087,"src": 4341,"name": "FILE_INVALID"},{"import": 1087,"src": 4342,"name": "INVALID_DWP_HANDLE"},{"import": 1087,"src": 4343,"name": "PRINTER_DRIVER_PACKAGE_IN_USE"},{"import": 1087,"src": 4344,"name": "SYNC_FOREGROUND_REFRESH_REQUIRED"},{"import": 1087,"src": 4345,"name": "NO_SUCH_MEMBER"},{"import": 1087,"src": 4346,"name": "SEM_IS_SET"},{"import": 1087,"src": 4347,"name": "COLORSPACE_MISMATCH"},{"import": 1087,"src": 4348,"name": "THREAD_WAS_SUSPENDED"},{"import": 1087,"src": 4349,"name": "CLASS_HAS_WINDOWS"},{"import": 1087,"src": 4350,"name": "REPLY_MESSAGE_MISMATCH"},{"import": 1087,"src": 4351,"name": "SETMARK_DETECTED"},{"import": 1087,"src": 4352,"name": "FLOAT_MULTIPLE_FAULTS"},{"import": 1087,"src": 4353,"name": "TOO_MANY_CMDS"},{"import": 1087,"src": 4354,"name": "NOTIFY_ENUM_DIR"},{"import": 1087,"src": 4355,"name": "PAGED_SYSTEM_RESOURCES"},{"import": 1087,"src": 4356,"name": "NOT_CONNECTED"},{"import": 1087,"src": 4357,"name": "FUNCTION_FAILED"},{"import": 1087,"src": 4358,"name": "RPC_S_PROTSEQ_NOT_FOUND"},{"import": 1087,"src": 4359,"name": "INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE"},{"import": 1087,"src": 4360,"name": "RPC_S_WRONG_KIND_OF_BINDING"},{"import": 1087,"src": 4361,"name": "NO_SCROLLBARS"},{"import": 1087,"src": 4362,"name": "INVALID_FLAGS"},{"import": 1087,"src": 4363,"name": "DIRECTORY"},{"import": 1087,"src": 4364,"name": "REMOTE_SESSION_LIMIT_EXCEEDED"},{"import": 1087,"src": 4365,"name": "INDEX_ABSENT"},{"import": 1087,"src": 4366,"name": "DEBUGGER_INACTIVE"},{"import": 1087,"src": 4367,"name": "ADDRESS_ALREADY_ASSOCIATED"},{"import": 1087,"src": 4368,"name": "SHUTDOWN_IN_PROGRESS"},{"import": 1087,"src": 4369,"name": "MEMBER_IN_GROUP"},{"import": 1087,"src": 4370,"name": "INVALID_FIELD"},{"import": 1087,"src": 4371,"name": "RPC_S_INVALID_BINDING"},{"import": 1087,"src": 4372,"name": "RPC_S_INVALID_STRING_UUID"},{"import": 1087,"src": 4373,"name": "IS_SUBST_TARGET"},{"import": 1087,"src": 4374,"name": "NO_SUCH_LOGON_SESSION"},{"import": 1087,"src": 4375,"name": "SECURITY_STREAM_IS_INCONSISTENT"},{"import": 1087,"src": 4376,"name": "RPC_S_NO_INTERFACES"},{"import": 1087,"src": 4377,"name": "PRINT_MONITOR_IN_USE"},{"import": 1087,"src": 4378,"name": "BIOS_FAILED_TO_CONNECT_INTERRUPT"},{"import": 1087,"src": 4379,"name": "INVALID_ACE_CONDITION"},{"import": 1087,"src": 4380,"name": "CANTOPEN"},{"import": 1087,"src": 4381,"name": "DS_VERSION_CHECK_FAILURE"},{"import": 1087,"src": 4382,"name": "REVISION_MISMATCH"},{"import": 1087,"src": 4383,"name": "PRODUCT_VERSION"},{"import": 1087,"src": 4384,"name": "INVALID_SIGNAL_NUMBER"},{"import": 1087,"src": 4385,"name": "DISK_TOO_FRAGMENTED"},{"import": 1087,"src": 4386,"name": "FLOPPY_ID_MARK_NOT_FOUND"},{"import": 1087,"src": 4387,"name": "NO_SUCH_PACKAGE"},{"import": 1087,"src": 4388,"name": "INVALID_COMMAND_LINE"},{"import": 1087,"src": 4389,"name": "PREDEFINED_HANDLE"},{"import": 1087,"src": 4390,"name": "CLIPBOARD_NOT_OPEN"},{"import": 1087,"src": 4391,"name": "DEVICE_NO_RESOURCES"},{"import": 1087,"src": 4392,"name": "PROCESS_NOT_IN_JOB"},{"import": 1087,"src": 4393,"name": "NO_MORE_DEVICES"},{"import": 1087,"src": 4394,"name": "SUBST_TO_JOIN"},{"import": 1087,"src": 4395,"name": "DISK_RESOURCES_EXHAUSTED"},{"import": 1087,"src": 4396,"name": "NOTHING_TO_TERMINATE"},{"import": 1087,"src": 4397,"name": "INVALID_TASK_NAME"},{"import": 1087,"src": 4398,"name": "NO_SUCH_USER"},{"import": 1087,"src": 4399,"name": "FILE_CHECKED_OUT"},{"import": 1087,"src": 4400,"name": "ATOMIC_LOCKS_NOT_SUPPORTED"},{"import": 1087,"src": 4401,"name": "ACCOUNT_LOCKED_OUT"},{"import": 1087,"src": 4402,"name": "NOT_CAPABLE"},{"import": 1087,"src": 4403,"name": "BAD_THREADID_ADDR"},{"import": 1096,"src": 4404,"name": "NtClose"},{"import": 1096,"src": 4405,"name": "NtWaitForKeyedEvent","kind": "const","type": 1118,"value": 648},{"import": 1096,"src": 4406,"name": "NtCreateFile"},{"import": 1096,"src": 4407,"name": "NtReleaseKeyedEvent","kind": "const","type": 1118,"value": 649},{"import": 1096,"src": 4408,"name": "RtlFreeUnicodeString"},{"import": 1096,"src": 4409,"name": "RtlCaptureStackBackTrace","kind": "const","type": 1119,"value": 650},{"import": 1096,"src": 4410,"name": "RtlDosPathNameToNtPathName_U"},{"import": 1096,"src": 4411,"name": "NtQueryDirectoryFile"},{"import": 1096,"src": 4412,"name": "NtQueryInformationFile"},{"import": 1096,"src": 4413,"name": "NtCreateKeyedEvent","kind": "const","type": 1120,"value": 651},{"import": 1098,"src": 4414,"name": "CreateIoCompletionPort"},{"import": 1098,"src": 4415,"name": "WriteFile","kind": "const","type": 1121,"value": 652},{"import": 1098,"src": 4416,"name": "HeapDestroy"},{"import": 1098,"src": 4417,"name": "CloseHandle","kind": "const","type": 1122,"value": 653},{"import": 1098,"src": 4418,"name": "GetEnvironmentStringsW"},{"import": 1098,"src": 4419,"name": "VirtualFree","kind": "const","type": 1123,"value": 654},{"import": 1098,"src": 4420,"name": "EnterCriticalSection"},{"import": 1098,"src": 4421,"name": "GetExitCodeProcess"},{"import": 1098,"src": 4422,"name": "SetHandleInformation"},{"import": 1098,"src": 4423,"name": "WaitForSingleObject"},{"import": 1098,"src": 4424,"name": "Sleep","kind": "const","type": 1124,"value": 655},{"import": 1098,"src": 4425,"name": "GetConsoleMode","kind": "const","type": 1125,"value": 656},{"import": 1098,"src": 4426,"name": "FindFirstFileW"},{"import": 1098,"src": 4427,"name": "GetFinalPathNameByHandleW"},{"import": 1098,"src": 4428,"name": "GetConsoleScreenBufferInfo","kind": "const","type": 1126,"value": 657},{"import": 1098,"src": 4429,"name": "VirtualAlloc","kind": "const","type": 1127,"value": 658},{"import": 1098,"src": 4430,"name": "InitializeCriticalSection"},{"import": 1098,"src": 4431,"name": "AddVectoredExceptionHandler","kind": "const","type": 1128,"value": 659},{"import": 1098,"src": 4432,"name": "CreateSymbolicLinkW"},{"import": 1098,"src": 4433,"name": "MoveFileExW"},{"import": 1098,"src": 4434,"name": "GetSystemInfo"},{"import": 1098,"src": 4435,"name": "ExitProcess","kind": "const","type": 1129,"value": 660},{"import": 1098,"src": 4436,"name": "ReadFile","kind": "const","type": 1130,"value": 661},{"import": 1098,"src": 4437,"name": "RemoveVectoredExceptionHandler","kind": "const","type": 1131,"value": 662},{"import": 1098,"src": 4438,"name": "GetCurrentDirectoryW","kind": "const","type": 1132,"value": 663},{"import": 1098,"src": 4439,"name": "TlsAlloc"},{"import": 1098,"src": 4440,"name": "CreatePipe"},{"import": 1098,"src": 4441,"name": "HeapAlloc"},{"import": 1098,"src": 4442,"name": "WriteFileEx"},{"import": 1098,"src": 4443,"name": "HeapCreate"},{"import": 1098,"src": 4444,"name": "RemoveDirectoryW"},{"import": 1098,"src": 4445,"name": "GetFileAttributesW"},{"import": 1098,"src": 4446,"name": "InitOnceExecuteOnce"},{"import": 1098,"src": 4447,"name": "FormatMessageW","kind": "const","type": 1133,"value": 664},{"import": 1098,"src": 4448,"name": "SwitchToThread","kind": "const","type": 1134,"value": 665},{"import": 1098,"src": 4449,"name": "HeapValidate"},{"import": 1098,"src": 4450,"name": "GetModuleHandleW","kind": "const","type": 1135,"value": 666},{"import": 1098,"src": 4451,"name": "FreeLibrary"},{"import": 1098,"src": 4452,"name": "FreeEnvironmentStringsW"},{"import": 1098,"src": 4453,"name": "QueryPerformanceFrequency","kind": "const","type": 1136,"value": 667},{"import": 1098,"src": 4454,"name": "GetModuleFileNameW","kind": "const","type": 1137,"value": 668},{"import": 1098,"src": 4455,"name": "GetOverlappedResult"},{"import": 1098,"src": 4456,"name": "GetCurrentThread"},{"import": 1098,"src": 4457,"name": "HeapCompact"},{"import": 1098,"src": 4458,"name": "CreateThread"},{"import": 1098,"src": 4459,"name": "FindNextFileW"},{"import": 1098,"src": 4460,"name": "GetProcessHeap"},{"import": 1098,"src": 4461,"name": "HeapSummary"},{"import": 1098,"src": 4462,"name": "TerminateProcess"},{"import": 1098,"src": 4463,"name": "HeapReAlloc"},{"import": 1098,"src": 4464,"name": "QueryPerformanceCounter","kind": "const","type": 1136,"value": 669},{"import": 1098,"src": 4465,"name": "PostQueuedCompletionStatus"},{"import": 1098,"src": 4466,"name": "GetCurrentThreadId"},{"import": 1098,"src": 4467,"name": "LoadLibraryW"},{"import": 1098,"src": 4468,"name": "ReadDirectoryChangesW"},{"import": 1098,"src": 4469,"name": "CancelIoEx"},{"import": 1098,"src": 4470,"name": "FindClose"},{"import": 1098,"src": 4471,"name": "CreateDirectoryW"},{"import": 1098,"src": 4472,"name": "GetFileInformationByHandleEx","kind": "const","type": 1138,"value": 670},{"import": 1098,"src": 4473,"name": "SetConsoleTextAttribute","kind": "const","type": 1139,"value": 671},{"import": 1098,"src": 4474,"name": "TlsFree"},{"import": 1098,"src": 4475,"name": "GetProcAddress"},{"import": 1098,"src": 4476,"name": "HeapSize"},{"import": 1098,"src": 4477,"name": "GetLastError","kind": "const","type": 1140,"value": 672},{"import": 1098,"src": 4478,"name": "HeapFree"},{"import": 1098,"src": 4479,"name": "LeaveCriticalSection"},{"import": 1098,"src": 4480,"name": "SetFilePointerEx","kind": "const","type": 1141,"value": 673},{"import": 1098,"src": 4481,"name": "DeleteCriticalSection"},{"import": 1098,"src": 4482,"name": "GetQueuedCompletionStatus"},{"import": 1098,"src": 4483,"name": "GetStdHandle"},{"import": 1098,"src": 4484,"name": "GetSystemTimeAsFileTime"},{"import": 1098,"src": 4485,"name": "GetCommandLineA"},{"import": 1098,"src": 4486,"name": "DeleteFileW"},{"import": 1098,"src": 4487,"name": "GetEnvironmentVariableW","kind": "const","type": 1142,"value": 674},{"import": 1098,"src": 4488,"name": "SetFileTime"},{"import": 1098,"src": 4489,"name": "CreateFileW","kind": "const","type": 1143,"value": 675},{"import": 1098,"src": 4490,"name": "GetFileSizeEx","kind": "const","type": 1144,"value": 676},{"import": 1098,"src": 4491,"name": "GetFileInformationByHandle"},{"import": 1098,"src": 4492,"name": "DuplicateHandle"},{"import": 1098,"src": 4493,"name": "CreateProcessW"}],"fns": [{"src": 0,"type": 0},{"src": 1,"type": 1},{"src": 2,"type": 2},{"src": 3,"type": 3},{"src": 4,"type": 4},{"src": 5,"type": 5},{"src": 6,"type": 6},{"src": 7,"type": 7},{"src": 8,"type": 8},{"src": 9,"type": 8},{"src": 10,"type": 9},{"src": 11,"type": 10},{"src": 12,"type": 11},{"src": 13,"type": 12},{"src": 14,"type": 13},{"src": 15,"type": 14},{"src": 16,"type": 15},{"src": 17,"type": 16},{"src": 18,"type": 17},{"src": 19,"type": 18},{"src": 20,"type": 19},{"src": 21,"type": 20},{"src": 22,"type": 21},{"src": 23,"type": 22},{"src": 24,"type": 23},{"src": 25,"type": 24},{"src": 26,"type": 25},{"src": 27,"type": 17},{"src": 28,"type": 26},{"src": 29,"type": 27},{"src": 30,"type": 28},{"src": 31,"type": 29},{"src": 19,"type": 30},{"src": 32,"type": 31},{"src": 33,"type": 32},{"src": 19,"type": 33},{"src": 34,"type": 34},{"src": 35,"type": 35},{"src": 36,"type": 36},{"src": 37,"type": 37},{"src": 38,"type": 38},{"src": 39,"type": 39},{"src": 40,"type": 40},{"src": 41,"type": 41},{"src": 42,"type": 42},{"src": 42,"type": 43},{"src": 42,"type": 44},{"src": 43,"type": 8},{"src": 44,"type": 45},{"src": 44,"type": 46},{"src": 44,"type": 47},{"src": 45,"type": 48},{"src": 45,"type": 49},{"src": 45,"type": 50},{"src": 46,"type": 51},{"src": 47,"type": 52},{"src": 48,"type": 53},{"src": 49,"type": 54},{"src": 50,"type": 55},{"src": 51,"type": 56},{"src": 52,"type": 57},{"src": 53,"type": 58},{"src": 54,"type": 59},{"src": 55,"type": 60},{"src": 56,"type": 61},{"src": 57,"type": 62},{"src": 58,"type": 63},{"src": 59,"type": 64},{"src": 60,"type": 65},{"src": 61,"type": 66},{"src": 62,"type": 67},{"src": 63,"type": 68},{"src": 64,"type": 69},{"src": 65,"type": 70},{"src": 64,"type": 71},{"src": 65,"type": 72},{"src": 66,"type": 73},{"src": 67,"type": 74},{"src": 68,"type": 75},{"src": 69,"type": 76},{"src": 70,"type": 77},{"src": 71,"type": 78},{"src": 72,"type": 79},{"src": 73,"type": 80},{"src": 74,"type": 81},{"src": 75,"type": 82},{"src": 76,"type": 83},{"src": 76,"type": 83},{"src": 77,"type": 84},{"src": 78,"type": 85},{"src": 79,"type": 86},{"src": 80,"type": 87},{"src": 81,"type": 88},{"src": 82,"type": 89},{"src": 83,"type": 90},{"src": 84,"type": 91},{"src": 85,"type": 92},{"src": 86,"type": 93},{"src": 87,"type": 94},{"src": 88,"type": 95},{"src": 89,"type": 96},{"src": 90,"type": 97},{"src": 91,"type": 98},{"src": 92,"type": 99},{"src": 93,"type": 100},{"src": 94,"type": 101},{"src": 77,"type": 102},{"src": 95,"type": 103},{"src": 96,"type": 104},{"src": 97,"type": 105},{"src": 64,"type": 106},{"src": 60,"type": 107},{"src": 61,"type": 108},{"src": 9,"type": 109},{"src": 98,"type": 66},{"src": 42,"type": 110},{"src": 99,"type": 111},{"src": 77,"type": 112},{"src": 100,"type": 113},{"src": 101,"type": 114},{"src": 102,"type": 115},{"src": 73,"type": 116},{"src": 74,"type": 117},{"src": 70,"type": 118},{"src": 71,"type": 119},{"src": 72,"type": 120},{"src": 75,"type": 121},{"src": 103,"type": 122},{"src": 42,"type": 123},{"src": 104,"type": 124},{"src": 105,"type": 125},{"src": 77,"type": 126},{"src": 102,"type": 127},{"src": 77,"type": 128},{"src": 106,"type": 129},{"src": 102,"type": 130},{"src": 79,"type": 131},{"src": 78,"type": 132},{"src": 73,"type": 133},{"src": 74,"type": 134},{"src": 70,"type": 135},{"src": 71,"type": 136},{"src": 72,"type": 137},{"src": 75,"type": 138},{"src": 107,"type": 139},{"src": 73,"type": 140},{"src": 74,"type": 141},{"src": 70,"type": 142},{"src": 71,"type": 143},{"src": 72,"type": 144},{"src": 75,"type": 145},{"src": 103,"type": 146},{"src": 102,"type": 147},{"src": 74,"type": 148},{"src": 70,"type": 149},{"src": 71,"type": 150},{"src": 72,"type": 151},{"src": 75,"type": 152},{"src": 77,"type": 153},{"src": 103,"type": 154},{"src": 39,"type": 39},{"src": 108,"type": 155},{"src": 109,"type": 156},{"src": 110,"type": 157},{"src": 111,"type": 158},{"src": 112,"type": 159},{"src": 39,"type": 160},{"src": 113,"type": 161},{"src": 39,"type": 162},{"src": 39,"type": 160},{"src": 39,"type": 162},{"src": 114,"type": 163},{"src": 115,"type": 164},{"src": 116,"type": 165},{"src": 117,"type": 166},{"src": 39,"type": 167},{"src": 39,"type": 160},{"src": 39,"type": 160},{"src": 39,"type": 168},{"src": 39,"type": 160},{"src": 118,"type": 169},{"src": 119,"type": 170},{"src": 120,"type": 171},{"src": 121,"type": 39},{"src": 39,"type": 172},{"src": 39,"type": 168},{"src": 39,"type": 39},{"src": 122,"type": 173},{"src": 123,"type": 174},{"src": 124,"type": 42},{"src": 124,"type": 43},{"src": 124,"type": 44},{"src": 2,"type": 175},{"src": 2,"type": 176},{"src": 2,"type": 177},{"src": 125,"type": 178},{"src": 126,"type": 179},{"src": 127,"type": 39},{"src": 128,"type": 180},{"src": 129,"type": 181},{"src": 130,"type": 182},{"src": 131,"type": 183},{"src": 132,"type": 9},{"src": 133,"type": 184},{"src": 134,"type": 185},{"src": 135,"type": 186},{"src": 42,"type": 187},{"src": 136,"type": 188},{"src": 102,"type": 189},{"src": 137,"type": 66},{"src": 138,"type": 190},{"src": 139,"type": 191},{"src": 140,"type": 79},{"src": 141,"type": 78},{"src": 142,"type": 192},{"src": 143,"type": 67},{"src": 144,"type": 67},{"src": 145,"type": 193},{"src": 146,"type": 194},{"src": 147,"type": 98},{"src": 148,"type": 195},{"src": 149,"type": 196},{"src": 150,"type": 192},{"src": 86,"type": 197},{"src": 151,"type": 198},{"src": 152,"type": 199},{"src": 153,"type": 200},{"src": 154,"type": 108},{"src": 98,"type": 108},{"src": 124,"type": 110},{"src": 140,"type": 120},{"src": 141,"type": 119},{"src": 91,"type": 201},{"src": 124,"type": 123},{"src": 155,"type": 202},{"src": 140,"type": 137},{"src": 141,"type": 136},{"src": 140,"type": 144},{"src": 141,"type": 143},{"src": 91,"type": 203},{"src": 140,"type": 151},{"src": 141,"type": 150},{"src": 91,"type": 204},{"src": 48,"type": 53},{"src": 156,"type": 205},{"src": 157,"type": 206},{"src": 158,"type": 207},{"src": 48,"type": 208},{"src": 159,"type": 207},{"src": 160,"type": 209},{"src": 161,"type": 210},{"src": 48,"type": 211},{"src": 48,"type": 208},{"src": 48,"type": 211},{"src": 162,"type": 164},{"src": 48,"type": 212},{"src": 48,"type": 208},{"src": 48,"type": 208},{"src": 48,"type": 213},{"src": 48,"type": 208},{"src": 163,"type": 214},{"src": 48,"type": 215},{"src": 48,"type": 213},{"src": 48,"type": 53},{"src": 164,"type": 216},{"src": 39,"type": 217},{"src": 39,"type": 218},{"src": 39,"type": 219},{"src": 165,"type": 220},{"src": 166,"type": 221},{"src": 167,"type": 222},{"src": 168,"type": 223},{"src": 124,"type": 224},{"src": 169,"type": 225},{"src": 170,"type": 9},{"src": 171,"type": 226},{"src": 172,"type": 227},{"src": 173,"type": 228},{"src": 174,"type": 229},{"src": 124,"type": 187},{"src": 175,"type": 188},{"src": 176,"type": 230},{"src": 177,"type": 231},{"src": 124,"type": 232},{"src": 44,"type": 233},{"src": 178,"type": 234},{"src": 179,"type": 235},{"src": 180,"type": 236},{"src": 181,"type": 237},{"src": 182,"type": 238},{"src": 183,"type": 239},{"src": 184,"type": 240},{"src": 185,"type": 241},{"src": 124,"type": 242},{"src": 44,"type": 243},{"src": 147,"type": 201},{"src": 124,"type": 43},{"src": 124,"type": 244},{"src": 44,"type": 245},{"src": 147,"type": 203},{"src": 124,"type": 246},{"src": 44,"type": 247},{"src": 147,"type": 204},{"src": 128,"type": 180},{"src": 186,"type": 248},{"src": 187,"type": 249},{"src": 188,"type": 9},{"src": 189,"type": 250},{"src": 102,"type": 251},{"src": 70,"type": 252},{"src": 71,"type": 253},{"src": 72,"type": 254},{"src": 190,"type": 255},{"src": 191,"type": 192},{"src": 192,"type": 256},{"src": 193,"type": 257},{"src": 194,"type": 258},{"src": 73,"type": 259},{"src": 74,"type": 260},{"src": 75,"type": 261},{"src": 103,"type": 262},{"src": 42,"type": 263},{"src": 44,"type": 264},{"src": 195,"type": 265},{"src": 196,"type": 266},{"src": 197,"type": 267},{"src": 198,"type": 268},{"src": 199,"type": 269},{"src": 103,"type": 270},{"src": 200,"type": 271},{"src": 201,"type": 271},{"src": 202,"type": 272},{"src": 128,"type": 273},{"src": 128,"type": 273},{"src": 128,"type": 180},{"src": 128,"type": 274},{"src": 128,"type": 273},{"src": 128,"type": 180},{"src": 203,"type": 275},{"src": 128,"type": 180},{"src": 128,"type": 274},{"src": 128,"type": 273},{"src": 128,"type": 273},{"src": 128,"type": 180},{"src": 128,"type": 180},{"src": 48,"type": 276},{"src": 48,"type": 277},{"src": 48,"type": 278},{"src": 124,"type": 232},{"src": 204,"type": 279},{"src": 205,"type": 280},{"src": 206,"type": 281},{"src": 124,"type": 242},{"src": 124,"type": 244},{"src": 124,"type": 246},{"src": 165,"type": 220},{"src": 140,"type": 254},{"src": 207,"type": 282},{"src": 208,"type": 283},{"src": 141,"type": 253},{"src": 91,"type": 284},{"src": 124,"type": 263},{"src": 209,"type": 285},{"src": 210,"type": 286},{"src": 211,"type": 287},{"src": 211,"type": 287},{"src": 165,"type": 220},{"src": 211,"type": 288},{"src": 211,"type": 287},{"src": 165,"type": 220},{"src": 9,"type": 289},{"src": 165,"type": 220},{"src": 211,"type": 288},{"src": 211,"type": 287},{"src": 211,"type": 287},{"src": 165,"type": 220},{"src": 165,"type": 220},{"src": 128,"type": 290},{"src": 128,"type": 291},{"src": 128,"type": 292},{"src": 212,"type": 293},{"src": 213,"type": 294},{"src": 214,"type": 295},{"src": 39,"type": 296},{"src": 215,"type": 297},{"src": 124,"type": 263},{"src": 147,"type": 284},{"src": 216,"type": 298},{"src": 217,"type": 287},{"src": 217,"type": 287},{"src": 217,"type": 288},{"src": 217,"type": 287},{"src": 217,"type": 288},{"src": 217,"type": 287},{"src": 217,"type": 287},{"src": 211,"type": 299},{"src": 211,"type": 300},{"src": 211,"type": 301},{"src": 218,"type": 302},{"src": 219,"type": 303},{"src": 220,"type": 304},{"src": 221,"type": 305},{"src": 48,"type": 306},{"src": 222,"type": 307},{"src": 62,"type": 308},{"src": 223,"type": 309},{"src": 223,"type": 310},{"src": 217,"type": 299},{"src": 217,"type": 300},{"src": 217,"type": 301},{"src": 195,"type": 311},{"src": 224,"type": 312},{"src": 225,"type": 313},{"src": 226,"type": 314},{"src": 128,"type": 292},{"src": 128,"type": 315},{"src": 227,"type": 309},{"src": 227,"type": 310},{"src": 223,"type": 316},{"src": 223,"type": 317},{"src": 223,"type": 318},{"src": 228,"type": 319},{"src": 229,"type": 320},{"src": 211,"type": 301},{"src": 165,"type": 220},{"src": 230,"type": 321},{"src": 231,"type": 322},{"src": 227,"type": 316},{"src": 232,"type": 317},{"src": 227,"type": 318},{"src": 217,"type": 301},{"src": 233,"type": 323},{"src": 234,"type": 324},{"src": 235,"type": 325},{"src": 236,"type": 326},{"src": 237,"type": 327},{"src": 238,"type": 328},{"src": 239,"type": 329},{"src": 240,"type": 330},{"src": 241,"type": 328},{"src": 242,"type": 331},{"src": 243,"type": 332},{"src": 244,"type": 333},{"src": 245,"type": 334},{"src": 246,"type": 335},{"src": 246,"type": 335},{"src": 246,"type": 335},{"src": 247,"type": 335},{"src": 248,"type": 334},{"src": 249,"type": 336},{"src": 250,"type": 337},{"src": 198,"type": 338},{"src": 198,"type": 339},{"src": 251,"type": 340},{"src": 252,"type": 337},{"src": 65,"type": 341},{"src": 246,"type": 335},{"src": 198,"type": 335},{"src": 65,"type": 342},{"src": 253,"type": 343},{"src": 254,"type": 36},{"src": 255,"type": 344},{"src": 256,"type": 36},{"src": 257,"type": 344},{"src": 258,"type": 345},{"src": 259,"type": 1},{"src": 206,"type": 346},{"src": 2,"type": 347},{"src": 2,"type": 348},{"src": 2,"type": 347},{"src": 2,"type": 347},{"src": 260,"type": 349},{"src": 261,"type": 350},{"src": 262,"type": 351},{"src": 263,"type": 352},{"src": 264,"type": 353},{"src": 206,"type": 354},{"src": 265,"type": 352},{"src": 206,"type": 36},{"src": 266,"type": 353},{"src": 266,"type": 355},{"src": 206,"type": 36},{"src": 206,"type": 36},{"src": 206,"type": 356},{"src": 39,"type": 39},{"src": 39,"type": 160},{"src": 39,"type": 162},{"src": 39,"type": 160},{"src": 39,"type": 160},{"src": 267,"type": 357},{"src": 268,"type": 357},{"src": 269,"type": 358},{"src": 269,"type": 359},{"src": 270,"type": 360},{"src": 270,"type": 361},{"src": 270,"type": 360},{"src": 270,"type": 362},{"src": 270,"type": 363},{"src": 271,"type": 364},{"src": 39,"type": 365},{"src": 272,"type": 353},{"src": 273,"type": 352},{"src": 39,"type": 160},{"src": 39,"type": 160},{"src": 39,"type": 39},{"src": 39,"type": 160},{"src": 39,"type": 160},{"src": 39,"type": 366},{"src": 48,"type": 53},{"src": 48,"type": 208},{"src": 48,"type": 211},{"src": 48,"type": 208},{"src": 48,"type": 208},{"src": 274,"type": 367},{"src": 48,"type": 368},{"src": 48,"type": 369},{"src": 269,"type": 359},{"src": 269,"type": 370},{"src": 269,"type": 359},{"src": 269,"type": 371},{"src": 269,"type": 358},{"src": 275,"type": 357},{"src": 48,"type": 372},{"src": 48,"type": 208},{"src": 48,"type": 208},{"src": 48,"type": 53},{"src": 48,"type": 208},{"src": 48,"type": 208},{"src": 48,"type": 373},{"src": 128,"type": 180},{"src": 128,"type": 273},{"src": 128,"type": 374},{"src": 48,"type": 369},{"src": 48,"type": 375},{"src": 48,"type": 369},{"src": 48,"type": 376},{"src": 48,"type": 368},{"src": 128,"type": 273},{"src": 128,"type": 180},{"src": 128,"type": 180},{"src": 128,"type": 273},{"src": 165,"type": 220},{"src": 211,"type": 287},{"src": 211,"type": 377},{"src": 128,"type": 378},{"src": 128,"type": 374},{"src": 128,"type": 374},{"src": 211,"type": 287},{"src": 165,"type": 220},{"src": 165,"type": 220},{"src": 211,"type": 287},{"src": 217,"type": 287},{"src": 217,"type": 377},{"src": 165,"type": 379},{"src": 211,"type": 377},{"src": 211,"type": 377},{"src": 217,"type": 287},{"src": 217,"type": 287},{"src": 223,"type": 380},{"src": 217,"type": 377},{"src": 217,"type": 377},{"src": 227,"type": 380},{"src": 62,"type": 381},{"src": 276,"type": 386},{"src": 277,"type": 393},{"src": 278,"type": 396},{"src": 279,"type": 400},{"src": 280,"type": 401},{"src": 281,"type": 403},{"src": 282,"type": 406},{"src": 283,"type": 408},{"src": 284,"type": 410},{"src": 285,"type": 411},{"src": 286,"type": 414},{"src": 287,"type": 417},{"src": 288,"type": 420},{"src": 289,"type": 428},{"src": 290,"type": 429},{"src": 291,"type": 430},{"src": 292,"type": 432},{"src": 293,"type": 433},{"src": 294,"type": 435},{"src": 295,"type": 436},{"src": 296,"type": 441},{"src": 297,"type": 443},{"src": 298,"type": 446},{"src": 299,"type": 449},{"src": 300,"type": 450},{"src": 77,"type": 743},{"src": 64,"type": 744},{"src": 77,"type": 745},{"src": 64,"type": 746},{"src": 39,"type": 751},{"src": 729,"type": 776},{"src": 76,"type": 814},{"src": 235,"type": 963},{"src": 238,"type": 964},{"src": 72,"type": 966},{"src": 91,"type": 967},{"src": 147,"type": 968},{"src": 124,"type": 969},{"src": 42,"type": 970},{"src": 140,"type": 971},{"src": 44,"type": 972},{"src": 55,"type": 973},{"src": 104,"type": 979},{"src": 231,"type": 980},{"src": 198,"type": 981},{"src": 155,"type": 982},{"src": 116,"type": 983},{"src": 143,"type": 984},{"src": 209,"type": 985},{"src": 86,"type": 986},{"src": 65,"type": 987},{"src": 244,"type": 988},{"src": 90,"type": 989},{"src": 216,"type": 990},{"src": 251,"type": 992},{"src": 195,"type": 993},{"src": 9,"type": 994},{"src": 164,"type": 995},{"src": 123,"type": 1005},{"src": 122,"type": 1006},{"src": 109,"type": 1007},{"src": 45,"type": 1008},{"src": 110,"type": 1009},{"src": 2,"type": 1010},{"src": 206,"type": 1011},{"src": 101,"type": 1013},{"src": 118,"type": 1015},{"src": 111,"type": 1018},{"src": 19,"type": 1020},{"src": 269,"type": 1023},{"src": 128,"type": 1024},{"src": 217,"type": 1025},{"src": 48,"type": 1026},{"src": 223,"type": 1027},{"src": 165,"type": 1028},{"src": 1706,"type": 1030},{"src": 232,"type": 1031},{"src": 227,"type": 1032},{"src": 211,"type": 1033},{"src": 266,"type": 1050},{"src": 270,"type": 1051},{"src": 246,"type": 1074},{"src": 2315,"type": 412},{"src": 149,"type": 1097},{"src": 241,"type": 1108},{"src": 4405,"type": 1118},{"src": 4407,"type": 1118},{"src": 4409,"type": 1119},{"src": 4413,"type": 1120},{"src": 4415,"type": 1121},{"src": 4417,"type": 1122},{"src": 4419,"type": 1123},{"src": 4424,"type": 1124},{"src": 4425,"type": 1125},{"src": 4428,"type": 1126},{"src": 4429,"type": 1127},{"src": 4431,"type": 1128},{"src": 4435,"type": 1129},{"src": 4436,"type": 1130},{"src": 4437,"type": 1131},{"src": 4438,"type": 1132},{"src": 4447,"type": 1133},{"src": 4448,"type": 1134},{"src": 4450,"type": 1135},{"src": 4453,"type": 1136},{"src": 4454,"type": 1137},{"src": 4464,"type": 1136},{"src": 4472,"type": 1138},{"src": 4473,"type": 1139},{"src": 4477,"type": 1140},{"src": 4480,"type": 1141},{"src": 4487,"type": 1142},{"src": 4489,"type": 1143},{"src": 4490,"type": 1144}],"errors": [{"src": 4494,"name": "InputOutput"},{"src": 4495,"name": "SystemResources"},{"src": 4496,"name": "IsDir"},{"src": 4497,"name": "OperationAborted"},{"src": 4498,"name": "BrokenPipe"},{"src": 4499,"name": "ConnectionResetByPeer"},{"src": 4500,"name": "WouldBlock"},{"src": 4501,"name": "Unexpected"},{"src": 4502,"name": "Unseekable"},{"src": 4503,"name": "DiskQuota"},{"src": 4504,"name": "FileTooBig"},{"src": 4505,"name": "InputOutput"},{"src": 4506,"name": "NoSpaceLeft"},{"src": 4507,"name": "AccessDenied"},{"src": 4508,"name": "BrokenPipe"},{"src": 4509,"name": "SystemResources"},{"src": 4510,"name": "OperationAborted"},{"src": 4511,"name": "WouldBlock"},{"src": 4512,"name": "OutOfMemory"},{"src": 4513,"name": "AlreadyRegistered"},{"src": 4514,"name": "OutOfBounds"},{"src": 4515,"name": "NotRegistered"},{"src": 4516,"name": "SharingViolation"},{"src": 4517,"name": "PathAlreadyExists"},{"src": 4518,"name": "FileNotFound"},{"src": 4519,"name": "AccessDenied"},{"src": 4520,"name": "PipeBusy"},{"src": 4521,"name": "NameTooLong"},{"src": 4522,"name": "InvalidUtf8"},{"src": 4523,"name": "BadPathName"},{"src": 4524,"name": "Unexpected"},{"src": 4525,"name": "SymLinkLoop"},{"src": 4526,"name": "ProcessFdQuotaExceeded"},{"src": 4527,"name": "SystemFdQuotaExceeded"},{"src": 4528,"name": "NoDevice"},{"src": 4529,"name": "SystemResources"},{"src": 4530,"name": "FileTooBig"},{"src": 4531,"name": "IsDir"},{"src": 4532,"name": "NoSpaceLeft"},{"src": 4533,"name": "NotDir"},{"src": 4534,"name": "DeviceBusy"},{"src": 4535,"name": "SystemResources"},{"src": 4536,"name": "EOF"},{"src": 4537,"name": "UnmatchingPDB"},{"src": 4538,"name": "MissingDebugInfo"},{"src": 4539,"name": "PDBMismatch"},{"src": 4540,"name": "UnknownPDBVersion"},{"src": 4541,"name": "InvalidStreamDirectory"},{"src": 4542,"name": "InvalidBlockIndex"},{"src": 4543,"name": "UnhandledBigDirectoryStream"},{"src": 4544,"name": "InvalidDebugInfo"},{"src": 4545,"name": "EndOfStream"},{"src": 4546,"name": "CurrentWorkingDirectoryUnlinked"},{"src": 4547,"name": "InvalidPEMagic"},{"src": 4548,"name": "MissingCoffSection"},{"src": 4549,"name": "InvalidMachine"},{"src": 4550,"name": "InvalidPEHeader"},{"src": 4551,"name": "FileSystem"},{"src": 4552,"name": "PermissionDenied"},{"src": 4553,"name": "AccessDenied"},{"src": 4554,"name": "FileNotFound"},{"src": 4555,"name": "NameTooLong"},{"src": 4556,"name": "PathAlreadyExists"},{"src": 4557,"name": "NameTooLong"},{"src": 4558,"name": "EndOfFile"},{"src": 4559,"name": "OutOfMemory"},{"src": 4560,"name": "AccessDenied"},{"src": 4561,"name": "SymLinkLoop"},{"src": 4562,"name": "NameTooLong"},{"src": 4563,"name": "FileNotFound"},{"src": 4564,"name": "SystemResources"},{"src": 4565,"name": "NotDir"},{"src": 4566,"name": "NameTooLong"},{"src": 4567,"name": "Unexpected"},{"src": 4568,"name": "Utf8ExpectedContinuation"},{"src": 4569,"name": "Utf8OverlongEncoding"},{"src": 4570,"name": "Utf8EncodesSurrogateHalf"},{"src": 4571,"name": "Utf8CodepointTooLarge"},{"src": 4572,"name": "Unexpected"},{"src": 4573,"name": "OutOfMemory"},{"src": 4574,"name": "EnvironmentVariableNotFound"},{"src": 4575,"name": "InvalidUtf8"},{"src": 4576,"name": "Unexpected"},{"src": 4577,"name": "Overflow"},{"src": 4578,"name": "Unexpected"},{"src": 4579,"name": "Unexpected"},{"src": 4580,"name": "Unexpected"},{"src": 4581,"name": "DanglingSurrogateHalf"},{"src": 4582,"name": "ExpectedSecondSurrogateHalf"},{"src": 4583,"name": "UnexpectedSecondSurrogateHalf"},{"src": 4584,"name": "CodepointTooLarge"},{"src": 4585,"name": "Utf8CannotEncodeSurrogateHalf"},{"src": 4586,"name": "Utf8ExpectedContinuation"},{"src": 4587,"name": "Utf8OverlongEncoding"},{"src": 4588,"name": "Utf8ExpectedContinuation"},{"src": 4589,"name": "Utf8OverlongEncoding"},{"src": 4590,"name": "Overflow"},{"src": 4591,"name": "EnvironmentVariableNotFound"},{"src": 4592,"name": "Unexpected"},{"src": 4593,"name": "Unexpected"},{"src": 4594,"name": "Utf8InvalidStartByte"},{"src": 4595,"name": "SystemResources"},{"src": 4596,"name": "OperationAborted"},{"src": 4597,"name": "BrokenPipe"},{"src": 4598,"name": "Unexpected"},{"src": 4599,"name": "SystemCannotYield"},{"src": 4590,"name": "Overflow"},{"src": 4600,"name": "TimerUnsupported"},{"src": 4601,"name": "BufferTooSmall"},{"src": 4602,"name": "SystemResources"},{"src": 4603,"name": "NameTooLong"}],"astNodes": [{"file": 7,"line": 358,"col": 4,"docs": " This function is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n","fields": [4604,4605]},{"file": 0,"line": 421,"col": 0},{"file": 16,"line": 222,"col": 4,"fields": [4606,4607,4608,4609],"varArgs": true},{"file": 16,"line": 209,"col": 4,"docs": " This function invokes undefined behavior when `ok` is `false`.\n In Debug and ReleaseSafe modes, calls to this function are always\n generated, and the `unreachable` statement triggers a panic.\n In ReleaseFast and ReleaseSmall modes, calls to this function are\n optimized away, and in fact the optimizer is able to use the assertion\n in its heuristics.\n Inside a test block, it is best to use the `std.testing` module rather\n than this function, because this function may not detect a test failure\n in ReleaseFast and ReleaseSmall mode. Outside of a test block, this assert\n function is the correct function to use.\n","fields": [4610]},{"file": 0,"line": 94,"col": 12,"docs": " You can think of **capacity_sparse** as how many entities you want to support, and\n **capacity_dense** as how many components.\n","fields": [4611,4612,4613]},{"file": 28,"line": 593,"col": 16,"fields": [4614]},{"file": 28,"line": 619,"col": 12,"fields": [4615,4616,4617,4618,4619]},{"file": 28,"line": 604,"col": 12,"fields": [4620,4621,4622]},{"file": 13,"line": 1507,"col": 4,"docs": " Round an address up to the nearest aligned address\n The alignment must be a power of 2 and greater than 0.\n","fields": [4623,4624]},{"file": 14,"line": 255,"col": 4,"docs": " Returns the smaller number. When one of the parameter's type's full range fits in the other,\n the return type is the smaller type.\n","fields": [4625,4626]},{"file": 28,"line": 630,"col": 12,"fields": [4627,4628,4629,4630,4631]},{"file": 0,"line": 199,"col": 12,"docs": " May return error.OutOfBounds or error.AlreadyRegistered, otherwise calls add.\n Grows .dense_to_sparse and .values if needed and resizing is allowed.\n","fields": [4632,4633]},{"file": 0,"line": 352,"col": 12,"docs": " May return error.OutOfBounds, otherwise calls hasSparse.\n","fields": [4634,4635]},{"file": 0,"line": 343,"col": 12,"docs": " Returns true if the sparse is registered to a dense index.\n","fields": [4636,4637]},{"file": 0,"line": 173,"col": 12,"docs": " Registers the sparse value and matches it to a dense index.\n Grows .dense_to_sparse and .values if needed and resizing is allowed.\n Note: If resizing is allowed, you must use an allocator that you are sure\n will never fail for your use cases.\n If that is not an option, use addOrError.\n","fields": [4638,4639]},{"file": 0,"line": 128,"col": 12,"docs": " Deallocates **dense_to_sparse**, **sparse_to_dense**, and optionally **values**.\n","fields": [4640]},{"file": 0,"line": 254,"col": 20,"docs": " May return error.OutOfBounds or error.AlreadyRegistered, otherwise calls add.\n Grows .dense_to_sparse and .values if needed and resizing is allowed.\n","fields": [4641,4642,4643]},{"file": 0,"line": 231,"col": 20,"docs": " Registers the sparse value and matches it to a dense index\n Grows .dense_to_sparse and .values if needed and resizing is allowed.\n Note: If resizing is allowed, you must use an allocator that you are sure\n will never fail for your use cases.\n  If that is not an option, use addOrError.\n","fields": [4644,4645,4646]},{"file": 0,"line": 142,"col": 12,"docs": " Returns the amount of allocated handles.\n","fields": [4647]},{"file": 17,"line": 25,"col": 4,"docs": " This function is intended to be used only in tests. When the two values are not\n equal, prints diagnostics to stderr to show exactly how they are not equal,\n then aborts.\n The types must match exactly.\n","fields": [4648,4649]},{"file": 0,"line": 330,"col": 12,"docs": " May return error.OutOfBounds or error.NotRegistered, otherwise calls remove.\n","fields": [4650,4651]},{"file": 0,"line": 314,"col": 12,"docs": " Like removeWithInfo info, but slightly faster, in case you don't care about the switch.\n","fields": [4652,4653]},{"file": 0,"line": 301,"col": 12,"docs": " May return error.OutOfBounds, otherwise calls removeWithInfo.\n","fields": [4654,4655,4656,4657]},{"file": 0,"line": 283,"col": 12,"docs": " Removes the sparse/dense index, and replaces it with the last ones.\n dense_old and dense_new is\n","fields": [4658,4659,4660,4661]},{"file": 0,"line": 147,"col": 12,"docs": " Returns a slice that can be used to loop over the sparse handles.\n","fields": [4662]},{"file": 0,"line": 156,"col": 20,"docs": " Returns a slice that can be used to loop over the values.\n","fields": [4663]},{"file": 0,"line": 137,"col": 12,"docs": " Resets the set cheaply.\n","fields": [4664]},{"file": 0,"line": 164,"col": 12,"docs": " Returns how many dense indices are still available\n","fields": [4665]},{"file": 0,"line": 367,"col": 12,"docs": " Tries hasSparseOrError, then returns getBySparse.\n","fields": [4666,4667]},{"file": 0,"line": 361,"col": 12,"docs": " Returns corresponding dense index.\n","fields": [4668,4669]},{"file": 0,"line": 397,"col": 20,"docs": " First tries hasSparse, then returns getValueBySparse().\n","fields": [4670,4671]},{"file": 0,"line": 390,"col": 20,"docs": " Returns a pointer to the SOA value corresponding to the sparse parameter.\n","fields": [4672,4673]},{"file": 0,"line": 379,"col": 12,"docs": " Returns OutOfBounds or getByDense.\n","fields": [4674,4675]},{"file": 0,"line": 373,"col": 12,"docs": " Returns corresponding sparse index.\n","fields": [4676,4677]},{"file": 0,"line": 409,"col": 20,"docs": " Returns error.OutOfBounds or getValueByDense().\n","fields": [4678,4679]},{"file": 0,"line": 403,"col": 20,"docs": " Returns a pointer to the SOA value corresponding to the sparse parameter.\n","fields": [4680,4681]},{"file": 16,"line": 2387,"col": 0,"fields": []},{"file": 15,"line": 174,"col": 4,"docs": " Causes abnormal process termination.\n If linking against libc, this calls the abort() libc function. Otherwise\n it raises SIGABRT followed by SIGKILL and finally lo\n","fields": []},{"file": 16,"line": 55,"col": 4,"fields": []},{"file": 12,"line": 37,"col": 12,"fields": [4682,4683,4684],"varArgs": true},{"file": 16,"line": 183,"col": 4,"docs": " Tries to print a stack trace to stderr, unbuffered, and ignores any error returned.\n TODO multithreaded awareness\n","fields": [4685]},{"file": 16,"line": 91,"col": 4,"docs": " Tries to print the current stack trace to stderr, unbuffered, and ignores any error returned.\n TODO multithreaded awareness\n","fields": [4686]},{"file": 13,"line": 103,"col": 8,"docs": " Allocates an array of `n` items of type `T` and sets all the\n items to `undefined`. Depending on the Allocator\n implementation, it may be required to call `free` once the\n memory is no longer needed, to avoid a resource leak. If the\n `Allocator` implementation is unknown, then correct code will\n call `free` when done.\n\n For allocating a single item, see `create`.\n","fields": [4687,4688,4689]},{"file": 13,"line": 1528,"col": 4,"docs": " Round an address up to the previous aligned address\n The alignment must be a power of 2 and greater than 0.\n","fields": [4690,4691]},{"file": 13,"line": 230,"col": 8,"docs": " Free an array allocated with `alloc`. To free a single item,\n see `destroy`.\n","fields": [4692,4693]},{"file": 16,"line": 213,"col": 4,"fields": [4694,4695],"varArgs": true},{"file": 20,"line": 43,"col": 4,"fields": []},{"file": 32,"line": 338,"col": 8,"fields": [4696]},{"file": 21,"line": 90,"col": 4,"docs": " Renders fmt string with args, calling output with slices of bytes.\n If `output` returns an error, the error is returned from `format` and\n `output` is not called again.\n\n The format string must be comptime known and may contain placeholders following\n this format:\n `{[position][specifier]:[fill][alignment][width].[precision]}`\n\n Each word between `[` and `]` is a parameter you have to replace with something:\n\n - *position* is the index of the argument that should be inserted\n - *specifier* is a type-dependent formatting option that determines how a type should formatted (see below)\n - *fill* is a single character which is used to pad the formatted text\n - *alignment* is one of the three characters `<`, `^` or `>`. they define if the text is *left*, *center*, or *right* aligned\n - *width* is the total width of the field in characters\n - *precision* specifies how many decimals a formatted number should have\n\n Note that most of the parameters are optional and may be omitted. Also you can leave out separators like `:` and `.` when\n all parameters after the separator are omitted.\n Only exception is the *fill* parameter. If *fill* is required, one has to specify *alignment* as well, as otherwise\n the digits after `:` is interpreted as *width*, not *fill*.\n\n The *specifier* has several options for types:\n - `x` and `X`:\n   - format the non-numeric value as a string of bytes in hexadecimal notation (\"binary dump\") in either lower case or upper case\n   - output numeric value in hexadecimal notation\n - `s`: print a pointer-to-many as a c-string, use zero-termination\n - `B` and `Bi`: output a memory size in either metric (1000) or power-of-two (1024) based notation. works for both float and integer values.\n - `e`: output floating point value in scientific notation\n - `d`: output numeric value in decimal notation\n - `b`: output integer value in binary notation\n - `c`: output integer as an ASCII character. Integer type must have 8 bits at max.\n - `*`: output the address of the value instead of the value itself.\n\n If a formatted user type contains a function of the type\n ```\n fn format(value: ?, comptime fmt: []const u8, options: std.fmt.FormatOptions, context: var, comptime Errors: type, output: fn (@typeOf(context), []const u8) Errors!void) Errors!void\n ```\n with `?` being the type formatted, this function will be called instead of the default implementation.\n This allows user types to be formatted in a logical manner instead of dumping all fields of the type.\n\n A user type may be a `struct`, `union` or `enum` type.\n","fields": [4697,4698,4699,4700,4701],"varArgs": true},{"file": 23,"line": 662,"col": 4,"fields": [4702,4703]},{"file": 16,"line": 74,"col": 4,"fields": []},{"file": 16,"line": 836,"col": 4,"docs": " TODO once https://github.com/ziglang/zig/issues/3157 is fully implemented,\n make this `noasync fn` and remove the individual noasync calls.\n","fields": [4704]},{"file": 16,"line": 2346,"col": 0,"fields": []},{"file": 16,"line": 848,"col": 0,"fields": [4705]},{"file": 27,"line": 1147,"col": 4,"fields": []},{"file": 13,"line": 79,"col": 8,"docs": " Returns a pointer to undefined memory.\n Call `destroy` with the result to free the memory.\n","fields": [4706,4707]},{"file": 32,"line": 164,"col": 8,"docs": " Upon success, the stream is in an uninitialized state. To continue using it,\n you must use the open() function.\n","fields": [4708]},{"file": 24,"line": 43,"col": 8,"fields": [4709,4710]},{"file": 24,"line": 55,"col": 8,"fields": [4711]},{"file": 32,"line": 331,"col": 8,"fields": [4712]},{"file": 11,"line": 57,"col": 12,"docs": " Returns the number of bytes read. If the number read would be smaller than buf.len,\n error.EndOfStream is returned instead.\n","fields": [4713,4714]},{"file": 11,"line": 45,"col": 12,"docs": " Returns the number of bytes read. If the number read is smaller than buf.len, it\n means the stream reached the end. Reaching the end of a stream is not an error\n condition.\n","fields": [4715,4716]},{"file": 13,"line": 349,"col": 4,"docs": " Compares two slices and returns whether they are equal.\n","fields": [4717,4718,4719]},{"file": 32,"line": 205,"col": 8,"docs": " Repositions read/write file offset relative to the beginning.\n","fields": [4720,4721]},{"file": 11,"line": 198,"col": 12,"fields": [4722,4723]},{"file": 13,"line": 537,"col": 4,"docs": " Reads an integer from memory with bit count specified by T.\n The bit count of T must be evenly divisible by 8.\n This function cannot fail and cannot cause undefined behavior.\n Assumes the endianness of memory is native. This means the function can\n simply pointer cast memory.\n","fields": [4724,4725]},{"file": 24,"line": 94,"col": 4,"fields": [4726,4727]},{"file": 32,"line": 195,"col": 8,"docs": " Repositions read/write file offset relative to the current offset.\n","fields": [4728,4729]},{"file": 24,"line": 122,"col": 8,"fields": [4730,4731]},{"file": 24,"line": 184,"col": 8,"fields": [4732]},{"file": 4,"line": 198,"col": 12,"fields": [4733,4734]},{"file": 4,"line": 85,"col": 12,"docs": " Return the maximum number of items the list can hold\n without allocating more memory.\n","fields": [4735]},{"file": 13,"line": 148,"col": 8,"docs": " This function requests a new byte size for an existing allocation,\n which can be larger, smaller, or the same size as the old memory\n allocation.\n This function is preferred over `shrink`, because it can fail, even\n when shrinking. This gives the allocator a chance to perform a\n cheap shrink operation if possible, or otherwise return OutOfMemory,\n indicating that the caller should keep their capacity, for example\n in `std.ArrayList.shrink`.\n If you need guaranteed success, call `shrink`.\n If `new_n` is 0, this is the same as `free` and it always succeeds.\n","fields": [4736,4737,4738]},{"file": 4,"line": 130,"col": 12,"docs": " Extend the list by 1 element. Allocates more memory as\n necessary.\n","fields": [4739,4740]},{"file": 4,"line": 209,"col": 12,"docs": " Increase length by 1, returning pointer to the new item.\n","fields": [4741]},{"file": 4,"line": 215,"col": 12,"fields": [4742]},{"file": 24,"line": 215,"col": 8,"fields": [4743,4744]},{"file": 11,"line": 231,"col": 12,"fields": [4745,4746]},{"file": 4,"line": 50,"col": 12,"docs": " Return contents as a slice. Only valid while the list\n doesn't change size.\n","fields": [4747]},{"file": 11,"line": 173,"col": 12,"docs": " Reads 1 byte from the stream or returns `error.EndOfStream`.\n","fields": [4748]},{"file": 33,"line": 373,"col": 4,"docs": " On Windows, this calls `resolveWindows` and on POSIX it calls `resolvePosix`.\n","fields": [4749,4750]},{"file": 33,"line": 389,"col": 4,"docs": " This function is like a series of `cd` statements executed one after another.\n It resolves \".\" and \"..\".\n The result does not have a trailing path separator.\n If all paths are relative it uses the current working directory as a starting point.\n Each drive has its own current working directory.\n Path separators are canonicalized to '\\\\' and drives are canonicalized to capital letters.\n Note: all usage of this function should be audited due to the existence of symlinks.\n Without performing actual syscalls, resolving `..` could be incorrect.\n","fields": [4751,4752]},{"file": 30,"line": 23,"col": 4,"docs": " Caller must free the returned memory.\n","fields": [4753]},{"file": 33,"line": 229,"col": 4,"fields": [4754]},{"file": 33,"line": 354,"col": 0,"fields": [4755]},{"file": 33,"line": 331,"col": 0,"fields": [4756,4757,4758]},{"file": 13,"line": 249,"col": 4,"docs": " Copy all of source into dest at position 0.\n dest.len must be >= source.len.\n dest.ptr must be <= src.ptr.\n","fields": [4759,4760,4761]},{"file": 13,"line": 789,"col": 4,"docs": " Returns an iterator that iterates over the slices of `buffer` that are not\n any of the bytes in `delimiter_bytes`.\n tokenize(\"   abc def    ghi  \", \" \")\n Will return slices for \"abc\", \"def\", \"ghi\", null, in that order.\n If `buffer` is empty, the iterator will return null.\n If `delimiter_bytes` does not exist in buffer,\n the iterator will return `buffer`, null, in that order.\n See also the related function `separate`.\n","fields": [4762,4763]},{"file": 13,"line": 916,"col": 8,"docs": " Returns a slice of the next token, or null if tokenization is complete.\n","fields": [4764]},{"file": 15,"line": 913,"col": 4,"docs": " The result is a slice of out_buffer, indexed from 0.\n","fields": [4765]},{"file": 13,"line": 381,"col": 4,"docs": " Copies ::m to newly allocated memory. Caller is responsible to free it.\n","fields": [4766,4767,4768]},{"file": 13,"line": 190,"col": 8,"docs": " Prefer calling realloc to shrink if you can tolerate failure, such as\n in an ArrayList data structure with a storage capacity.\n Shrink always succeeds, and `new_n` must be <= `old_mem.len`.\n Returned slice has same alignment as old_mem.\n Shrinking to 0 is the same as calling `free`.\n","fields": [4769,4770,4771]},{"file": 23,"line": 470,"col": 8,"fields": [4772,4773,4774]},{"file": 32,"line": 28,"col": 8,"docs": " Call close to clean up.\n","fields": [4775]},{"file": 23,"line": 495,"col": 4,"fields": [4776,4777,4778]},{"file": 32,"line": 215,"col": 8,"fields": [4779]},{"file": 23,"line": 576,"col": 0,"fields": [4780,4781]},{"file": 23,"line": 639,"col": 4,"fields": [4782,4783,4784]},{"file": 11,"line": 31,"col": 12,"docs": " Returns the number of bytes read. It may be less than buffer.len.\n If the number of bytes read is 0, it means end of stream.\n End of stream is not an error condition.\n","fields": [4785,4786]},{"file": 23,"line": 484,"col": 8,"fields": [4787,4788]},{"file": 16,"line": 893,"col": 12,"fields": [4789]},{"file": 16,"line": 1002,"col": 0,"fields": [4790,4791]},{"file": 4,"line": 35,"col": 12,"docs": " Deinitialize with `deinit` or use `toOwnedSlice`.\n","fields": [4792]},{"file": 4,"line": 101,"col": 12,"docs": " The caller owns the returned memory. ArrayList becomes empty.\n","fields": [4793]},{"file": 13,"line": 368,"col": 4,"fields": [4794,4795]},{"file": 23,"line": 478,"col": 8,"fields": [4796,4797]},{"file": 23,"line": 651,"col": 4,"fields": [4798,4799]},{"file": 23,"line": 692,"col": 4,"fields": [4800,4801]},{"file": 16,"line": 83,"col": 0,"fields": []},{"file": 16,"line": 256,"col": 4,"fields": [4802,4803,4804,4805,4806]},{"file": 16,"line": 348,"col": 4,"docs": " TODO once https://github.com/ziglang/zig/issues/3157 is fully implemented,\n make this `noasync fn` and remove the individual noasync calls.\n","fields": [4807,4808,4809,4810]},{"file": 16,"line": 358,"col": 0,"fields": [4811,4812,4813,4814]},{"file": 30,"line": 599,"col": 4,"fields": []},{"file": 16,"line": 569,"col": 0,"docs": " TODO this is a special case hack right now. clean it up and maybe make it part of std.fmt\n","fields": [4815]},{"file": 16,"line": 628,"col": 0,"fields": [4816,4817]},{"file": 33,"line": 848,"col": 4,"fields": [4818]},{"file": 13,"line": 364,"col": 4,"fields": [4819,4820]},{"file": 23,"line": 698,"col": 4,"fields": [4821,4822]},{"file": 16,"line": 1173,"col": 0,"fields": [4823,4824]},{"file": 32,"line": 313,"col": 8,"fields": [4825,4826]},{"file": 12,"line": 41,"col": 12,"fields": [4827,4828]},{"file": 12,"line": 25,"col": 12,"fields": [4829,4830]},{"file": 16,"line": 316,"col": 4,"fields": [4831,4832,4833,4834]},{"file": 16,"line": 326,"col": 4,"fields": [4835,4836,4837,4838]},{"file": 13,"line": 107,"col": 8,"fields": [4839,4840,4841,4842]},{"file": 32,"line": 139,"col": 8,"fields": [4843]},{"file": 45,"line": 768,"col": 4,"fields": []},{"file": 32,"line": 379,"col": 8,"fields": [4844,4845]},{"file": 21,"line": 318,"col": 4,"fields": [4846,4847,4848,4849,4850,4851,4852]},{"file": 28,"line": 346,"col": 8,"fields": [4853]},{"file": 28,"line": 169,"col": 4,"fields": [4854,4855,4856,4857,4858]},{"file": 28,"line": 42,"col": 4,"fields": [4859,4860,4861]},{"file": 28,"line": 129,"col": 4,"fields": [4862,4863,4864,4865,4866]},{"file": 45,"line": 605,"col": 4,"fields": [4867,4868,4869]},{"file": 27,"line": 1216,"col": 4,"docs": " Same as `selfExePath` except the result is UTF16LE-encoded.\n","fields": [4870]},{"file": 32,"line": 49,"col": 8,"docs": " `openRead` except with a null terminated UTF16LE encoded path\n","fields": [4871]},{"file": 15,"line": 88,"col": 4,"docs": " Closes the file descriptor.\n This function is not capable of returning any indication of failure. An\n application which wants to ensure writes have succeeded before closing\n must call `fsync` before `close`.\n Note: The Zig standard library does not support POSIX thread cancellation.\n","fields": [4872]},{"file": 32,"line": 365,"col": 8,"fields": [4873,4874]},{"file": 15,"line": 2408,"col": 4,"docs": " Repositions read/write file offset relative to the beginning.\n","fields": [4875,4876]},{"file": 15,"line": 2437,"col": 4,"docs": " Repositions read/write file offset relative to the current offset.\n","fields": [4877,4878]},{"file": 13,"line": 159,"col": 8,"docs": " This is the same as `realloc`, except caller may additionally request\n a new alignment, which can be larger, smaller, or the same as the old\n allocation.\n","fields": [4879,4880,4881,4882]},{"file": 4,"line": 79,"col": 12,"docs": " Return length of the list.\n","fields": [4883]},{"file": 33,"line": 157,"col": 4,"fields": [4884]},{"file": 13,"line": 892,"col": 4,"fields": [4885,4886,4887]},{"file": 33,"line": 361,"col": 0,"fields": [4888,4889]},{"file": 13,"line": 939,"col": 4,"fields": [4890,4891]},{"file": 45,"line": 310,"col": 4,"docs": " The result is a slice of `buffer`, indexed from 0.\n","fields": [4892]},{"file": 13,"line": 201,"col": 8,"docs": " This is the same as `shrink`, except caller may additionally request\n a new alignment, which must be smaller or the same as the old\n allocation.\n","fields": [4893,4894,4895,4896]},{"file": 45,"line": 820,"col": 4,"fields": [4897]},{"file": 45,"line": 824,"col": 4,"fields": [4898,4899]},{"file": 33,"line": 130,"col": 4,"fields": [4900]},{"file": 19,"line": 564,"col": 4,"docs": " Returns index of next character. If exact fit, returned index equals output slice length.\n Assumes there is enough space for the output.\n TODO support codepoints bigger than 16 bits\n","fields": [4901,4902]},{"file": 19,"line": 68,"col": 4,"docs": " Decodes the UTF-8 codepoint encoded in the given slice of bytes.\n bytes.len must be equal to utf8ByteSequenceLength(bytes[0]) catch unreachable.\n If you already know the length at comptime, you can call one of\n utf8Decode2,utf8Decode3,utf8Decode4 directly instead of this function.\n","fields": [4903]},{"file": 45,"line": 539,"col": 4,"fields": [4904]},{"file": 23,"line": 716,"col": 4,"fields": [4905,4906]},{"file": 13,"line": 358,"col": 4,"fields": [4907,4908]},{"file": 28,"line": 429,"col": 8,"fields": [4909]},{"file": 30,"line": 130,"col": 4,"docs": " Caller must free returned memory.\n TODO make this go through libc when we have it\n","fields": [4910,4911]},{"file": 32,"line": 170,"col": 8,"docs": " Test whether the file refers to a terminal.\n See also `supportsAnsiEscapeCodes`.\n","fields": [4912]},{"file": 32,"line": 175,"col": 8,"docs": " Test whether ANSI escape codes will be treated as such.\n","fields": [4913]},{"file": 32,"line": 319,"col": 8,"fields": [4914,4915]},{"file": 45,"line": 611,"col": 4,"fields": [4916,4917]},{"file": 33,"line": 877,"col": 4,"fields": [4918]},{"file": 15,"line": 287,"col": 4,"docs": " Returns the number of bytes that were read, which can be less than\n buf.len. If 0 bytes were read, that means EOF.\n If the application has a global event loop enabled, EAGAIN is handled\n via the event loop. Otherwise EAGAIN results in error.WouldBlock.\n","fields": [4919,4920]},{"file": 14,"line": 314,"col": 4,"fields": [4921,4922,4923]},{"file": 21,"line": 551,"col": 4,"fields": [4924,4925,4926,4927,4928,4929]},{"file": 28,"line": 408,"col": 4,"fields": [4930,4931,4932,4933,4934]},{"file": 28,"line": 388,"col": 4,"fields": [4935,4936,4937]},{"file": 28,"line": 368,"col": 4,"fields": [4938,4939,4940]},{"file": 5,"line": 77,"col": 12,"docs": " Insert a new node at the head.\n\n Arguments:\n     new_node: Pointer to the new node to insert.\n","fields": [4941,4942]},{"file": 28,"line": 419,"col": 4,"fields": [4943,4944,4945,4946,4947]},{"file": 5,"line": 58,"col": 12,"docs": " Initialize a linked list.\n\n Returns:\n     An empty linked list.\n","fields": []},{"file": 45,"line": 597,"col": 4,"fields": [4948,4949,4950,4951]},{"file": 45,"line": 575,"col": 4,"fields": [4952,4953,4954]},{"file": 45,"line": 60,"col": 4,"fields": [4955,4956,4957,4958,4959,4960,4961]},{"file": 45,"line": 251,"col": 4,"fields": [4962]},{"file": 45,"line": 459,"col": 4,"docs": " The SetFilePointerEx function with the `dwMoveMethod` parameter set to `FILE_BEGIN`.\n","fields": [4963,4964]},{"file": 45,"line": 474,"col": 4,"docs": " The SetFilePointerEx function with the `dwMoveMethod` parameter set to `FILE_CURRENT`.\n","fields": [4965,4966]},{"file": 45,"line": 857,"col": 4,"docs": " Call this when you made a windows DLL call or something that does SetLastError\n and you get an unexpected error.\n","fields": [4967]},{"file": 19,"line": 241,"col": 8,"fields": [4968]},{"file": 19,"line": 248,"col": 8,"fields": [4969]},{"file": 19,"line": 8,"col": 4,"docs": " Returns how many bytes the UTF-8 representation would require\n for the given codepoint.\n","fields": [4970]},{"file": 19,"line": 32,"col": 4,"docs": " Encodes the given codepoint into a UTF-8 byte sequence.\n c: the codepoint.\n out: the out buffer to write to. Must have a len >= utf8CodepointSequenceLength(c).\n Errors: if c cannot be encoded in UTF-8.\n Returns: the number of bytes written to out.\n","fields": [4971,4972]},{"file": 19,"line": 82,"col": 4,"fields": [4973]},{"file": 19,"line": 101,"col": 4,"fields": [4974]},{"file": 19,"line": 125,"col": 4,"fields": [4975]},{"file": 28,"line": 455,"col": 4,"fields": [4976,4977,4978,4979,4980]},{"file": 28,"line": 440,"col": 4,"fields": [4981,4982,4983]},{"file": 28,"line": 477,"col": 4,"fields": [4984,4985,4986,4987,4988]},{"file": 19,"line": 546,"col": 4,"docs": " TODO support codepoints bigger than 16 bits\n TODO type for null terminated pointer\n","fields": [4989,4990]},{"file": 19,"line": 178,"col": 8,"fields": [4991]},{"file": 19,"line": 148,"col": 4,"fields": [4992]},{"file": 19,"line": 186,"col": 8,"fields": [4993]},{"file": 19,"line": 202,"col": 8,"fields": [4994]},{"file": 19,"line": 224,"col": 8,"fields": [4995]},{"file": 14,"line": 718,"col": 4,"docs": " Cast an integer to a different integer type. If the value doesn't fit,\n return an error.\n","fields": [4996,4997]},{"file": 45,"line": 634,"col": 4,"fields": [4998,4999,5000]},{"file": 19,"line": 467,"col": 4,"docs": " Caller must free returned memory.\n","fields": [5001,5002]},{"file": 13,"line": 564,"col": 4,"docs": " Asserts that bytes.len >= T.bit_count / 8. Reads the integer starting from index 0\n and ignores extra bytes.\n The bit count of T must be evenly divisible by 8.\n Assumes the endianness of memory is native. This means the function can\n simply pointer cast memory.\n","fields": [5003,5004]},{"file": 4,"line": 184,"col": 12,"docs": " Adjust the list's length to `new_len`. Doesn't initialize\n added items if any.\n","fields": [5005,5006]},{"file": 15,"line": 1512,"col": 4,"docs": " Test whether a file descriptor refers to a terminal.\n","fields": [5007]},{"file": 15,"line": 1533,"col": 4,"fields": [5008]},{"file": 15,"line": 449,"col": 4,"docs": " Write to a file descriptor. Keeps trying if it gets interrupted.\n If the application has a global event loop enabled, EAGAIN is handled\n via the event loop. Otherwise EAGAIN results in error.WouldBlock.\n TODO evented I/O integration is disabled until\n https://github.com/ziglang/zig/issues/3557 is solved.\n","fields": [5009,5010]},{"file": 45,"line": 261,"col": 4,"fields": [5011,5012]},{"file": 45,"line": 851,"col": 0,"fields": [5013,5014]},{"file": 19,"line": 485,"col": 4,"docs": " Asserts that the output buffer is big enough.\n Returns end byte index into utf8.\n","fields": [5015,5016]},{"file": 16,"line": 48,"col": 4,"fields": [5017,5018],"varArgs": true},{"file": 19,"line": 19,"col": 4,"docs": " Given the first byte of a UTF-8 codepoint,\n returns a number 1-4 indicating the total length of the codepoint in bytes.\n If this byte does not match the form of a UTF-8 start byte, returns Utf8InvalidStartByte.\n","fields": [5019]},{"file": 19,"line": 214,"col": 8,"fields": [5020]},{"file": 13,"line": 465,"col": 4,"fields": [5021,5022,5023]},{"file": 45,"line": 288,"col": 4,"docs": " This function is for blocking file descriptors only. For non-blocking, see\n `WriteFileAsync`.\n","fields": [5024,5025]},{"file": 21,"line": 470,"col": 0,"fields": [5026,5027,5028,5029,5030,5031]},{"file": 34,"line": 59,"col": 12,"fields": []},{"file": 35,"line": 58,"col": 8,"fields": []},{"file": 34,"line": 83,"col": 12,"fields": [5032]},{"file": 34,"line": 73,"col": 16,"fields": [5033]},{"file": 13,"line": 483,"col": 4,"fields": [5034,5035,5036,5037]},{"file": 21,"line": 492,"col": 4,"fields": [5038,5039,5040,5041,5042,5043]},{"file": 36,"line": 28,"col": 8,"fields": [5044]},{"file": 15,"line": 3179,"col": 4,"fields": []},{"file": 29,"line": 10,"col": 4,"docs": " Spurious wakeups are possible and no precision of timing is guaranteed.\n","fields": [5045]},{"file": 35,"line": 77,"col": 8,"fields": [5046,5047,5048]},{"file": 35,"line": 63,"col": 8,"fields": [5049,5050]},{"file": 21,"line": 883,"col": 4,"fields": [5051,5052,5053,5054,5055,5056,5057]},{"file": 36,"line": 43,"col": 12,"fields": []},{"file": 35,"line": 95,"col": 4,"fields": []},{"file": 36,"line": 49,"col": 12,"docs": " Modified hybrid yielding from\n http://www.1024cores.net/home/lock-free-algorithms/tricks/spinning\n","fields": [5058]},{"file": 21,"line": 936,"col": 0,"fields": [5059,5060,5061,5062,5063,5064,5065]},{"file": 6,"line": 32,"col": 12,"docs": " Returns a usable pointer to the initialized data,\n or returns null, indicating that the caller should\n perform the initialization and then call resolve().\n","fields": [5066]},{"file": 6,"line": 53,"col": 12,"fields": [5067]},{"file": 21,"line": 1087,"col": 0,"fields": [5068,5069]},{"file": 13,"line": 275,"col": 4,"fields": [5070,5071,5072]},{"file": 21,"line": 905,"col": 0,"fields": [5073,5074,5075,5076,5077,5078,5079]},{"file": 10,"line": 522,"col": 8,"fields": [5080]},{"file": 10,"line": 530,"col": 8,"fields": [5081,5082]},{"file": 10,"line": 536,"col": 4,"fields": [5083]},{"file": 10,"line": 538,"col": 8,"fields": [5084]},{"file": 37,"line": 136,"col": 8,"fields": [5085]},{"file": 46,"line": 166,"col": 4,"docs": " Provides generic hashing for any eligible type.\n Only hashes `key` itself, pointers are not followed.\n Slices are rejected to avoid ambiguity on the user's intention.\n","fields": [5086,5087]},{"file": 37,"line": 162,"col": 8,"fields": [5088]},{"file": 37,"line": 41,"col": 8,"fields": [5089]},{"file": 46,"line": 75,"col": 4,"docs": " Provides generic hashing for any eligible type.\n Strategy is provided to determine if pointers should be followed or not.\n","fields": [5090,5091,5092]},{"file": 37,"line": 73,"col": 8,"fields": [5093,5094]},{"file": 37,"line": 144,"col": 8,"fields": [5095,5096]},{"file": 13,"line": 1349,"col": 4,"docs": "Given a pointer to a single item, returns a slice of the underlying bytes, preserving constness.\n","fields": [5097]},{"file": 37,"line": 26,"col": 0,"fields": [5098,5099,5100]},{"file": 37,"line": 11,"col": 0,"fields": [5101,5102]},{"file": 37,"line": 16,"col": 0,"fields": [5103]},{"file": 37,"line": 30,"col": 0,"fields": [5104,5105,5106]},{"file": 37,"line": 20,"col": 0,"fields": [5107,5108]},{"file": 37,"line": 62,"col": 8,"fields": [5109,5110]},{"file": 14,"line": 944,"col": 4,"fields": [5111,5112,5113]},{"file": 37,"line": 48,"col": 4,"fields": [5114,5115]},{"file": 53,"line": 108,"col": 0,"fields": []},{"file": 16,"line": 2361,"col": 4,"fields": []},{"file": 53,"line": 191,"col": 0,"fields": []},{"file": 16,"line": 2370,"col": 4,"docs": " Attaches a global SIGSEGV handler which calls @panic(\"segmentation fault\");\n","fields": []},{"file": 53,"line": 225,"col": 0,"fields": []},{"file": 16,"line": 2441,"col": 0,"fields": [5116]},{"file": 3,"line": 5,"col": 4,"fields": []},{"file": 38,"line": 99,"col": 8,"docs": " Create a new progress node.\n Call `Node.end` when done.\n TODO solve https://github.com/ziglang/zig/issues/2765 and then change this\n API to return Progress rather than accept it as a parameter.\n","fields": [5117,5118,5119]},{"file": 29,"line": 125,"col": 8,"docs": " Initialize the timer structure.\n","fields": []},{"file": 38,"line": 57,"col": 12,"docs": " Create a new child progress node.\n Call `Node.end` when done.\n TODO solve https://github.com/ziglang/zig/issues/2765 and then change this\n API to set `self.parent.recently_updated_child` with the return value.\n Until that is fixed you probably want to call `activate` on the return value.\n","fields": [5120,5121,5122]},{"file": 38,"line": 90,"col": 12,"docs": " Tell the parent node that this node is actively being worked on.\n","fields": [5123]},{"file": 38,"line": 125,"col": 8,"docs": " Updates the terminal and resets `self.next_refresh_timestamp`.\n","fields": [5124]},{"file": 38,"line": 74,"col": 12,"fields": [5125]},{"file": 38,"line": 176,"col": 8,"fields": [5126,5127,5128],"varArgs": true},{"file": 45,"line": 707,"col": 4,"fields": []},{"file": 45,"line": 716,"col": 4,"fields": []},{"file": 21,"line": 1112,"col": 4,"fields": [5129,5130,5131],"varArgs": true},{"file": 38,"line": 186,"col": 4,"fields": [5132,5133,5134,5135],"varArgs": true},{"file": 29,"line": 154,"col": 8,"docs": " Reads the timer value since start or the last reset in nanoseconds\n","fields": [5136]},{"file": 38,"line": 117,"col": 8,"docs": " Updates the terminal if enough time has passed since last update.\n","fields": [5137]},{"file": 38,"line": 68,"col": 12,"docs": " This is the same as calling `start` and then `end` on the returned `Node`.\n","fields": [5138]},{"file": 21,"line": 1099,"col": 0,"fields": [5139,5140]},{"file": 29,"line": 178,"col": 4,"fields": []},{"file": 4,"line": 11,"col": 4,"docs": " List of items.\n\n This is a wrapper around an array of T values. Initialize with\n `init`.\n","fields": [5141]},{"file": 5,"line": 14,"col": 4,"docs": " A singly-linked list is headed by a single forward pointer. The elements\n are singly linked for minimum space and pointer manipulation overhead at\n the expense of O(n) removal for arbitrary elements. New elements can be\n added to the list after an existing element or at the head of the list.\n A singly-linked list may only be traversed in the forward direction.\n Singly-linked lists are ideal for applications with large datasets and\n few or no removals or for implementing a LIFO queue.\n","fields": [5142]},{"file": 14,"line": 236,"col": 4,"docs": " Given two types, returns the smallest one which is capable of holding the\n full range of the minimum value.\n","fields": [5143,5144]},{"file": 41,"line": 261,"col": 4,"docs": "\n","fields": [5145]},{"file": 41,"line": 118,"col": 12,"fields": [5146]},{"file": 6,"line": 12,"col": 0,"fields": [5147]},{"file": 4,"line": 15,"col": 4,"fields": [5148,5149]},{"file": 14,"line": 306,"col": 4,"fields": [5150,5151]},{"file": 41,"line": 322,"col": 4,"docs": "\n","fields": [5152]},{"file": 41,"line": 116,"col": 4,"docs": "\n","fields": [5153]},{"file": 8,"line": 9,"col": 4,"docs": " Many producer, many consumer, non-allocating, thread-safe.\n Uses a mutex to protect access.\n","fields": [5154]},{"file": 9,"line": 8,"col": 4,"docs": " Many reader, many writer, non-allocating, thread-safe\n Uses a spinlock to protect push() and pop()\n When building in single threaded mode, this is a simple linked list.\n","fields": [5155]},{"file": 10,"line": 32,"col": 4,"fields": [5156,5157,5158,5159]},{"file": 10,"line": 520,"col": 4,"fields": [5160]},{"file": 41,"line": 228,"col": 4,"docs": "\n","fields": [5161]},{"file": 26,"line": 102,"col": 4,"fields": [5162]},{"file": 14,"line": 891,"col": 4,"fields": [5163]},{"file": 14,"line": 884,"col": 4,"fields": [5164]},{"file": 26,"line": 88,"col": 4,"fields": [5165]},{"file": 11,"line": 14,"col": 4,"fields": [5166]},{"file": 5,"line": 192,"col": 4,"docs": " A tail queue is headed by a pair of pointers, one to the head of the\n list and the other to the tail of the list. The elements are doubly\n linked so that an arbitrary element can be removed without a need to\n traverse the list. New elements can be added to the list before or\n after an existing element, at the head of the list, or at the end of\n the list. A tail queue may be traversed in either direction.\n","fields": [5167]},{"file": 0,"line": 59,"col": 4,"docs": " Creates a specific Sparse Set type based on the config.\n","fields": [5168]},{"file": 12,"line": 13,"col": 4,"docs": " TODO this is not integrated with evented I/O yet.\n https://github.com/ziglang/zig/issues/3557\n","fields": [5169]},{"file": 10,"line": 528,"col": 4,"fields": [5170]},{"file": 13,"line": 1330,"col": 0,"fields": [5171]},{"file": 4,"line": 21,"col": 11,"fields": [5172,5173,5174]},{"file": 24,"line": 256,"col": 20,"fields": [5175]},{"file": 16,"line": 29,"col": 15,"fields": [5176,5177,5178,5179,5180,5181,5182]},{"file": 23,"line": 39,"col": 32,"fields": [5183,5184,5185,5186,5187,5188,5189,5190,5191]},{"file": 5,"line": 15,"col": 11,"fields": [5192]},{"file": 6,"line": 13,"col": 11,"fields": [5193,5194]},{"file": 7,"line": 96,"col": 21,"fields": [5195,5196,5197,5198,5199,5200,5201,5202,5203,5204,5205,5206,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,5217,5218,5219,5220]},{"file": 8,"line": 10,"col": 11,"fields": [5221,5222,5223]},{"file": 9,"line": 9,"col": 11,"fields": [5224,5225]},{"file": 39,"line": 59,"col": 24,"fields": [5226,5227]},{"file": 10,"line": 33,"col": 11,"fields": [5228,5229,5230,5231,5232]},{"file": 16,"line": 1220,"col": 18,"fields": [5233,5234,5235]},{"file": 11,"line": 15,"col": 11,"fields": [5236]},{"file": 5,"line": 193,"col": 11,"fields": [5237,5238,5239]},{"file": 0,"line": 68,"col": 11,"fields": [5240,5241,5242,5243,5244,5245,5246]},{"file": 0,"line": 34,"col": 28,"fields": [5247,5248,5249,5250,5251,5252]},{"file": 12,"line": 14,"col": 11,"fields": [5253]},{"file": 0,"line": 0,"col": 0,"docs": " Sparse Set\n Version 1.0.1\n See https://github.com/Srekel/zig-sparse-set for latest version and documentation.\n See unit tests for usage examples.\n\n Dual license: Unlicense / MIT\n","fields": []},{"file": 1,"line": 0,"col": 0,"fields": []},{"file": 2,"line": 0,"col": 0,"fields": []},{"file": 3,"line": 0,"col": 0,"fields": []},{"file": 28,"line": 588,"col": 19,"fields": [5254,5255,5256]},{"file": 7,"line": 44,"col": 23,"fields": [5257,5258]},{"file": 32,"line": 11,"col": 17,"fields": [5259]},{"file": 32,"line": 372,"col": 26,"fields": [5260,5261]},{"file": 24,"line": 32,"col": 17,"fields": [5262,5263,5264,5265,5266,5267,5268]},{"file": 32,"line": 358,"col": 25,"fields": [5269,5270]},{"file": 33,"line": 217,"col": 24,"fields": [5271,5272,5273]},{"file": 33,"line": 222,"col": 21,"fields": [5274,5275,5276]},{"file": 13,"line": 910,"col": 26,"fields": [5277,5278,5279]},{"file": 23,"line": 627,"col": 18,"fields": [5280,5281,5282,5283,5284]},{"file": 23,"line": 102,"col": 23,"fields": [5285,5286,5287,5288]},{"file": 16,"line": 558,"col": 17,"fields": [5289,5290,5291,5292,5293,5294,5295]},{"file": 16,"line": 1405,"col": 21,"fields": [5296,5297,5298,5299]},{"file": 21,"line": 18,"col": 26,"fields": [5300,5301,5302,5303]},{"file": 28,"line": 337,"col": 27,"fields": [5304,5305,5306,5307]},{"file": 28,"line": 424,"col": 33,"fields": [5308,5309,5310]},{"file": 19,"line": 237,"col": 28,"fields": [5311,5312]},{"file": 19,"line": 175,"col": 21,"fields": [5313]},{"file": 19,"line": 210,"col": 25,"fields": [5314,5315]},{"file": 34,"line": 40,"col": 4,"fields": [5316,5317]},{"file": 35,"line": 55,"col": 22,"fields": [5318]},{"file": 34,"line": 70,"col": 25,"fields": [5319]},{"file": 36,"line": 40,"col": 24,"fields": [5320]},{"file": 37,"line": 130,"col": 19,"fields": [5321,5322,5323]},{"file": 37,"line": 37,"col": 24,"fields": [5324,5325]},{"file": 38,"line": 42,"col": 21,"fields": [5326,5327,5328,5329,5330,5331]},{"file": 4,"line": 0,"col": 0,"fields": []},{"file": 24,"line": 260,"col": 22,"fields": [5332,5333,5334,5335,5336,5337,5338,5339,5340,5341]},{"file": 23,"line": 52,"col": 20,"fields": [5342,5343,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353]},{"file": 5,"line": 0,"col": 0,"fields": []},{"file": 5,"line": 19,"col": 25,"fields": [5354,5355]},{"file": 6,"line": 0,"col": 0,"fields": []},{"file": 6,"line": 17,"col": 22,"fields": [5356,5357,5358]},{"file": 7,"line": 0,"col": 0,"fields": []},{"file": 7,"line": 182,"col": 23,"fields": [5359,5360,5361]},{"file": 7,"line": 159,"col": 22,"fields": [5362,5363]},{"file": 7,"line": 196,"col": 27,"fields": [5364,5365]},{"file": 7,"line": 139,"col": 24,"fields": [5366,5367,5368,5369,5370,5371]},{"file": 7,"line": 214,"col": 26,"fields": [5372,5373]},{"file": 7,"line": 166,"col": 32,"fields": [5374,5375,5376]},{"file": 7,"line": 289,"col": 28,"fields": [5377,5378,5379]},{"file": 7,"line": 238,"col": 22,"fields": [5380,5381,5382,5383]},{"file": 7,"line": 190,"col": 25,"fields": [5384]},{"file": 7,"line": 221,"col": 21,"fields": [5385,5386,5387,5388]},{"file": 7,"line": 247,"col": 34,"fields": [5389,5390,5391,5392,5393,5394]},{"file": 7,"line": 282,"col": 23,"fields": [5395,5396]},{"file": 7,"line": 133,"col": 22,"fields": [5397]},{"file": 7,"line": 230,"col": 27,"fields": [5398,5399,5400]},{"file": 7,"line": 174,"col": 28,"fields": [5401,5402,5403]},{"file": 7,"line": 276,"col": 25,"fields": [5404]},{"file": 7,"line": 203,"col": 22,"fields": [5405,5406]},{"file": 7,"line": 266,"col": 19,"fields": [5407,5408,5409,5410,5411]},{"file": 7,"line": 258,"col": 22,"fields": [5412,5413,5414]},{"file": 7,"line": 126,"col": 20,"fields": [5415,5416]},{"file": 8,"line": 0,"col": 0,"fields": []},{"file": 5,"line": 197,"col": 25,"fields": [5417,5418,5419]},{"file": 9,"line": 0,"col": 0,"fields": []},{"file": 9,"line": 17,"col": 25,"fields": [5420,5421]},{"file": 39,"line": 29,"col": 27,"fields": [5422,5423,5424]},{"file": 10,"line": 0,"col": 0,"fields": []},{"file": 10,"line": 44,"col": 23,"fields": [5425,5426]},{"file": 10,"line": 49,"col": 22,"fields": [5427,5428,5429]},{"file": 31,"line": 251,"col": 21,"fields": [5430,5431,5432,5433,5434]},{"file": 11,"line": 0,"col": 0,"fields": []},{"file": 0,"line": 18,"col": 24,"fields": [5435,5436]},{"file": 0,"line": 26,"col": 32,"fields": [5437,5438]},{"file": 0,"line": 10,"col": 24,"fields": [5439,5440]},{"file": 12,"line": 0,"col": 0,"fields": []},{"file": 13,"line": 15,"col": 22,"fields": [5441,5442]},{"file": 7,"line": 71,"col": 24,"fields": [5443,5444,5445,5446,5447,5448,5449,5450,5451]},{"file": 40,"line": 51,"col": 21,"fields": [5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488,5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501]},{"file": 7,"line": 335,"col": 19,"fields": [5502,5503]},{"file": 7,"line": 85,"col": 17,"fields": [5504,5505,5506,5507]},{"file": 40,"line": 11,"col": 19,"fields": [5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544]},{"file": 7,"line": 60,"col": 24,"fields": [5545,5546,5547,5548,5549,5550]},{"file": 7,"line": 51,"col": 26,"fields": [5551,5552,5553,5554]},{"file": 1,"line": 17,"col": 15,"fields": [5555,5556]},{"file": 13,"line": 0,"col": 0,"fields": []},{"file": 14,"line": 0,"col": 0,"fields": []},{"file": 42,"line": 8,"col": 19,"fields": [5557]},{"file": 15,"line": 16,"col": 0,"fields": []},{"file": 16,"line": 0,"col": 0,"fields": []},{"file": 17,"line": 0,"col": 0,"fields": []},{"file": 18,"line": 0,"col": 0,"fields": []},{"file": 19,"line": 0,"col": 0,"fields": []},{"file": 20,"line": 0,"col": 0,"fields": []},{"file": 21,"line": 0,"col": 0,"fields": []},{"file": 22,"line": 0,"col": 0,"fields": []},{"file": 23,"line": 0,"col": 0,"fields": []},{"file": 24,"line": 0,"col": 0,"fields": []},{"file": 25,"line": 0,"col": 0,"fields": []},{"file": 26,"line": 0,"col": 0,"fields": []},{"file": 27,"line": 0,"col": 0,"fields": []},{"file": 28,"line": 0,"col": 0,"fields": []},{"file": 29,"line": 0,"col": 0,"fields": []},{"file": 38,"line": 9,"col": 21,"fields": [5558,5559,5560,5561,5562,5563,5564,5565,5566]},{"file": 40,"line": 7,"col": 19,"fields": [5567,5568]},{"file": 36,"line": 6,"col": 21,"fields": [5569]},{"file": 30,"line": 0,"col": 0,"fields": []},{"file": 31,"line": 0,"col": 0,"fields": []},{"file": 32,"line": 0,"col": 0,"fields": []},{"file": 16,"line": 1273,"col": 23,"fields": [5570,5571,5572,5573]},{"file": 24,"line": 225,"col": 19,"fields": [5574,5575,5576,5577,5578,5579,5580]},{"file": 24,"line": 235,"col": 23,"fields": [5581,5582]},{"file": 24,"line": 245,"col": 28,"fields": [5583,5584,5585,5586,5587,5588,5589,5590]},{"file": 33,"line": 0,"col": 0,"fields": []},{"file": 23,"line": 461,"col": 16,"fields": [5591,5592,5593,5594,5595,5596]},{"file": 23,"line": 491,"col": 12,"fields": [5597,5598]},{"file": 23,"line": 581,"col": 19,"fields": [5599,5600,5601,5602,5603,5604,5605]},{"file": 16,"line": 889,"col": 32,"fields": [5606,5607]},{"file": 23,"line": 16,"col": 28,"fields": [5608,5609,5610,5611,5612,5613,5614,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627]},{"file": 47,"line": 782,"col": 16,"fields": [5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646]},{"file": 34,"line": 0,"col": 0,"fields": []},{"file": 34,"line": 44,"col": 22,"fields": [5647,5648,5649]},{"file": 35,"line": 0,"col": 0,"fields": []},{"file": 36,"line": 0,"col": 0,"fields": []},{"file": 37,"line": 0,"col": 0,"fields": []},{"file": 47,"line": 751,"col": 31,"fields": [5650,5651]},{"file": 29,"line": 99,"col": 18,"fields": [5652,5653,5654]},{"file": 38,"line": 0,"col": 0,"fields": []},{"file": 21,"line": 1095,"col": 24,"fields": [5655]},{"file": 24,"line": 261,"col": 17,"fields": [5656,5657]},{"file": 3,"line": 0,"col": 0,"fields": []},{"file": 7,"line": 149,"col": 25,"fields": [5658,5659,5660,5661]},{"file": 7,"line": 296,"col": 25,"fields": [5662,5663,5664]},{"file": 39,"line": 0,"col": 0,"fields": []},{"file": 39,"line": 46,"col": 23,"fields": [5665,5666,5667]},{"file": 47,"line": 214,"col": 23,"fields": [5668,5669,5670,5671,5672]},{"file": 40,"line": 0,"col": 0,"fields": []},{"file": 40,"line": 103,"col": 26,"fields": [5673,5674,5675,5676,5677,5678,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695]},{"file": 40,"line": 139,"col": 28,"fields": [5696,5697,5698]},{"file": 40,"line": 128,"col": 26,"fields": [5699,5700,5701,5702,5703,5704,5705,5706,5707]},{"file": 41,"line": 0,"col": 0,"fields": []},{"file": 42,"line": 0,"col": 0,"fields": []},{"file": 42,"line": 42,"col": 20,"fields": [5708,5709,5710]},{"file": 43,"line": 2,"col": 0,"fields": []},{"file": 44,"line": 3,"col": 0,"fields": []},{"file": 45,"line": 6,"col": 0,"fields": []},{"file": 16,"line": 1205,"col": 20,"fields": [5711,5712,5713]},{"file": 39,"line": 14,"col": 17,"fields": [5714,5715,5716,5717,5718,5719,5720,5721]},{"file": 20,"line": 18,"col": 17,"fields": [5722,5723]},{"file": 21,"line": 12,"col": 22,"fields": [5724,5725,5726]},{"file": 23,"line": 422,"col": 32,"fields": [5727,5728,5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740]},{"file": 23,"line": 355,"col": 31,"fields": [5741,5742,5743,5744]},{"file": 23,"line": 377,"col": 36,"fields": [5745,5746,5747]},{"file": 23,"line": 450,"col": 33,"fields": [5748,5749,5750]},{"file": 23,"line": 405,"col": 30,"fields": [5751,5752]},{"file": 23,"line": 389,"col": 28,"fields": [5753,5754]},{"file": 23,"line": 442,"col": 34,"fields": [5755,5756]},{"file": 23,"line": 327,"col": 25,"fields": [5757,5758,5759,5760,5761,5762,5763,5764]},{"file": 23,"line": 343,"col": 25,"fields": [5765,5766]},{"file": 23,"line": 111,"col": 23,"fields": [5767,5768,5769,5770,5771,5772,5773,5774,5775,5776,5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,5801,5802,5803,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5958,5959,5960,5961,5962]},{"file": 23,"line": 312,"col": 20,"fields": [5963,5964,5965,5966,5967,5968,5969,5970,5971,5972]},{"file": 23,"line": 411,"col": 36,"fields": [5973,5974,5975]},{"file": 23,"line": 338,"col": 41,"fields": [5976,5977]},{"file": 23,"line": 367,"col": 22,"fields": [5978,5979]},{"file": 46,"line": 0,"col": 0,"fields": []},{"file": 28,"line": 41,"col": 24,"fields": []},{"file": 40,"line": 149,"col": 20,"fields": [5980,5981,5982,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000,6001]},{"file": 40,"line": 193,"col": 22,"fields": [6002,6003,6004]},{"file": 31,"line": 205,"col": 23,"fields": [6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016]},{"file": 31,"line": 10,"col": 27,"fields": [6017,6018,6019,6020,6021,6022,6023,6024]},{"file": 24,"line": 236,"col": 26,"fields": [6025,6026]},{"file": 16,"line": 909,"col": 23,"fields": [6027,6028]},{"file": 47,"line": 285,"col": 32,"fields": [6029,6030,6031]},{"file": 7,"line": 303,"col": 31,"fields": [6032,6033,6034,6035,6036,6037,6038,6039,6040]},{"file": 47,"line": 2,"col": 0,"fields": []},{"file": 47,"line": 841,"col": 36,"fields": [6041,6042,6043,6044]},{"file": 48,"line": 0,"col": 0,"fields": []},{"file": 47,"line": 804,"col": 25,"fields": [6045,6046,6047]},{"file": 49,"line": 0,"col": 0,"fields": []},{"file": 47,"line": 742,"col": 29,"fields": [6048,6049,6050,6051,6052,6053]},{"file": 47,"line": 776,"col": 27,"fields": [6054,6055,6056]},{"file": 47,"line": 603,"col": 18,"fields": [6057,6058]},{"file": 50,"line": 0,"col": 0,"fields": []},{"file": 47,"line": 674,"col": 23,"fields": [6059,6060]},{"file": 47,"line": 870,"col": 19,"fields": [6061,6062]},{"file": 47,"line": 810,"col": 40,"fields": [6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090]},{"file": 47,"line": 661,"col": 39,"fields": [6091,6092,6093,6094,6095]},{"file": 47,"line": 262,"col": 27,"fields": [6096,6097]},{"file": 47,"line": 596,"col": 23,"fields": [6098,6099,6100,6101]},{"file": 51,"line": 0,"col": 0,"fields": []},{"file": 52,"line": 0,"col": 0,"fields": []},{"file": 39,"line": 898,"col": 20,"fields": [6102,6103]},{"file": 23,"line": 395,"col": 22,"fields": [6104,6105,6106]},{"file": 46,"line": 7,"col": 25,"fields": [6107,6108,6109]},{"file": 7,"line": 316,"col": 35,"fields": [6110,6111,6112]},{"file": 4,"line": 73,"col": 12,"docs": " Sets the value at index `i`, asserting that the value is in range.\n","fields": [6113,6114,6115]},{"file": 4,"line": 67,"col": 12,"docs": " Sets the value at index `i`, or returns `error.OutOfBounds` if\n the index is not in range.\n","fields": [6116,6117,6118]},{"file": 4,"line": 137,"col": 12,"docs": " Extend the list by 1 element, but asserting `self.capacity`\n is sufficient to hold an additional item.\n","fields": [6119,6120]},{"file": 4,"line": 169,"col": 12,"docs": " Removes the element at the specified index and returns it\n or an error.OutOfBounds is returned. If no error then\n the empty slot is filled from the end of the list.\n","fields": [6121,6122]},{"file": 4,"line": 61,"col": 12,"docs": " Safely access index i of the list. \n","fields": [6123,6124]},{"file": 4,"line": 157,"col": 12,"docs": " Removes the element at the specified index and returns it.\n The empty slot is filled from the end of the list.\n","fields": [6125,6126]},{"file": 4,"line": 253,"col": 12,"docs": " Return an iterator over the list.\n","fields": [6127]},{"file": 4,"line": 224,"col": 12,"docs": " Remove and return the last element from the list. Asserts\n the list has at least one item.\n","fields": [6128]},{"file": 4,"line": 56,"col": 12,"docs": " Return list as const slice. Only valid while the list\n doesn't change size.\n","fields": [6129]},{"file": 4,"line": 176,"col": 12,"docs": " Append the slice of items to the list. Allocates more\n memory as necessary.\n","fields": [6130,6131]},{"file": 4,"line": 120,"col": 12,"docs": " Insert slice `items` at index `n`. Moves\n `list[n .. list.count()]` to make room.\n","fields": [6132,6133,6134]},{"file": 4,"line": 92,"col": 12,"docs": " ArrayList takes ownership of the passed in slice. The slice must have been\n allocated with `allocator`.\n Deinitialize with `deinit` or use `toOwnedSlice`.\n","fields": [6135,6136]},{"file": 4,"line": 32,"col": 12},{"file": 4,"line": 44,"col": 12,"docs": " Release all allocated memory.\n","fields": [6137]},{"file": 4,"line": 110,"col": 12,"docs": " Insert `item` at index `n`. Moves `list[n .. list.count()]`\n to make room.\n","fields": [6138,6139,6140]},{"file": 4,"line": 235,"col": 12},{"file": 4,"line": 190,"col": 12,"docs": " Reduce allocated capacity to `new_len`.\n","fields": [6141,6142]},{"file": 4,"line": 31,"col": 12},{"file": 4,"line": 144,"col": 12,"docs": " Remove the element at index `i` from the list and return\n its value. Asserts the array has at least one item.\n","fields": [6143,6144]},{"file": 4,"line": 230,"col": 12,"docs": " Like `pop` but returns `null` if empty.\n","fields": [6145]},{"file": 4,"line": 22,"col": 8},{"file": 5,"line": 136,"col": 12,"docs": " Allocate and initialize a node and its data.\n\n Arguments:\n     data: The data to put inside the node.\n     allocator: Dynamic memory allocator.\n\n Returns:\n     A pointer to the new node.\n","fields": [6146,6147,6148]},{"file": 5,"line": 19,"col": 12,"docs": " Node inside the linked list wrapping the actual data.\n"},{"file": 5,"line": 124,"col": 12,"docs": " Deallocate a node.\n\n Arguments:\n     node: Pointer to the node to deallocate.\n     allocator: Dynamic memory allocator.\n","fields": [6149,6150,6151]},{"file": 5,"line": 69,"col": 12,"docs": " Insert a new node after an existing one.\n\n Arguments:\n     node: Pointer to a node in the list.\n     new_node: Pointer to the new node to insert.\n","fields": [6152,6153,6154]},{"file": 5,"line": 86,"col": 12,"docs": " Remove a node from the list.\n\n Arguments:\n     node: Pointer to the node to be removed.\n","fields": [6155,6156]},{"file": 5,"line": 115,"col": 12,"docs": " Allocate a new node.\n\n Arguments:\n     allocator: Dynamic memory allocator.\n\n Returns:\n     A pointer to the new node.\n","fields": [6157,6158]},{"file": 5,"line": 102,"col": 12,"docs": " Remove and return the first node in the list.\n\n Returns:\n     A pointer to the first node in the list.\n","fields": [6159]},{"file": 5,"line": 16,"col": 8},{"file": 6,"line": 26,"col": 8},{"file": 6,"line": 17,"col": 8},{"file": 6,"line": 23,"col": 8},{"file": 6,"line": 27,"col": 8},{"file": 7,"line": 182,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 159,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 196,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 139,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 214,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 166,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 289,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 238,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 210,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 190,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 221,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 247,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 282,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 133,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 230,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 174,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 276,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 203,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 266,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 258,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 126,"col": 8,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 8,"line": 105,"col": 12,"fields": [6160]},{"file": 8,"line": 113,"col": 12,"fields": [6161,6162,6163]},{"file": 8,"line": 16,"col": 12},{"file": 8,"line": 26,"col": 12,"fields": [6164,6165]},{"file": 8,"line": 18,"col": 12,"fields": []},{"file": 8,"line": 59,"col": 12,"fields": [6166,6167]},{"file": 8,"line": 42,"col": 12,"fields": [6168]},{"file": 8,"line": 15,"col": 12},{"file": 8,"line": 76,"col": 12,"docs": " Thread-safe with get() and remove(). Returns whether node was actually removed.\n","fields": [6169,6170]},{"file": 8,"line": 99,"col": 12,"fields": [6171]},{"file": 9,"line": 49,"col": 12,"fields": [6172]},{"file": 9,"line": 22,"col": 12,"fields": []},{"file": 9,"line": 15,"col": 12},{"file": 9,"line": 31,"col": 12,"docs": " push operation, but only if you are the first item in the stack. if you did not succeed in\n being the first item in the stack, returns the other item that was there.\n","fields": [6173,6174]},{"file": 9,"line": 17,"col": 12},{"file": 9,"line": 36,"col": 12,"fields": [6175,6176]},{"file": 9,"line": 64,"col": 12,"fields": [6177]},{"file": 9,"line": 13,"col": 8},{"file": 10,"line": 279,"col": 12,"fields": [6178]},{"file": 10,"line": 165,"col": 12,"docs": " Increases capacity so that the hash map will be at most\n 60% full when expected_count items are put into it\n","fields": [6179,6180]},{"file": 10,"line": 127,"col": 12,"docs": " If key exists this function cannot fail.\n If there is an existing item with `key`, then the result\n kv pointer points to it, and found_existing is true.\n Otherwise, puts a new item with undefined value, and\n the kv pointer points to it. Caller should then initialize\n the data.\n","fields": [6181,6182]},{"file": 10,"line": 203,"col": 12,"docs": " Calls put() and asserts that no kv pair is clobbered.\n","fields": [6183,6184,6185]},{"file": 10,"line": 270,"col": 12,"fields": [6186]},{"file": 10,"line": 44,"col": 12},{"file": 10,"line": 216,"col": 12,"fields": [6187,6188]},{"file": 10,"line": 55,"col": 12},{"file": 10,"line": 108,"col": 12,"fields": [6189]},{"file": 10,"line": 207,"col": 12,"fields": [6190,6191,6192]},{"file": 10,"line": 104,"col": 12,"fields": [6193]},{"file": 10,"line": 146,"col": 12,"fields": [6194,6195,6196]},{"file": 10,"line": 223,"col": 12,"fields": [6197,6198]},{"file": 10,"line": 197,"col": 12,"docs": " Returns the kv pair that was already there.\n","fields": [6199,6200,6201]},{"file": 10,"line": 60,"col": 12},{"file": 10,"line": 94,"col": 12,"fields": [6202]},{"file": 10,"line": 117,"col": 12,"fields": [6203]},{"file": 10,"line": 227,"col": 12,"fields": [6204,6205]},{"file": 10,"line": 232,"col": 12,"docs": " Returns any kv pair that was removed.\n","fields": [6206,6207]},{"file": 10,"line": 266,"col": 12,"docs": " Calls remove(), asserts that a kv pair is removed, and discards it.\n","fields": [6208,6209]},{"file": 10,"line": 154,"col": 8,"fields": [6210]},{"file": 10,"line": 299,"col": 8,"fields": [6211,6212]},{"file": 10,"line": 403,"col": 8,"fields": [6213,6214]},{"file": 10,"line": 42,"col": 8},{"file": 10,"line": 289,"col": 8,"fields": [6215]},{"file": 10,"line": 308,"col": 8,"fields": [6216]},{"file": 10,"line": 407,"col": 8,"fields": [6217,6218]},{"file": 10,"line": 314,"col": 8},{"file": 10,"line": 321,"col": 8,"docs": " Returns a pointer to the new entry.\n Asserts that there is enough space for the new item.\n","fields": [6219,6220]},{"file": 10,"line": 49,"col": 8},{"file": 10,"line": 173,"col": 8,"docs": " Sets the capacity to the new capacity if the new\n capacity is greater than the current capacity.\n New capacity must be a power of two.\n","fields": [6221,6222]},{"file": 10,"line": 388,"col": 8,"fields": [6223,6224]},{"file": 11,"line": 204,"col": 12,"fields": [6225,6226]},{"file": 11,"line": 224,"col": 12,"fields": [6227,6228]},{"file": 11,"line": 89,"col": 12,"docs": " Allocates enough memory to hold all the contents of the stream. If the allocated\n memory would be greater than `max_size`, returns `error.StreamTooLong`.\n Caller owns returned memory.\n If this function returns an error, the contents from the stream read so far are lost.\n","fields": [6229,6230,6231]},{"file": 11,"line": 101,"col": 12,"docs": " Replaces `buffer` contents by reading from the stream until `delimiter` is found.\n Does not include the delimiter in the result.\n If `buffer.len()` would exceed `max_size`, `error.StreamTooLong` is returned and the contents\n read from the stream so far are lost.\n","fields": [6232,6233,6234,6235]},{"file": 11,"line": 192,"col": 12,"docs": " Reads a foreign-endian integer\n","fields": [6236,6237]},{"file": 11,"line": 18,"col": 12},{"file": 11,"line": 185,"col": 12,"docs": " Reads a native-endian integer\n","fields": [6238,6239]},{"file": 11,"line": 180,"col": 12,"docs": " Same as `readByte` except the returned byte is signed.\n","fields": [6240]},{"file": 11,"line": 216,"col": 12,"fields": [6241,6242,6243,6244]},{"file": 11,"line": 162,"col": 12,"docs": " Reads from the stream until specified byte is found, discarding all data,\n including the delimiter.\n If end-of-stream is found, this function succeeds.\n","fields": [6245,6246]},{"file": 11,"line": 17,"col": 12},{"file": 11,"line": 137,"col": 12,"docs": " Reads from the stream until specified byte is found. If the buffer is not\n large enough to hold the entire contents, `error.StreamTooLong` is returned.\n If end-of-stream is found, returns the rest of the stream. If this\n function is called again after that, returns null.\n Returns a slice of the stream data, with ptr equal to `buf.ptr`. The\n delimiter byte is not included in the returned slice.\n","fields": [6247,6248,6249]},{"file": 11,"line": 123,"col": 12,"docs": " Allocates enough memory to read until `delimiter`. If the allocated\n memory would be greater than `max_size`, returns `error.StreamTooLong`.\n Caller owns returned memory.\n If this function returns an error, the contents from the stream read so far are lost.\n","fields": [6250,6251,6252,6253]},{"file": 11,"line": 65,"col": 12,"docs": " Replaces `buffer` contents by reading from the stream until it is finished.\n If `buffer.len()` would exceed `max_size`, `error.StreamTooLong` is returned and\n the contents read from the stream are lost.\n","fields": [6254,6255,6256]},{"file": 11,"line": 210,"col": 12,"fields": [6257,6258,6259]},{"file": 11,"line": 16,"col": 8},{"file": 5,"line": 295,"col": 12,"docs": " Insert a new node at the end of the list.\n\n Arguments:\n     new_node: Pointer to the new node to insert.\n","fields": [6260,6261]},{"file": 5,"line": 397,"col": 12,"docs": " Allocate and initialize a node and its data.\n\n Arguments:\n     data: The data to put inside the node.\n     allocator: Dynamic memory allocator.\n\n Returns:\n     A pointer to the new node.\n","fields": [6262,6263,6264]},{"file": 5,"line": 197,"col": 12,"docs": " Node inside the linked list wrapping the actual data.\n"},{"file": 5,"line": 385,"col": 12,"docs": " Deallocate a node.\n\n Arguments:\n     node: Pointer to the node to deallocate.\n     allocator: Dynamic memory allocator.\n","fields": [6265,6266,6267]},{"file": 5,"line": 309,"col": 12,"docs": " Insert a new node at the beginning of the list.\n\n Arguments:\n     new_node: Pointer to the new node to insert.\n","fields": [6268,6269]},{"file": 5,"line": 353,"col": 12,"docs": " Remove and return the last node in the list.\n\n Returns:\n     A pointer to the last node in the list.\n","fields": [6270]},{"file": 5,"line": 232,"col": 12,"docs": " Insert a new node after an existing one.\n\n Arguments:\n     node: Pointer to a node in the list.\n     new_node: Pointer to the new node to insert.\n","fields": [6271,6272,6273]},{"file": 5,"line": 219,"col": 12,"docs": " Initialize a linked list.\n\n Returns:\n     An empty linked list.\n","fields": []},{"file": 5,"line": 253,"col": 12,"docs": " Insert a new node before an existing one.\n\n Arguments:\n     node: Pointer to a node in the list.\n     new_node: Pointer to the new node to insert.\n","fields": [6274,6275,6276]},{"file": 5,"line": 274,"col": 12,"docs": " Concatenate list2 onto the end of list1, removing all entries from the former.\n\n Arguments:\n     list1: the list to concatenate onto\n     list2: the list to be concatenated\n","fields": [6277,6278]},{"file": 5,"line": 328,"col": 12,"docs": " Remove a node from the list.\n\n Arguments:\n     node: Pointer to the node to be removed.\n","fields": [6279,6280]},{"file": 5,"line": 363,"col": 12,"docs": " Remove and return the first node in the list.\n\n Returns:\n     A pointer to the first node in the list.\n","fields": [6281]},{"file": 5,"line": 376,"col": 12,"docs": " Allocate a new node.\n\n Arguments:\n     allocator: Dynamic memory allocator.\n\n Returns:\n     A pointer to the new node.\n","fields": [6282,6283]},{"file": 5,"line": 194,"col": 8},{"file": 0,"line": 69,"col": 8},{"file": 12,"line": 18,"col": 12},{"file": 12,"line": 68,"col": 12,"fields": [6284,6285,6286]},{"file": 12,"line": 80,"col": 12,"fields": [6287,6288,6289,6290]},{"file": 12,"line": 55,"col": 12,"docs": " Write a native-endian integer.\n","fields": [6291,6292,6293]},{"file": 12,"line": 16,"col": 12},{"file": 12,"line": 62,"col": 12,"docs": " Write a foreign-endian integer.\n","fields": [6294,6295,6296]},{"file": 12,"line": 46,"col": 12,"fields": [6297,6298,6299]},{"file": 12,"line": 74,"col": 12,"fields": [6300,6301,6302]},{"file": 12,"line": 15,"col": 8},{"file": 0,"line": 34,"col": 4},{"file": 0,"line": 18,"col": 4},{"file": 0,"line": 10,"col": 4},{"file": 0,"line": 26,"col": 4},{"file": 0,"line": 6,"col": 0},{"file": 0,"line": 7,"col": 0},{"file": 0,"line": 8,"col": 0},{"file": 1,"line": 21,"col": 4},{"file": 1,"line": 14,"col": 4},{"file": 7,"line": 71,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 11,"col": 4},{"file": 1,"line": 9,"col": 4},{"file": 1,"line": 6,"col": 4},{"file": 1,"line": 2,"col": 4},{"file": 1,"line": 10,"col": 4},{"file": 7,"line": 328,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 5,"col": 4},{"file": 7,"line": 92,"col": 4},{"file": 7,"line": 60,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 7,"col": 4},{"file": 7,"line": 12,"col": 4,"docs": " Deprecated: use `std.Target.ObjectFormat`.\n"},{"file": 7,"line": 44,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 16,"col": 4},{"file": 1,"line": 3,"col": 4},{"file": 7,"line": 350,"col": 4,"docs": " This function type is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 8,"col": 4},{"file": 7,"line": 6,"col": 4,"docs": " Deprecated: use `std.Target.Arch`.\n"},{"file": 1,"line": 13,"col": 4},{"file": 7,"line": 21,"col": 4,"docs": " `explicit_subsystem` is missing when the subsystem is automatically detected,\n so Zig standard library has the subsystem detection logic here. This should generally be\n used rather than `explicit_subsystem`.\n On non-Windows targets, this is `null`.\n"},{"file": 7,"line": 15,"col": 4,"docs": " Deprecated: use `std.Target.SubSystem`.\n"},{"file": 7,"line": 85,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 335,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 354,"col": 4,"docs": " This function is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 15,"col": 4},{"file": 1,"line": 4,"col": 4},{"file": 7,"line": 3,"col": 4,"docs": " Deprecated: use `std.Target.Os`.\n"},{"file": 7,"line": 342,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 9,"col": 4,"docs": " Deprecated: use `std.Target.Abi`.\n"},{"file": 7,"line": 51,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 12,"col": 4},{"file": 7,"line": 96,"col": 4,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 1,"line": 17,"col": 0},{"file": 2,"line": 51,"col": 4},{"file": 2,"line": 9,"col": 4},{"file": 2,"line": 30,"col": 4},{"file": 2,"line": 19,"col": 4},{"file": 2,"line": 13,"col": 4},{"file": 2,"line": 12,"col": 4},{"file": 2,"line": 50,"col": 4},{"file": 2,"line": 24,"col": 4},{"file": 2,"line": 5,"col": 4},{"file": 2,"line": 39,"col": 4},{"file": 2,"line": 54,"col": 4},{"file": 2,"line": 35,"col": 4},{"file": 2,"line": 6,"col": 4},{"file": 2,"line": 36,"col": 4},{"file": 2,"line": 62,"col": 4},{"file": 2,"line": 7,"col": 4},{"file": 2,"line": 38,"col": 4},{"file": 2,"line": 64,"col": 4},{"file": 2,"line": 29,"col": 4},{"file": 2,"line": 0,"col": 4},{"file": 2,"line": 45,"col": 4},{"file": 2,"line": 37,"col": 4},{"file": 2,"line": 18,"col": 4},{"file": 2,"line": 61,"col": 4},{"file": 2,"line": 46,"col": 4},{"file": 2,"line": 8,"col": 4},{"file": 2,"line": 43,"col": 4},{"file": 2,"line": 25,"col": 4},{"file": 2,"line": 40,"col": 4},{"file": 2,"line": 28,"col": 4},{"file": 2,"line": 27,"col": 4},{"file": 2,"line": 22,"col": 4},{"file": 2,"line": 47,"col": 4},{"file": 2,"line": 48,"col": 4},{"file": 6,"line": 6,"col": 4,"docs": " Thread-safe initialization of global data.\n TODO use a mutex instead of a spinlock\n","fields": [6303]},{"file": 2,"line": 56,"col": 4},{"file": 2,"line": 4,"col": 4},{"file": 2,"line": 32,"col": 4},{"file": 2,"line": 33,"col": 4},{"file": 2,"line": 42,"col": 4},{"file": 2,"line": 60,"col": 4},{"file": 2,"line": 31,"col": 4},{"file": 2,"line": 34,"col": 4},{"file": 2,"line": 59,"col": 4},{"file": 2,"line": 58,"col": 4},{"file": 2,"line": 52,"col": 4},{"file": 2,"line": 53,"col": 4},{"file": 2,"line": 41,"col": 4},{"file": 2,"line": 44,"col": 4},{"file": 2,"line": 2,"col": 4},{"file": 2,"line": 11,"col": 4},{"file": 2,"line": 16,"col": 4},{"file": 2,"line": 63,"col": 4},{"file": 2,"line": 17,"col": 4},{"file": 2,"line": 23,"col": 4},{"file": 2,"line": 55,"col": 4},{"file": 2,"line": 65,"col": 4},{"file": 2,"line": 15,"col": 4},{"file": 2,"line": 10,"col": 4},{"file": 2,"line": 66,"col": 4},{"file": 2,"line": 1,"col": 4},{"file": 2,"line": 20,"col": 4},{"file": 2,"line": 14,"col": 4},{"file": 2,"line": 57,"col": 4},{"file": 2,"line": 49,"col": 4},{"file": 2,"line": 3,"col": 4},{"file": 2,"line": 21,"col": 4},{"file": 3,"line": 2,"col": 0},{"file": 3,"line": 1,"col": 0},{"file": 3,"line": 0,"col": 0},{"file": 3,"line": 3,"col": 0},{"file": 32,"line": 345,"col": 8,"fields": [6304]},{"file": 32,"line": 25,"col": 8},{"file": 32,"line": 224,"col": 8,"fields": [6305]},{"file": 32,"line": 247,"col": 8,"fields": [6306]},{"file": 32,"line": 38,"col": 8,"docs": " `openRead` except with a null terminated path\n","fields": [6307]},{"file": 32,"line": 107,"col": 8,"docs": " If the path does not exist it will be created.\n If a file already exists in the destination this returns OpenError.PathAlreadyExists\n Call close to clean up.\n","fields": [6308,6309]},{"file": 32,"line": 63,"col": 8,"docs": " Calls `openWriteMode` with `default_mode` for the mode.\n","fields": [6310]},{"file": 32,"line": 15,"col": 8},{"file": 32,"line": 280,"col": 8},{"file": 32,"line": 231,"col": 8},{"file": 32,"line": 358,"col": 8,"docs": " Implementation of io.InStream trait for File\n"},{"file": 32,"line": 200,"col": 8,"docs": " Repositions read/write file offset relative to the end.\n","fields": [6311,6312]},{"file": 32,"line": 311,"col": 8},{"file": 32,"line": 222,"col": 8},{"file": 32,"line": 192,"col": 8},{"file": 32,"line": 211,"col": 8,"fields": [6313]},{"file": 32,"line": 323,"col": 8,"fields": [6314,6315]},{"file": 32,"line": 20,"col": 8},{"file": 32,"line": 91,"col": 8,"docs": " Same as `openWriteMode` except `path` is null-terminated and UTF16LE encoded\n","fields": [6316,6317]},{"file": 32,"line": 372,"col": 8,"docs": " Implementation of io.OutStream trait for File\n"},{"file": 32,"line": 80,"col": 8,"docs": " Same as `openWriteMode` except `path` is null-terminated.\n","fields": [6318,6319]},{"file": 32,"line": 70,"col": 8,"docs": " If the path does not exist it will be created.\n If a file already exists in the destination it will be truncated.\n Call close to clean up.\n","fields": [6320,6321]},{"file": 32,"line": 126,"col": 8,"fields": [6322,6323]},{"file": 32,"line": 209,"col": 8},{"file": 32,"line": 245,"col": 8},{"file": 32,"line": 386,"col": 8,"docs": " Implementation of io.SeekableStream trait for File\n"},{"file": 32,"line": 317,"col": 8},{"file": 32,"line": 148,"col": 8,"docs": " Test for the existence of `path`.\n `path` is UTF8-encoded.\n In general it is recommended to avoid this function. For example,\n instead of testing if a file exists and then opening it, just\n open it and handle the error for file not found.\n","fields": [6324]},{"file": 32,"line": 286,"col": 8,"docs": " The underlying file system may have a different granularity than nanoseconds,\n and therefore this function cannot guarantee any precision will be stored.\n Further, the maximum value is limited by the system ABI. When a value is provided\n that exceeds this range, the value is clamped to the maximum.\n","fields": [6325,6326,6327]},{"file": 32,"line": 158,"col": 8,"docs": " Same as `access` except the parameter is null-terminated UTF16LE-encoded.\n","fields": [6328]},{"file": 32,"line": 153,"col": 8,"docs": " Same as `access` except the parameter is null-terminated.\n","fields": [6329]},{"file": 32,"line": 116,"col": 8,"fields": [6330,6331]},{"file": 32,"line": 376,"col": 12},{"file": 32,"line": 377,"col": 12},{"file": 32,"line": 362,"col": 12},{"file": 32,"line": 363,"col": 12},{"file": 33,"line": 222,"col": 8},{"file": 13,"line": 932,"col": 8,"docs": " Returns a slice of the remaining bytes. Does not affect iterator state.\n","fields": [6332]},{"file": 23,"line": 637,"col": 8},{"file": 23,"line": 636,"col": 8},{"file": 23,"line": 704,"col": 4,"fields": [6333]},{"file": 23,"line": 708,"col": 4,"fields": [6334]},{"file": 16,"line": 1411,"col": 4,"fields": [6335]},{"file": 28,"line": 358,"col": 8,"fields": [6336]},{"file": 28,"line": 344,"col": 4},{"file": 28,"line": 481,"col": 8,"fields": [6337]},{"file": 19,"line": 191,"col": 8,"docs": " TODO: https://github.com/ziglang/zig/issues/425\n","fields": [6338]},{"file": 34,"line": 66,"col": 12,"fields": [6339]},{"file": 34,"line": 70,"col": 12},{"file": 34,"line": 51,"col": 8,"docs": " number of iterations to spin yielding the cpu\n"},{"file": 34,"line": 44,"col": 8},{"file": 34,"line": 57,"col": 8,"docs": " number of iterations to spin yielding the thread\n"},{"file": 34,"line": 54,"col": 8,"docs": " number of iterations to perform in the cpu yield loop\n"},{"file": 35,"line": 61,"col": 8,"fields": [6340]},{"file": 35,"line": 93,"col": 4},{"file": 37,"line": 170,"col": 8,"fields": [6341,6342]},{"file": 37,"line": 119,"col": 8,"fields": [6343,6344]},{"file": 4,"line": 0,"col": 0},{"file": 4,"line": 5,"col": 0},{"file": 4,"line": 483,"col": 0},{"file": 4,"line": 1,"col": 0},{"file": 4,"line": 2,"col": 0},{"file": 4,"line": 3,"col": 0},{"file": 4,"line": 4,"col": 0},{"file": 24,"line": 261,"col": 4},{"file": 5,"line": 0,"col": 0},{"file": 5,"line": 5,"col": 0},{"file": 5,"line": 1,"col": 0},{"file": 5,"line": 2,"col": 0},{"file": 5,"line": 3,"col": 0},{"file": 5,"line": 4,"col": 0},{"file": 5,"line": 45,"col": 16,"docs": " Remove a node from the list.\n\n Arguments:\n     node: Pointer to the node to be removed.\n Returns:\n     node removed\n","fields": [6345]},{"file": 5,"line": 34,"col": 16,"docs": " Insert a new node after the current one.\n\n Arguments:\n     new_node: Pointer to the new node to insert.\n","fields": [6346,6347]},{"file": 5,"line": 23,"col": 16,"fields": [6348]},{"file": 6,"line": 0,"col": 0},{"file": 6,"line": 60,"col": 0},{"file": 6,"line": 1,"col": 0},{"file": 6,"line": 2,"col": 0},{"file": 6,"line": 79,"col": 0},{"file": 7,"line": 383,"col": 0},{"file": 7,"line": 382,"col": 0},{"file": 7,"line": 149,"col": 12,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 7,"line": 296,"col": 12,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 8,"line": 1,"col": 0},{"file": 8,"line": 151,"col": 0},{"file": 8,"line": 3,"col": 0},{"file": 8,"line": 150,"col": 0},{"file": 8,"line": 0,"col": 0},{"file": 8,"line": 222,"col": 0,"fields": [6349]},{"file": 8,"line": 2,"col": 0},{"file": 8,"line": 5,"col": 0},{"file": 8,"line": 4,"col": 0},{"file": 8,"line": 136,"col": 0},{"file": 8,"line": 240,"col": 0,"fields": [6350]},{"file": 5,"line": 202,"col": 16,"fields": [6351]},{"file": 9,"line": 1,"col": 0},{"file": 9,"line": 85,"col": 0},{"file": 9,"line": 84,"col": 0},{"file": 9,"line": 70,"col": 0},{"file": 9,"line": 149,"col": 0,"fields": [6352]},{"file": 9,"line": 2,"col": 0},{"file": 9,"line": 3,"col": 0},{"file": 9,"line": 0,"col": 0},{"file": 9,"line": 71,"col": 0},{"file": 9,"line": 166,"col": 0,"fields": [6353]},{"file": 39,"line": 46,"col": 12},{"file": 39,"line": 34,"col": 12},{"file": 39,"line": 44,"col": 12},{"file": 39,"line": 52,"col": 12},{"file": 39,"line": 71,"col": 12},{"file": 39,"line": 82,"col": 8},{"file": 39,"line": 66,"col": 8},{"file": 10,"line": 546,"col": 4,"fields": [6354]},{"file": 10,"line": 28,"col": 4,"fields": [6355]},{"file": 10,"line": 554,"col": 4,"fields": [6356,6357]},{"file": 10,"line": 15,"col": 4,"fields": [6358,6359]},{"file": 10,"line": 24,"col": 4,"fields": [6360,6361]},{"file": 10,"line": 20,"col": 4,"docs": " Builtin hashmap for strings as keys.\n","fields": [6362]},{"file": 10,"line": 10,"col": 0},{"file": 10,"line": 8,"col": 0},{"file": 10,"line": 4,"col": 0},{"file": 10,"line": 0,"col": 0},{"file": 10,"line": 1,"col": 0},{"file": 10,"line": 6,"col": 0},{"file": 10,"line": 3,"col": 0},{"file": 10,"line": 13,"col": 0},{"file": 10,"line": 9,"col": 0},{"file": 10,"line": 12,"col": 0},{"file": 10,"line": 7,"col": 0},{"file": 10,"line": 2,"col": 0},{"file": 10,"line": 5,"col": 0},{"file": 11,"line": 8,"col": 4},{"file": 11,"line": 9,"col": 4},{"file": 11,"line": 1,"col": 0},{"file": 11,"line": 2,"col": 0},{"file": 11,"line": 3,"col": 0},{"file": 11,"line": 0,"col": 0},{"file": 11,"line": 4,"col": 0},{"file": 11,"line": 6,"col": 0},{"file": 11,"line": 5,"col": 0},{"file": 12,"line": 6,"col": 4},{"file": 12,"line": 5,"col": 4},{"file": 12,"line": 1,"col": 0},{"file": 12,"line": 0,"col": 0},{"file": 12,"line": 2,"col": 0},{"file": 12,"line": 3,"col": 0},{"file": 13,"line": 87,"col": 8,"docs": " `ptr` should be the return value of `create`, or otherwise\n have the same address and alignment property.\n","fields": [6363,6364]},{"file": 13,"line": 16,"col": 8},{"file": 40,"line": 103,"col": 12},{"file": 40,"line": 139,"col": 12},{"file": 40,"line": 144,"col": 12},{"file": 40,"line": 128,"col": 12},{"file": 13,"line": 1484,"col": 4,"docs": "Given a pointer to an array, returns a pointer to a portion of that array, preserving constness.\n","fields": [6365,6366,6367]},{"file": 13,"line": 1228,"col": 4,"docs": " In-place order reversal of a slice\n","fields": [6368,6369]},{"file": 13,"line": 706,"col": 4,"docs": " Writes a twos-complement big-endian integer to memory.\n Asserts that buffer.len >= T.bit_count / 8.\n The bit count of T must be divisible by 8.\n Any extra bytes in buffer before writing the integer are set to zero. To\n avoid the branch to check for extra buffer bytes, use writeIntBig instead.\n","fields": [6370,6371,6372]},{"file": 13,"line": 1389,"col": 4,"docs": "Given any value, returns a copy of its bytes in an array.\n","fields": [6373]},{"file": 13,"line": 1257,"col": 4,"docs": " In-place rotation of the values in an array ([0 1 2 3] becomes [1 2 3 0] if we rotate by 1)\n Assumes 0 <= amount <= items.len\n","fields": [6374,6375,6376]},{"file": 13,"line": 1464,"col": 4,"docs": "Given a pointer to an array of bytes, returns a value of the specified type backed by a\n copy of those bytes.\n","fields": [6377,6378]},{"file": 13,"line": 658,"col": 4,"docs": " Writes an integer to memory, storing it in twos-complement.\n This function always succeeds, has defined behavior for all inputs, but\n the integer bit width must be divisible by 8.\n This function stores in foreign endian, which means it does a @byteSwap first.\n","fields": [6379,6380,6381]},{"file": 13,"line": 851,"col": 4,"docs": " Returns an iterator that iterates over the slices of `buffer` that\n are separated by bytes in `delimiter`.\n separate(\"abc|def||ghi\", \"|\")\n will return slices for \"abc\", \"def\", \"\", \"ghi\", null, in that order.\n If `delimiter` does not exist in buffer,\n the iterator will return `buffer`, null, in that order.\n The delimiter length must not be zero.\n See also the related function `tokenize`.\n It is planned to rename this function to `split` before 1.0.0, like this:\n pub fn split(buffer: []const u8, delimiter: []const u8) SplitIterator {\n","fields": [6382,6383]},{"file": 13,"line": 949,"col": 4},{"file": 13,"line": 1209,"col": 4,"fields": [6384,6385]},{"file": 13,"line": 432,"col": 4,"fields": [6386,6387,6388,6389]},{"file": 13,"line": 720,"col": 4},{"file": 13,"line": 675,"col": 4,"docs": " Writes an integer to memory, storing it in twos-complement.\n This function always succeeds, has defined behavior for all inputs, but\n the integer bit width must be divisible by 8.\n","fields": [6390,6391,6392,6393]},{"file": 13,"line": 1221,"col": 4,"fields": [6394,6395,6396]},{"file": 13,"line": 423,"col": 4,"docs": " Linear search for the last index of a scalar value inside a slice.\n","fields": [6397,6398,6399]},{"file": 13,"line": 240,"col": 4},{"file": 13,"line": 689,"col": 4,"docs": " Writes a twos-complement little-endian integer to memory.\n Asserts that buf.len >= T.bit_count / 8.\n The bit count of T must be divisible by 8.\n Any extra bytes in buffer after writing the integer are set to zero. To\n avoid the branch to check for extra buffer bytes, use writeIntLittle\n instead.\n","fields": [6400,6401,6402]},{"file": 13,"line": 1197,"col": 4,"fields": [6403,6404]},{"file": 13,"line": 584,"col": 4},{"file": 13,"line": 455,"col": 4,"fields": [6405,6406,6407,6408]},{"file": 13,"line": 662,"col": 4},{"file": 13,"line": 388,"col": 4,"docs": " Remove values from the beginning of a slice.\n","fields": [6409,6410,6411]},{"file": 13,"line": 514,"col": 4,"docs": " Reads an integer from memory with size equal to bytes.len.\n T specifies the return type, which must be large enough to store\n the result.\n","fields": [6412,6413,6414]},{"file": 13,"line": 1538,"col": 4,"docs": " Given an address and an alignment, return true if the address is a multiple of the alignment\n The alignment must be a power of 2 and greater than 0.\n","fields": [6415,6416]},{"file": 13,"line": 736,"col": 4,"docs": " Writes a twos-complement integer to memory, with the specified endianness.\n Asserts that buf.len >= T.bit_count / 8.\n The bit count of T must be evenly divisible by 8.\n Any extra bytes in buffer not part of the integer are set to zero, with\n respect to endianness. To avoid the branch to check for extra buffer bytes,\n use writeInt instead.\n","fields": [6417,6418,6419,6420]},{"file": 13,"line": 977,"col": 4,"docs": " Naively combines a series of slices with a separator.\n Allocates memory for the result, which must be freed by the caller.\n","fields": [6421,6422,6423]},{"file": 13,"line": 1012,"col": 4,"docs": " Copies each T from slices into a new slice that exactly holds all the elements.\n","fields": [6424,6425,6426]},{"file": 13,"line": 1421,"col": 4,"docs": "Given a pointer to an array of bytes, returns a pointer to a value of the specified type\n backed by those bytes, preserving constness.\n","fields": [6427,6428]},{"file": 13,"line": 1299,"col": 4,"docs": " Converts an integer from specified endianness to host endianness.\n","fields": [6429,6430,6431]},{"file": 13,"line": 1315,"col": 4,"docs": " Converts an integer which has host endianness to little endian.\n","fields": [6432,6433]},{"file": 13,"line": 603,"col": 4,"docs": " Asserts that bytes.len >= T.bit_count / 8. Reads the integer starting from index 0\n and ignores extra bytes.\n The bit count of T must be evenly divisible by 8.\n","fields": [6434,6435,6436]},{"file": 13,"line": 1307,"col": 4,"docs": " Converts an integer which has host endianness to the desired endianness.\n","fields": [6437,6438,6439]},{"file": 13,"line": 444,"col": 4,"fields": [6440,6441,6442]},{"file": 13,"line": 910,"col": 4},{"file": 13,"line": 1283,"col": 4,"docs": " Converts a little-endian integer to host endianness.\n","fields": [6443,6444]},{"file": 13,"line": 1291,"col": 4,"docs": " Converts a big-endian integer to host endianness.\n","fields": [6445,6446]},{"file": 13,"line": 418,"col": 4,"docs": " Linear search for the index of a scalar value inside a slice.\n","fields": [6447,6448,6449]},{"file": 13,"line": 1323,"col": 4,"docs": " Converts an integer which has host endianness to big endian.\n","fields": [6450,6451]},{"file": 13,"line": 650,"col": 4,"docs": " Writes an integer to memory, storing it in twos-complement.\n This function always succeeds, has defined behavior for all inputs, and\n accepts any integer bit width.\n This function stores in native endian, which means it is implemented as a simple\n memory store.\n","fields": [6452,6453,6454]},{"file": 13,"line": 15,"col": 4},{"file": 13,"line": 298,"col": 4,"fields": [6455,6456,6457]},{"file": 13,"line": 440,"col": 4,"fields": [6458,6459,6460]},{"file": 13,"line": 554,"col": 4},{"file": 13,"line": 332,"col": 4,"docs": " Returns true if lhs < rhs, false otherwise\n","fields": [6461,6462,6463]},{"file": 13,"line": 901,"col": 4,"fields": [6464,6465,6466]},{"file": 13,"line": 402,"col": 4,"docs": " Remove values from the beginning and end of a slice.\n","fields": [6467,6468,6469]},{"file": 13,"line": 545,"col": 4,"docs": " Reads an integer from memory with bit count specified by T.\n The bit count of T must be evenly divisible by 8.\n This function cannot fail and cannot cause undefined behavior.\n Assumes the endianness of memory is foreign, so it must byte-swap.\n","fields": [6470,6471]},{"file": 13,"line": 725,"col": 4},{"file": 13,"line": 579,"col": 4},{"file": 13,"line": 395,"col": 4,"docs": " Remove values from the end of a slice.\n","fields": [6472,6473,6474]},{"file": 13,"line": 280,"col": 4,"fields": [6475,6476]},{"file": 13,"line": 667,"col": 4},{"file": 13,"line": 10,"col": 4},{"file": 13,"line": 472,"col": 4,"docs": " Find the index in a slice of a sub-slice, searching from the end backwards.\n To start looking at a different index, slice the haystack first.\n TODO is there even a better algorithm for this?\n","fields": [6477,6478,6479]},{"file": 13,"line": 549,"col": 4},{"file": 13,"line": 575,"col": 4,"docs": " Asserts that bytes.len >= T.bit_count / 8. Reads the integer starting from index 0\n and ignores extra bytes.\n The bit count of T must be evenly divisible by 8.\n Assumes the endianness of memory is foreign, so it must byte-swap.\n","fields": [6480,6481]},{"file": 13,"line": 262,"col": 4,"docs": " Copy all of source into dest at position 0.\n dest.len must be >= source.len.\n dest.ptr must be >= src.ptr.\n","fields": [6482,6483,6484]},{"file": 13,"line": 373,"col": 4,"docs": " Returns true if all elements in a slice are equal to the scalar value provided\n","fields": [6485,6486,6487]},{"file": 13,"line": 592,"col": 4,"docs": " Reads an integer from memory with bit count specified by T.\n The bit count of T must be evenly divisible by 8.\n This function cannot fail and cannot cause undefined behavior.\n","fields": [6488,6489,6490]},{"file": 13,"line": 1407,"col": 0,"fields": [6491,6492]},{"file": 13,"line": 1109,"col": 0,"fields": []},{"file": 13,"line": 6,"col": 0},{"file": 13,"line": 1477,"col": 0,"fields": [6493,6494]},{"file": 13,"line": 2,"col": 0},{"file": 13,"line": 4,"col": 0},{"file": 13,"line": 3,"col": 0},{"file": 13,"line": 1,"col": 0},{"file": 13,"line": 8,"col": 0},{"file": 13,"line": 7,"col": 0},{"file": 13,"line": 1058,"col": 0,"fields": []},{"file": 13,"line": 0,"col": 0},{"file": 13,"line": 5,"col": 0},{"file": 14,"line": 25,"col": 4,"docs": " π/2\n"},{"file": 14,"line": 152,"col": 4},{"file": 14,"line": 149,"col": 4},{"file": 14,"line": 150,"col": 4},{"file": 14,"line": 193,"col": 4},{"file": 14,"line": 153,"col": 4},{"file": 14,"line": 89,"col": 4},{"file": 14,"line": 161,"col": 4},{"file": 14,"line": 178,"col": 4},{"file": 14,"line": 74,"col": 4},{"file": 14,"line": 538,"col": 4},{"file": 14,"line": 53,"col": 4},{"file": 14,"line": 394,"col": 4,"docs": " Rotates right. Only unsigned values can be rotated.\n Negative shift values results in shift modulo the bit count.\n","fields": [6495,6496,6497]},{"file": 14,"line": 664,"col": 4,"docs": " Returns the absolute value of the integer parameter.\n Result is an unsigned integer.\n","fields": [6498]},{"file": 14,"line": 173,"col": 4},{"file": 14,"line": 155,"col": 4},{"file": 14,"line": 78,"col": 4},{"file": 14,"line": 570,"col": 4,"fields": [6499,6500,6501]},{"file": 14,"line": 796,"col": 4,"docs": " Returns the next power of two (if the value is not already a power of two).\n Only unsigned integers can be used. Zero is not an allowed input.\n If the value doesn't fit, returns an error.\n","fields": [6502,6503]},{"file": 14,"line": 192,"col": 4},{"file": 14,"line": 80,"col": 4},{"file": 14,"line": 366,"col": 4,"docs": " Shifts right. Overflowed bits are truncated.\n A negative shift amount results in a left shift.\n","fields": [6504,6505,6506]},{"file": 14,"line": 189,"col": 4},{"file": 14,"line": 196,"col": 4},{"file": 14,"line": 57,"col": 4},{"file": 14,"line": 46,"col": 4},{"file": 14,"line": 37,"col": 4,"docs": " 2/sqrt(π)\n"},{"file": 14,"line": 190,"col": 4},{"file": 14,"line": 157,"col": 4},{"file": 14,"line": 200,"col": 4},{"file": 14,"line": 137,"col": 4,"fields": []},{"file": 14,"line": 93,"col": 4},{"file": 14,"line": 97,"col": 4},{"file": 14,"line": 430,"col": 4,"fields": [6507]},{"file": 14,"line": 842,"col": 4,"fields": [6508,6509]},{"file": 14,"line": 319,"col": 4,"fields": [6510,6511,6512]},{"file": 14,"line": 191,"col": 4},{"file": 14,"line": 868,"col": 4,"fields": [6513,6514]},{"file": 14,"line": 159,"col": 4},{"file": 14,"line": 616,"col": 4,"fields": [6515,6516,6517]},{"file": 14,"line": 61,"col": 4},{"file": 14,"line": 34,"col": 4,"docs": " 2/π\n"},{"file": 14,"line": 43,"col": 4,"docs": " 1/sqrt(2)\n"},{"file": 14,"line": 197,"col": 4},{"file": 14,"line": 182,"col": 4},{"file": 14,"line": 195,"col": 4},{"file": 14,"line": 56,"col": 4},{"file": 14,"line": 86,"col": 4},{"file": 14,"line": 175,"col": 4},{"file": 14,"line": 751,"col": 4,"fields": [6518]},{"file": 14,"line": 71,"col": 4},{"file": 14,"line": 81,"col": 4},{"file": 14,"line": 59,"col": 4},{"file": 14,"line": 151,"col": 4},{"file": 14,"line": 199,"col": 4},{"file": 14,"line": 176,"col": 4},{"file": 14,"line": 145,"col": 4,"fields": []},{"file": 14,"line": 96,"col": 4},{"file": 14,"line": 65,"col": 4},{"file": 14,"line": 166,"col": 4},{"file": 14,"line": 16,"col": 4,"docs": " log10(e)\n"},{"file": 14,"line": 63,"col": 4},{"file": 14,"line": 170,"col": 4},{"file": 14,"line": 28,"col": 4,"docs": " π/4\n"},{"file": 14,"line": 185,"col": 4},{"file": 14,"line": 87,"col": 4},{"file": 14,"line": 847,"col": 4,"fields": [6519,6520]},{"file": 14,"line": 169,"col": 4},{"file": 14,"line": 7,"col": 4,"docs": " Euler's number (e)\n"},{"file": 14,"line": 784,"col": 4,"docs": " Returns the next power of two (if the value is not already a power of two).\n Only unsigned integers can be used. Zero is not an allowed input.\n Result is a type with 1 more bit than the input type.\n","fields": [6521,6522]},{"file": 14,"line": 66,"col": 4},{"file": 14,"line": 181,"col": 4},{"file": 14,"line": 168,"col": 4},{"file": 14,"line": 333,"col": 4,"fields": [6523,6524,6525]},{"file": 14,"line": 90,"col": 4},{"file": 14,"line": 156,"col": 4},{"file": 14,"line": 60,"col": 4},{"file": 14,"line": 158,"col": 4},{"file": 14,"line": 68,"col": 4},{"file": 14,"line": 639,"col": 4,"fields": [6526,6527,6528]},{"file": 14,"line": 22,"col": 4,"docs": " ln(10)\n"},{"file": 14,"line": 324,"col": 4,"fields": [6529,6530,6531]},{"file": 14,"line": 208,"col": 4,"fields": [6532]},{"file": 14,"line": 77,"col": 4},{"file": 14,"line": 174,"col": 4},{"file": 14,"line": 67,"col": 4},{"file": 14,"line": 756,"col": 4,"fields": [6533,6534]},{"file": 14,"line": 179,"col": 4},{"file": 14,"line": 54,"col": 4},{"file": 14,"line": 186,"col": 4},{"file": 14,"line": 72,"col": 4},{"file": 14,"line": 50,"col": 4},{"file": 14,"line": 441,"col": 4,"fields": [6535,6536]},{"file": 14,"line": 83,"col": 4},{"file": 14,"line": 413,"col": 4,"docs": " Rotates left. Only unsigned values can be rotated.\n Negative shift values results in shift modulo the bit count.\n","fields": [6537,6538,6539]},{"file": 14,"line": 40,"col": 4,"docs": " sqrt(2)\n"},{"file": 14,"line": 184,"col": 4},{"file": 14,"line": 133,"col": 4,"fields": []},{"file": 14,"line": 329,"col": 4,"fields": [6540]},{"file": 14,"line": 743,"col": 4,"docs": " Align cast a pointer but return an error if it's the wrong alignment\n","fields": [6541,6542]},{"file": 14,"line": 69,"col": 4},{"file": 14,"line": 164,"col": 4},{"file": 14,"line": 160,"col": 4},{"file": 14,"line": 49,"col": 4},{"file": 14,"line": 47,"col": 4},{"file": 14,"line": 591,"col": 4,"fields": [6543,6544,6545]},{"file": 14,"line": 695,"col": 4,"docs": " Returns the negation of the integer parameter.\n Result is a signed integer.\n","fields": [6546]},{"file": 14,"line": 163,"col": 4},{"file": 14,"line": 84,"col": 4},{"file": 14,"line": 48,"col": 4},{"file": 14,"line": 62,"col": 4},{"file": 14,"line": 105,"col": 4,"fields": [6547]},{"file": 14,"line": 167,"col": 4},{"file": 14,"line": 129,"col": 4,"fields": []},{"file": 14,"line": 340,"col": 4,"docs": " Shifts left. Overflowed bits are truncated.\n A negative shift amount results in a right shift.\n","fields": [6548,6549,6550]},{"file": 14,"line": 19,"col": 4,"docs": " ln(2)\n"},{"file": 14,"line": 202,"col": 4},{"file": 14,"line": 95,"col": 4},{"file": 14,"line": 55,"col": 4},{"file": 14,"line": 75,"col": 4},{"file": 14,"line": 141,"col": 4,"fields": []},{"file": 14,"line": 92,"col": 4},{"file": 14,"line": 162,"col": 4},{"file": 14,"line": 188,"col": 4},{"file": 14,"line": 165,"col": 4},{"file": 14,"line": 172,"col": 4},{"file": 14,"line": 194,"col": 4},{"file": 14,"line": 99,"col": 4,"fields": [6551,6552,6553,6554]},{"file": 14,"line": 154,"col": 4},{"file": 14,"line": 221,"col": 4,"fields": [6555]},{"file": 14,"line": 31,"col": 4,"docs": " 1/π\n"},{"file": 14,"line": 180,"col": 4},{"file": 14,"line": 187,"col": 4},{"file": 14,"line": 740,"col": 4},{"file": 14,"line": 10,"col": 4,"docs": " Archimedes' constant (π)\n"},{"file": 14,"line": 13,"col": 4,"docs": " log2(e)\n"},{"file": 14,"line": 171,"col": 4},{"file": 14,"line": 516,"col": 4,"fields": [6556]},{"file": 14,"line": 549,"col": 4,"fields": [6557,6558,6559]},{"file": 14,"line": 177,"col": 4},{"file": 14,"line": 183,"col": 4},{"file": 14,"line": 544,"col": 0,"fields": []},{"file": 14,"line": 581,"col": 0,"fields": []},{"file": 14,"line": 830,"col": 0,"fields": []},{"file": 14,"line": 3,"col": 0},{"file": 14,"line": 0,"col": 0},{"file": 14,"line": 627,"col": 0,"fields": []},{"file": 14,"line": 2,"col": 0},{"file": 14,"line": 813,"col": 0,"fields": []},{"file": 14,"line": 650,"col": 0,"fields": []},{"file": 14,"line": 772,"col": 0,"fields": []},{"file": 14,"line": 509,"col": 0,"fields": []},{"file": 14,"line": 604,"col": 0,"fields": []},{"file": 14,"line": 4,"col": 0},{"file": 14,"line": 1,"col": 0},{"file": 14,"line": 533,"col": 0,"fields": []},{"file": 14,"line": 560,"col": 0,"fields": []},{"file": 42,"line": 27,"col": 8,"docs": " Represents a unique ID per thread.\n May be an integer or pointer depending on the platform.\n On Linux and POSIX, this is the same as Handle.\n"},{"file": 42,"line": 74,"col": 8,"fields": [6560]},{"file": 42,"line": 32,"col": 8},{"file": 42,"line": 343,"col": 8,"fields": []},{"file": 42,"line": 16,"col": 8,"docs": " Represents a kernel thread handle.\n May be an integer or a pointer depending on the platform.\n On Linux and POSIX, this is the same as Id.\n"},{"file": 42,"line": 70,"col": 8,"docs": " Returns the handle of this thread.\n On Linux and POSIX, this is the same as Id.\n On Linux, it is possible that the thread spawned with `spawn`\n finishes executing entirely before the clone syscall completes. In this\n case, this function will return 0 rather than the no-longer-existing thread's\n pid.\n","fields": [6561]},{"file": 42,"line": 53,"col": 8,"docs": " Returns the ID of the calling thread.\n Makes a syscall every time the function is called.\n On Linux and POSIX, this Id is the same as a Handle.\n","fields": []},{"file": 42,"line": 336,"col": 8},{"file": 42,"line": 11,"col": 8},{"file": 42,"line": 143,"col": 8,"docs": " caller must call wait on the returned thread\n fn startFn(@typeOf(context)) T\n where T is u8, noreturn, void, or !void\n caller must call wait on the returned thread\n","fields": [6562,6563]},{"file": 42,"line": 109,"col": 8},{"file": 43,"line": 87,"col": 4},{"file": 43,"line": 90,"col": 4},{"file": 43,"line": 140,"col": 4},{"file": 43,"line": 36,"col": 4,"docs": " Software termination signal from kill\n"},{"file": 43,"line": 122,"col": 4},{"file": 15,"line": 612,"col": 4},{"file": 43,"line": 185,"col": 4},{"file": 43,"line": 205,"col": 4},{"file": 43,"line": 162,"col": 4,"docs": " Remove directory instead of unlinking file\n"},{"file": 43,"line": 204,"col": 4},{"file": 15,"line": 2185,"col": 4,"fields": []},{"file": 43,"line": 123,"col": 4},{"file": 43,"line": 121,"col": 4},{"file": 15,"line": 2465,"col": 4,"docs": " Repositions read/write file offset relative to the end.\n","fields": [6564,6565]},{"file": 43,"line": 209,"col": 4},{"file": 15,"line": 3067,"col": 4,"fields": [6566,6567]},{"file": 15,"line": 1775,"col": 4,"fields": [6568]},{"file": 15,"line": 786,"col": 4,"docs": " Like `execvpe` except the parameters are null-terminated,\n matching the syscall API on all targets. This removes the need for an allocator.\n This function also uses the PATH environment variable to get the full path to the executable.\n If `file` is an absolute path, this is the same as `execveC`.\n","fields": [6569,6570,6571]},{"file": 15,"line": 2328,"col": 4},{"file": 43,"line": 188,"col": 4},{"file": 43,"line": 117,"col": 4},{"file": 15,"line": 2405,"col": 4},{"file": 43,"line": 80,"col": 4},{"file": 43,"line": 151,"col": 4},{"file": 43,"line": 99,"col": 4},{"file": 15,"line": 2880,"col": 4,"fields": [6572,6573,6574,6575,6576,6577,6578]},{"file": 15,"line": 1412,"col": 4,"docs": " Read value of a symbolic link.\n The return value is a slice of `out_buffer` from index 0.\n","fields": [6579,6580]},{"file": 15,"line": 3081,"col": 4},{"file": 43,"line": 155,"col": 4},{"file": 44,"line": 21,"col": 4},{"file": 43,"line": 165,"col": 4},{"file": 43,"line": 71,"col": 4},{"file": 15,"line": 994,"col": 4,"fields": [6581,6582,6583]},{"file": 43,"line": 200,"col": 4},{"file": 15,"line": 2148,"col": 4,"docs": " remove an existing watch from an inotify instance\n","fields": [6584,6585]},{"file": 43,"line": 136,"col": 4},{"file": 43,"line": 91,"col": 4},{"file": 43,"line": 116,"col": 4},{"file": 15,"line": 2853,"col": 4,"fields": [6586]},{"file": 43,"line": 145,"col": 4},{"file": 43,"line": 89,"col": 4},{"file": 15,"line": 2782,"col": 4},{"file": 43,"line": 76,"col": 4},{"file": 15,"line": 1959,"col": 4,"fields": [6587]},{"file": 43,"line": 65,"col": 4,"docs": " Signal error value (returned by signal call on error)\n"},{"file": 43,"line": 75,"col": 4},{"file": 15,"line": 3053,"col": 4,"docs": " Transmit a message to another socket.\n\n The `send` call may be used only when the socket is in a connected state (so that the intended\n recipient  is  known).   The  only  difference  between `send` and `write` is the presence of\n flags.  With a zero flags argument, `send` is equivalent to  `write`.   Also,  the  following\n call\n\n     send(sockfd, buf, len, flags);\n\n is equivalent to\n\n     sendto(sockfd, buf, len, flags, NULL, 0);\n\n There is no  indication  of  failure  to  deliver.\n\n When the message does not fit into the send buffer of  the  socket,  `send`  normally  blocks,\n unless  the socket has been placed in nonblocking I/O mode.  In nonblocking mode it would fail\n with `SendError.WouldBlock`.  The `select` call may be used  to  determine when it is\n possible to send more data.\n","fields": [6588,6589,6590]},{"file": 15,"line": 1054,"col": 4,"docs": " Same as `unlink` except the parameter is a null terminated UTF8-encoded string.\n","fields": [6591]},{"file": 43,"line": 120,"col": 4},{"file": 15,"line": 650,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted.\n See also `openC`.\n","fields": [6592,6593,6594]},{"file": 15,"line": 1250,"col": 4,"docs": " Same as `rename` except the parameters are null-terminated UTF16LE encoded byte arrays.\n Assumes target is Windows.\n","fields": [6595,6596]},{"file": 43,"line": 196,"col": 4},{"file": 43,"line": 86,"col": 4},{"file": 43,"line": 208,"col": 4},{"file": 15,"line": 1078,"col": 4},{"file": 15,"line": 1814,"col": 4,"fields": [6597,6598,6599,6600]},{"file": 15,"line": 2157,"col": 4},{"file": 15,"line": 2364,"col": 4,"fields": [6601,6602,6603,6604,6605]},{"file": 43,"line": 53,"col": 4,"docs": " ignore signal\n"},{"file": 43,"line": 168,"col": 4},{"file": 15,"line": 699,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted.\n `file_path` is relative to the open directory handle `dir_fd`.\n See also `openat`.\n","fields": [6606,6607,6608,6609]},{"file": 15,"line": 2031,"col": 4},{"file": 43,"line": 129,"col": 4},{"file": 43,"line": 107,"col": 4},{"file": 15,"line": 1929,"col": 4,"docs": " Initiate a connection on a socket.\n","fields": [6610,6611,6612]},{"file": 15,"line": 2125,"col": 4,"docs": " add a watch to an initialized inotify instance\n","fields": [6613,6614,6615]},{"file": 15,"line": 3174,"col": 4},{"file": 43,"line": 157,"col": 4},{"file": 43,"line": 131,"col": 4},{"file": 15,"line": 2647,"col": 4,"fields": [6616,6617,6618]},{"file": 43,"line": 7,"col": 4},{"file": 43,"line": 126,"col": 4},{"file": 43,"line": 148,"col": 4},{"file": 15,"line": 200,"col": 4},{"file": 43,"line": 219,"col": 4},{"file": 15,"line": 1094,"col": 4,"docs": " Same as `unlinkat` but `file_path` is a null-terminated string.\n","fields": [6619,6620,6621]},{"file": 15,"line": 1308,"col": 4},{"file": 43,"line": 74,"col": 4},{"file": 43,"line": 105,"col": 4},{"file": 15,"line": 29,"col": 4},{"file": 15,"line": 202,"col": 4,"fields": [6622]},{"file": 15,"line": 2838,"col": 4,"fields": [6623,6624]},{"file": 43,"line": 42,"col": 4,"docs": " abnormal termination triggered by abort call\n"},{"file": 43,"line": 16,"col": 4},{"file": 43,"line": 98,"col": 4},{"file": 43,"line": 198,"col": 4},{"file": 43,"line": 147,"col": 4},{"file": 15,"line": 2765,"col": 4},{"file": 43,"line": 210,"col": 4},{"file": 43,"line": 104,"col": 4},{"file": 15,"line": 658,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted.\n See also `open`.\n TODO https://github.com/ziglang/zig/issues/265\n","fields": [6625,6626,6627]},{"file": 43,"line": 150,"col": 4},{"file": 43,"line": 193,"col": 4},{"file": 43,"line": 186,"col": 4},{"file": 15,"line": 270,"col": 4},{"file": 43,"line": 224,"col": 4},{"file": 15,"line": 954,"col": 4,"docs": " Creates a symbolic link named `sym_link_path` which contains the string `target_path`.\n A symbolic link (also known as a soft link) may point to an existing file or to a nonexistent\n one; the latter case is known as a dangling link.\n If `sym_link_path` exists, it will not be overwritten.\n See also `symlinkC` and `symlinkW`.\n","fields": [6628,6629]},{"file": 43,"line": 83,"col": 4},{"file": 15,"line": 1596,"col": 4},{"file": 15,"line": 880,"col": 4,"docs": " Get an environment variable.\n See also `getenvC`.\n TODO make this go through libc when we have it\n","fields": [6630]},{"file": 43,"line": 100,"col": 4},{"file": 43,"line": 197,"col": 4},{"file": 15,"line": 1491,"col": 4,"fields": [6631]},{"file": 15,"line": 1370,"col": 4,"docs": " Changes the current working directory of the calling process.\n `dir_path` is recommended to be a UTF-8 encoded string.\n","fields": [6632]},{"file": 15,"line": 1000,"col": 4,"fields": [6633,6634,6635]},{"file": 15,"line": 429,"col": 4},{"file": 15,"line": 1255,"col": 4},{"file": 43,"line": 201,"col": 4},{"file": 15,"line": 1849,"col": 4},{"file": 15,"line": 729,"col": 4,"fields": [6636,6637]},{"file": 15,"line": 2067,"col": 4,"fields": [6638,6639,6640,6641]},{"file": 43,"line": 73,"col": 4},{"file": 43,"line": 67,"col": 4},{"file": 43,"line": 143,"col": 4},{"file": 43,"line": 127,"col": 4},{"file": 15,"line": 1021,"col": 4},{"file": 43,"line": 62,"col": 4,"docs": " acknowledge\n"},{"file": 15,"line": 234,"col": 4,"fields": [6642,6643]},{"file": 15,"line": 1481,"col": 4,"fields": [6644,6645]},{"file": 15,"line": 2736,"col": 4,"fields": [6646]},{"file": 43,"line": 144,"col": 4},{"file": 43,"line": 214,"col": 4},{"file": 15,"line": 1501,"col": 4,"fields": [6647,6648]},{"file": 15,"line": 1788,"col": 4},{"file": 15,"line": 2358,"col": 4},{"file": 43,"line": 39,"col": 4,"docs": " Ctrl-Break sequence\n"},{"file": 43,"line": 45,"col": 4,"docs": " SIGABRT compatible with other platforms, same as SIGABRT\n"},{"file": 43,"line": 178,"col": 4},{"file": 43,"line": 195,"col": 4},{"file": 15,"line": 1273,"col": 4,"docs": " Create a directory.\n `mode` is ignored on Windows.\n","fields": [6649,6650]},{"file": 15,"line": 28,"col": 4},{"file": 43,"line": 133,"col": 4},{"file": 15,"line": 1874,"col": 4,"fields": [6651,6652,6653]},{"file": 15,"line": 3126,"col": 4,"fields": [6654,6655,6656]},{"file": 43,"line": 212,"col": 4},{"file": 15,"line": 2993,"col": 4,"docs": " Transmit a message to another socket.\n\n The `sendto` call may be used only when the socket is in a connected state (so that the intended\n recipient  is  known). The  following call\n\n     send(sockfd, buf, len, flags);\n\n is equivalent to\n\n     sendto(sockfd, buf, len, flags, NULL, 0);\n\n If  sendto()  is used on a connection-mode (`SOCK_STREAM`, `SOCK_SEQPACKET`) socket, the arguments\n `dest_addr` and `addrlen` are asserted to be `null` and `0` respectively, and asserted\n that the socket was actually connected.\n Otherwise, the address of the target is given by `dest_addr` with `addrlen` specifying  its  size.\n\n If the message is too long to pass atomically through the underlying protocol,\n `SendError.MessageTooBig` is returned, and the message is not transmitted.\n\n There is no  indication  of  failure  to  deliver.\n\n When the message does not fit into the send buffer of  the  socket,  `sendto`  normally  blocks,\n unless  the socket has been placed in nonblocking I/O mode.  In nonblocking mode it would fail\n with `SendError.WouldBlock`.  The `select` call may be used  to  determine when it is\n possible to send more data.\n","fields": [6657,6658,6659,6660,6661]},{"file": 43,"line": 79,"col": 4},{"file": 43,"line": 124,"col": 4},{"file": 43,"line": 78,"col": 4},{"file": 43,"line": 137,"col": 4},{"file": 15,"line": 2315,"col": 4,"docs": " Call from Windows-specific code if you already have a UTF-16LE encoded, null terminated string.\n Otherwise use `access` or `accessC`.\n TODO currently this ignores `mode`.\n","fields": [6662,6663]},{"file": 43,"line": 4,"col": 4},{"file": 43,"line": 69,"col": 4},{"file": 43,"line": 101,"col": 4},{"file": 43,"line": 68,"col": 4},{"file": 15,"line": 2334,"col": 4,"docs": " Creates a unidirectional data channel that can be used for interprocess communication.\n","fields": []},{"file": 43,"line": 211,"col": 4},{"file": 43,"line": 109,"col": 4},{"file": 15,"line": 3062,"col": 4},{"file": 15,"line": 2734,"col": 4},{"file": 15,"line": 2116,"col": 4},{"file": 15,"line": 742,"col": 4},{"file": 15,"line": 1084,"col": 4,"docs": " Delete a file name and possibly the file it refers to, based on an open directory handle.\n","fields": [6664,6665,6666]},{"file": 15,"line": 2254,"col": 4,"docs": " Deletes the mappings for the specified address range, causing\n further references to addresses within the range to generate invalid memory references.\n Note that while POSIX allows unmapping a region in the middle of an existing mapping,\n Zig's munmap function does not, for two reasons:\n * It violates the Zig principle that resource deallocation must succeed.\n * The Windows function, VirtualFree, has this restriction.\n","fields": [6667]},{"file": 43,"line": 59,"col": 4,"docs": " signal gets error\n"},{"file": 43,"line": 9,"col": 4},{"file": 15,"line": 846,"col": 4,"fields": [6668,6669]},{"file": 43,"line": 217,"col": 4},{"file": 43,"line": 227,"col": 4},{"file": 15,"line": 1423,"col": 4,"docs": " Same as `readlink` except `file_path` is null-terminated.\n","fields": [6670,6671]},{"file": 43,"line": 222,"col": 4},{"file": 15,"line": 2104,"col": 4,"docs": " initialize an inotify instance\n","fields": [6672]},{"file": 44,"line": 16,"col": 4},{"file": 15,"line": 2039,"col": 4,"fields": []},{"file": 15,"line": 1444,"col": 4,"fields": [6673,6674,6675]},{"file": 43,"line": 132,"col": 4},{"file": 15,"line": 68,"col": 4,"docs": " See also `getenv`. Populated by startup code before main().\n"},{"file": 43,"line": 81,"col": 4},{"file": 43,"line": 95,"col": 4},{"file": 15,"line": 2049,"col": 4},{"file": 15,"line": 2814,"col": 4},{"file": 15,"line": 1043,"col": 4,"docs": " Delete a name and possibly the file it refers to.\n See also `unlinkC`.\n","fields": [6676]},{"file": 43,"line": 225,"col": 4},{"file": 15,"line": 899,"col": 4,"docs": " Get an environment variable with a null-terminated name.\n See also `getenv`.\n TODO https://github.com/ziglang/zig/issues/265\n","fields": [6677]},{"file": 15,"line": 2928,"col": 4},{"file": 15,"line": 2172,"col": 4,"docs": " `memory.len` must be page-aligned.\n","fields": [6678,6679]},{"file": 15,"line": 1580,"col": 4,"fields": [6680,6681,6682]},{"file": 43,"line": 56,"col": 4,"docs": " return current value\n"},{"file": 15,"line": 27,"col": 4},{"file": 15,"line": 2288,"col": 4,"docs": " Same as `access` except `path` is null-terminated.\n","fields": [6683,6684]},{"file": 43,"line": 199,"col": 4},{"file": 15,"line": 933,"col": 4},{"file": 15,"line": 73,"col": 4,"docs": " Populated by startup code before main().\n Not available on Windows. See `std.process.args`\n for obtaining the process arguments.\n"},{"file": 15,"line": 245,"col": 4,"docs": " Exits the program cleanly with the specified status code.\n","fields": [6685]},{"file": 15,"line": 2183,"col": 4},{"file": 15,"line": 1400,"col": 4},{"file": 15,"line": 2346,"col": 4,"fields": [6686]},{"file": 15,"line": 116,"col": 4,"docs": " Obtain a series of random bytes. These bytes can be used to seed user-space\n random number generators or for cryptographic purposes.\n When linking against libc, this calls the\n appropriate OS-specific library call. Otherwise it uses the zig standard\n library implementation.\n","fields": [6687]},{"file": 43,"line": 24,"col": 4,"docs": " interrupt\n"},{"file": 15,"line": 53,"col": 4,"docs": " When linking libc, this is the C API. Otherwise, it is the OS-specific system interface.\n"},{"file": 15,"line": 2381,"col": 4,"fields": [6688,6689,6690,6691,6692]},{"file": 43,"line": 156,"col": 4},{"file": 15,"line": 25,"col": 4},{"file": 43,"line": 218,"col": 4},{"file": 15,"line": 30,"col": 4},{"file": 15,"line": 1668,"col": 4,"fields": [6693,6694]},{"file": 43,"line": 134,"col": 4},{"file": 43,"line": 92,"col": 4},{"file": 15,"line": 2216,"col": 4,"docs": " Map files or devices into memory.\n Use of a mapped region can result in these signals:\n * SIGSEGV - Attempted write into a region mapped as read-only.\n * SIGBUS - Attempted  access to a portion of the buffer that does not correspond to the file\n","fields": [6695,6696,6697,6698,6699,6700]},{"file": 15,"line": 2623,"col": 4,"docs": " Spurious wakeups are possible and no precision of timing is guaranteed.\n","fields": [6701,6702]},{"file": 15,"line": 2195,"col": 4},{"file": 15,"line": 2851,"col": 4},{"file": 43,"line": 125,"col": 4},{"file": 15,"line": 109,"col": 4},{"file": 43,"line": 139,"col": 4},{"file": 43,"line": 159,"col": 4},{"file": 15,"line": 759,"col": 4,"docs": " Like `execve` except the parameters are null-terminated,\n matching the syscall API on all targets. This removes the need for an allocator.\n This function ignores PATH environment variable. See `execvpeC` for that.\n","fields": [6703,6704,6705]},{"file": 43,"line": 138,"col": 4},{"file": 15,"line": 333,"col": 4,"docs": " Number of bytes read is returned. Upon reading end-of-file, zero is returned.\n If the application has a global event loop enabled, EAGAIN is handled\n via the event loop. Otherwise EAGAIN results in error.WouldBlock.\n","fields": [6706,6707]},{"file": 43,"line": 5,"col": 4},{"file": 15,"line": 1471,"col": 4,"fields": [6708]},{"file": 15,"line": 1381,"col": 4,"docs": " Same as `chdir` except the parameter is null-terminated.\n","fields": [6709]},{"file": 15,"line": 2397,"col": 4,"fields": [6710,6711]},{"file": 15,"line": 2714,"col": 4},{"file": 15,"line": 2010,"col": 4,"fields": [6712]},{"file": 15,"line": 2790,"col": 4,"fields": [6713,6714]},{"file": 43,"line": 72,"col": 4},{"file": 15,"line": 1323,"col": 4,"docs": " Deletes an empty directory.\n","fields": [6715]},{"file": 43,"line": 203,"col": 4},{"file": 43,"line": 221,"col": 4},{"file": 15,"line": 691,"col": 4,"docs": " Open and possibly create a file. Keeps trying if it gets interrupted.\n `file_path` is relative to the open directory handle `dir_fd`.\n See also `openatC`.\n","fields": [6716,6717,6718,6719]},{"file": 15,"line": 32,"col": 4},{"file": 15,"line": 1869,"col": 4},{"file": 15,"line": 2277,"col": 4,"docs": " check user's permissions for a file\n TODO currently this assumes `mode` is `F_OK` on Windows.\n","fields": [6720,6721]},{"file": 43,"line": 206,"col": 4},{"file": 43,"line": 96,"col": 4},{"file": 43,"line": 152,"col": 4},{"file": 15,"line": 3124,"col": 4},{"file": 43,"line": 135,"col": 4},{"file": 43,"line": 33,"col": 4,"docs": " segment violation\n"},{"file": 15,"line": 31,"col": 4},{"file": 15,"line": 1284,"col": 4,"docs": " Same as `mkdir` but the parameter is a null-terminated UTF8-encoded string.\n","fields": [6722,6723]},{"file": 43,"line": 113,"col": 4},{"file": 43,"line": 19,"col": 4,"docs": " maximum signal number + 1\n"},{"file": 15,"line": 2805,"col": 4,"docs": " Examine and change a signal action.\n","fields": [6724,6725,6726]},{"file": 43,"line": 85,"col": 4},{"file": 43,"line": 166,"col": 4},{"file": 15,"line": 2131,"col": 4,"docs": " Same as `inotify_add_watch` except pathname is null-terminated.\n","fields": [6727,6728,6729]},{"file": 15,"line": 232,"col": 4},{"file": 15,"line": 508,"col": 4,"docs": " Write multiple buffers to a file descriptor.\n If the application has a global event loop enabled, EAGAIN is handled\n via the event loop. Otherwise EAGAIN results in error.WouldBlock.\n","fields": [6730,6731]},{"file": 15,"line": 2554,"col": 4,"docs": " Return the canonicalized absolute pathname.\n Expands all symbolic links and resolves references to `.`, `..`, and\n extra `/` characters in `pathname`.\n The return value is a slice of `out_buffer`, but not necessarily from the beginning.\n See also `realpathC` and `realpathW`.\n","fields": [6732,6733]},{"file": 43,"line": 223,"col": 4},{"file": 15,"line": 1680,"col": 4},{"file": 15,"line": 1993,"col": 4,"fields": [6734,6735]},{"file": 43,"line": 102,"col": 4},{"file": 15,"line": 1632,"col": 4,"docs": " addr is `*const T` where T is one of the sockaddr\n","fields": [6736,6737,6738]},{"file": 15,"line": 968,"col": 4,"docs": " This is the same as `symlink` except the parameters are null-terminated pointers.\n See also `symlink`.\n","fields": [6739,6740]},{"file": 43,"line": 108,"col": 4},{"file": 43,"line": 153,"col": 4},{"file": 15,"line": 3094,"col": 4,"fields": [6741,6742,6743,6744,6745]},{"file": 43,"line": 128,"col": 4},{"file": 15,"line": 2008,"col": 4},{"file": 43,"line": 30,"col": 4,"docs": " floating point exception\n"},{"file": 43,"line": 215,"col": 4},{"file": 15,"line": 1855,"col": 4,"fields": [6746,6747]},{"file": 15,"line": 1465,"col": 4},{"file": 15,"line": 2493,"col": 4,"docs": " Returns the read/write file offset relative to the beginning.\n","fields": [6748]},{"file": 15,"line": 1358,"col": 4},{"file": 15,"line": 1834,"col": 4,"docs": " Waits for an I/O event on an epoll file descriptor.\n Returns the number of file descriptors ready for the requested I/O,\n or zero if no file descriptor became ready during the requested timeout milliseconds.\n","fields": [6749,6750,6751]},{"file": 43,"line": 118,"col": 4},{"file": 43,"line": 97,"col": 4},{"file": 15,"line": 817,"col": 4,"docs": " This function must allocate memory to add a null terminating bytes on path and each arg.\n It must also convert to KEY=VALUE\\0 format for environment variables, and include null\n pointers after the args and after the environment variables.\n `argv_slice[0]` is the executable path.\n This function also uses the PATH environment variable to get the full path to the executable.\n","fields": [6752,6753,6754]},{"file": 15,"line": 2716,"col": 4,"fields": [6755,6756]},{"file": 43,"line": 141,"col": 4},{"file": 15,"line": 2564,"col": 4,"docs": " Same as `realpath` except `pathname` is null-terminated.\n","fields": [6757,6758]},{"file": 15,"line": 2521,"col": 4},{"file": 43,"line": 93,"col": 4},{"file": 15,"line": 869,"col": 4,"fields": [6759,6760]},{"file": 15,"line": 33,"col": 4},{"file": 15,"line": 2097,"col": 4},{"file": 43,"line": 202,"col": 4},{"file": 15,"line": 2774,"col": 4,"docs": " Call this when you made a syscall or something that sets errno\n and you get an unexpected error.\n","fields": [6761]},{"file": 43,"line": 164,"col": 4},{"file": 43,"line": 146,"col": 4},{"file": 43,"line": 172,"col": 4},{"file": 15,"line": 1761,"col": 4},{"file": 43,"line": 149,"col": 4},{"file": 15,"line": 1334,"col": 4,"docs": " Same as `rmdir` except the parameter is null-terminated.\n","fields": [6762]},{"file": 43,"line": 84,"col": 4},{"file": 43,"line": 94,"col": 4},{"file": 43,"line": 220,"col": 4},{"file": 15,"line": 2763,"col": 4,"docs": " Whether or not error.Unexpected will print its value and a stack trace.\n if this happens the fix is to add the error code to the corresponding\n switch expression, possibly introduce a new error in the error set, and\n send a patch to Zig.\n"},{"file": 43,"line": 11,"col": 4},{"file": 43,"line": 77,"col": 4},{"file": 15,"line": 361,"col": 4,"docs": " Number of bytes read is returned. Upon reading end-of-file, zero is returned.\n If the application has a global event loop enabled, EAGAIN is handled\n via the event loop. Otherwise EAGAIN results in error.WouldBlock.\n","fields": [6763,6764,6765]},{"file": 43,"line": 110,"col": 4},{"file": 15,"line": 1706,"col": 4,"docs": " Accept a connection on a socket.\n If the application has a global event loop enabled, EAGAIN is handled\n via the event loop. Otherwise EAGAIN results in error.WouldBlock.\n","fields": [6766,6767,6768,6769]},{"file": 15,"line": 81,"col": 4,"docs": " To obtain errno, call this function with the return value of the\n system function call. For some systems this will obtain the value directly\n from the return code; for others it will use a thread-local errno variable.\n Therefore, this function only returns a well-defined value when it is called\n directly after the system function call which one wants to learn the errno\n value of.\n"},{"file": 15,"line": 538,"col": 4,"docs": " Write multiple buffers to a file descriptor, with a position offset.\n Keeps trying if it gets interrupted.\n","fields": [6770,6771,6772]},{"file": 43,"line": 82,"col": 4},{"file": 43,"line": 88,"col": 4},{"file": 15,"line": 1218,"col": 4,"docs": " Same as `rename` except the parameters are null-terminated byte arrays.\n","fields": [6773,6774]},{"file": 43,"line": 27,"col": 4,"docs": " illegal instruction - invalid function image\n"},{"file": 43,"line": 213,"col": 4},{"file": 15,"line": 1555,"col": 4},{"file": 43,"line": 119,"col": 4},{"file": 15,"line": 1887,"col": 4},{"file": 43,"line": 103,"col": 4},{"file": 15,"line": 1205,"col": 4,"docs": " Change the name or location of a file.\n","fields": [6775,6776]},{"file": 43,"line": 50,"col": 4,"docs": " default signal action\n"},{"file": 43,"line": 142,"col": 4},{"file": 15,"line": 2725,"col": 4,"fields": [6777,6778]},{"file": 43,"line": 216,"col": 4},{"file": 43,"line": 154,"col": 4},{"file": 43,"line": 207,"col": 4},{"file": 15,"line": 907,"col": 4},{"file": 43,"line": 226,"col": 4},{"file": 15,"line": 2595,"col": 4,"docs": " Same as `realpath` except `pathname` is null-terminated and UTF16LE-encoded.\n","fields": [6779,6780]},{"file": 43,"line": 194,"col": 4},{"file": 15,"line": 26,"col": 4},{"file": 15,"line": 1123,"col": 4,"docs": " Same as `unlinkat` but `sub_path_w` is UTF16LE, NT prefixed. Windows only.\n","fields": [6781,6782,6783]},{"file": 15,"line": 2750,"col": 4,"docs": " Used to convert a slice to a null terminated slice on the stack.\n TODO https://github.com/ziglang/zig/issues/287\n","fields": [6784]},{"file": 15,"line": 2263,"col": 4},{"file": 43,"line": 130,"col": 4},{"file": 15,"line": 18,"col": 0},{"file": 15,"line": 23,"col": 0},{"file": 15,"line": 22,"col": 0},{"file": 15,"line": 1653,"col": 0},{"file": 15,"line": 21,"col": 0},{"file": 15,"line": 19,"col": 0},{"file": 15,"line": 16,"col": 0},{"file": 15,"line": 17,"col": 0},{"file": 15,"line": 158,"col": 0,"fields": [6785]},{"file": 15,"line": 1185,"col": 0},{"file": 15,"line": 20,"col": 0},{"file": 16,"line": 1405,"col": 4},{"file": 16,"line": 139,"col": 4,"docs": " Returns a slice with the same pointer as addresses, with a potentially smaller len.\n On Windows, when first_address is not null, we ask for at least 32 stack frames,\n and then try to find the first address. If addresses.len is more than 32, we\n capture that many stack frames exactly, and then look for the first address,\n chopping off the irrelevant frames and shifting so that the returned addresses pointer\n equals the passed in addresses pointer.\n","fields": [6786,6787]},{"file": 16,"line": 2355,"col": 4,"docs": " Whether or not the current target can print useful debug information when a segfault occurs.\n"},{"file": 16,"line": 1256,"col": 4},{"file": 16,"line": 2356,"col": 4},{"file": 16,"line": 19,"col": 4},{"file": 16,"line": 1229,"col": 4},{"file": 16,"line": 1227,"col": 4},{"file": 16,"line": 1226,"col": 4},{"file": 16,"line": 276,"col": 4},{"file": 16,"line": 828,"col": 4},{"file": 16,"line": 21,"col": 4},{"file": 16,"line": 24,"col": 4},{"file": 16,"line": 110,"col": 4,"docs": " Tries to print the stack trace starting from the supplied base pointer to stderr,\n unbuffered, and ignores any error returned.\n TODO multithreaded awareness\n","fields": [6788,6789]},{"file": 16,"line": 2452,"col": 4,"fields": [6790]},{"file": 16,"line": 67,"col": 4,"fields": []},{"file": 16,"line": 22,"col": 4},{"file": 16,"line": 775,"col": 4,"fields": [6791,6792,6793,6794]},{"file": 16,"line": 1031,"col": 4,"docs": " Initialize DWARF info. The caller has the responsibility to initialize most\n the DwarfInfo fields before calling. These fields can be left undefined:\n * abbrev_table_list\n * compile_unit_list\n","fields": [6795,6796]},{"file": 16,"line": 735,"col": 4,"docs": " This function works in freestanding mode.\n fn printLineFromFile(out_stream: var, line_info: LineInfo) !void\n","fields": [6797,6798,6799,6800,6801]},{"file": 16,"line": 2339,"col": 4,"docs": " This should only be used in temporary test programs.\n"},{"file": 16,"line": 1039,"col": 4,"fields": [6802,6803,6804]},{"file": 16,"line": 1512,"col": 0,"fields": [6805,6806,6807]},{"file": 16,"line": 2,"col": 0},{"file": 16,"line": 252,"col": 0},{"file": 16,"line": 1664,"col": 0,"docs": " Gets an already existing AbbrevTable given the abbrev_offset, or if not found,\n seeks in the stream and parses it.\n","fields": [6808,6809]},{"file": 16,"line": 2285,"col": 0,"fields": [6810,6811,6812]},{"file": 16,"line": 1562,"col": 0,"fields": [6813]},{"file": 16,"line": 8,"col": 0},{"file": 16,"line": 1495,"col": 0,"fields": [6814,6815]},{"file": 16,"line": 220,"col": 0,"docs": " TODO multithreaded awareness\n"},{"file": 16,"line": 4,"col": 0},{"file": 16,"line": 1398,"col": 0},{"file": 16,"line": 43,"col": 0},{"file": 16,"line": 254,"col": 0},{"file": 16,"line": 7,"col": 0},{"file": 16,"line": 1096,"col": 0,"fields": [6816]},{"file": 16,"line": 2069,"col": 0},{"file": 16,"line": 2299,"col": 0,"fields": [6817]},{"file": 16,"line": 2303,"col": 0,"fields": [6818,6819]},{"file": 16,"line": 1205,"col": 0},{"file": 16,"line": 1525,"col": 0,"fields": [6820,6821,6822]},{"file": 16,"line": 3,"col": 0},{"file": 16,"line": 1417,"col": 0},{"file": 16,"line": 251,"col": 0},{"file": 16,"line": 14,"col": 0},{"file": 16,"line": 1328,"col": 0},{"file": 16,"line": 15,"col": 0},{"file": 16,"line": 1637,"col": 0,"fields": [6823]},{"file": 16,"line": 10,"col": 0},{"file": 16,"line": 2188,"col": 0,"fields": [6824]},{"file": 16,"line": 1685,"col": 0,"fields": [6825,6826,6827]},{"file": 16,"line": 1530,"col": 0,"fields": [6828,6829,6830,6831]},{"file": 16,"line": 253,"col": 0},{"file": 16,"line": 250,"col": 0},{"file": 16,"line": 2074,"col": 0,"fields": [6832,6833]},{"file": 16,"line": 5,"col": 0},{"file": 16,"line": 16,"col": 0},{"file": 16,"line": 1519,"col": 0,"fields": [6834,6835,6836]},{"file": 16,"line": 779,"col": 0,"fields": [6837,6838,6839,6840,6841,6842,6843]},{"file": 16,"line": 1295,"col": 0},{"file": 16,"line": 1338,"col": 0},{"file": 16,"line": 6,"col": 0},{"file": 16,"line": 9,"col": 0},{"file": 16,"line": 13,"col": 0},{"file": 16,"line": 2367,"col": 0},{"file": 16,"line": 2344,"col": 0,"docs": " TODO multithreaded awareness\n"},{"file": 16,"line": 1288,"col": 0},{"file": 16,"line": 558,"col": 0},{"file": 16,"line": 1574,"col": 0,"fields": [6844,6845,6846]},{"file": 16,"line": 1,"col": 0},{"file": 16,"line": 2340,"col": 0},{"file": 16,"line": 42,"col": 0,"docs": " Tries to write to stderr, unbuffered, and ignores any error returned.\n Does not append a newline.\n"},{"file": 16,"line": 1315,"col": 0},{"file": 16,"line": 1064,"col": 0,"fields": [6847]},{"file": 16,"line": 2341,"col": 0},{"file": 16,"line": 2253,"col": 0,"fields": [6848,6849]},{"file": 16,"line": 2326,"col": 0,"fields": [6850,6851,6852]},{"file": 16,"line": 1303,"col": 0},{"file": 16,"line": 1705,"col": 0,"fields": [6853,6854,6855]},{"file": 16,"line": 29,"col": 0},{"file": 16,"line": 45,"col": 0},{"file": 16,"line": 46,"col": 0},{"file": 16,"line": 2086,"col": 0,"fields": [6856]},{"file": 16,"line": 11,"col": 0},{"file": 16,"line": 1283,"col": 0},{"file": 16,"line": 2320,"col": 0,"fields": [6857]},{"file": 16,"line": 2293,"col": 0,"fields": [6858]},{"file": 16,"line": 1019,"col": 0,"fields": [6859,6860]},{"file": 16,"line": 0,"col": 0},{"file": 16,"line": 1557,"col": 0,"fields": [6861,6862]},{"file": 16,"line": 674,"col": 0,"fields": [6863,6864]},{"file": 16,"line": 1310,"col": 0},{"file": 16,"line": 1505,"col": 0,"fields": [6865,6866]},{"file": 16,"line": 2403,"col": 0,"fields": [6867,6868,6869]},{"file": 16,"line": 692,"col": 0,"fields": [6870,6871,6872,6873]},{"file": 16,"line": 1297,"col": 0},{"file": 16,"line": 1678,"col": 0,"fields": [6874,6875]},{"file": 16,"line": 17,"col": 0},{"file": 16,"line": 72,"col": 0,"docs": " TODO multithreaded awareness\n"},{"file": 16,"line": 1903,"col": 0,"fields": [6876,6877,6878]},{"file": 16,"line": 12,"col": 0},{"file": 16,"line": 1588,"col": 0,"fields": [6879,6880,6881,6882]},{"file": 16,"line": 1220,"col": 0},{"file": 16,"line": 2345,"col": 0},{"file": 16,"line": 249,"col": 0},{"file": 17,"line": 129,"col": 4,"docs": " This function is intended to be used only in tests. When the two slices are not\n equal, prints diagnostics to stderr to show exactly how they are not equal,\n then aborts.\n","fields": [6883,6884,6885]},{"file": 17,"line": 147,"col": 4,"docs": " This function is intended to be used only in tests. When `ok` is false, the test fails.\n A message is printed to stderr and then abort is called.\n","fields": [6886]},{"file": 17,"line": 6,"col": 4,"docs": " This function is intended to be used only in tests. It prints diagnostics to stderr\n and then aborts when actual_error_union is not expected_error.\n","fields": [6887,6888]},{"file": 17,"line": 0,"col": 0},{"file": 17,"line": 2,"col": 0},{"file": 17,"line": 1,"col": 0},{"file": 18,"line": 5,"col": 4},{"file": 18,"line": 3,"col": 4},{"file": 18,"line": 4,"col": 4},{"file": 18,"line": 0,"col": 4},{"file": 18,"line": 1,"col": 4},{"file": 18,"line": 6,"col": 4},{"file": 18,"line": 7,"col": 4},{"file": 18,"line": 2,"col": 4},{"file": 18,"line": 8,"col": 4},{"file": 19,"line": 210,"col": 4},{"file": 19,"line": 175,"col": 4,"docs": " Utf8View iterates the code points of a utf-8 encoded string.\n\n ```\n var utf8 = (try std.unicode.Utf8View.init(\"hi there\")).iterator();\n while (utf8.nextCodepointSlice()) |codepoint| {\n   std.debug.warn(\"got codepoint {}\\n\", codepoint);\n }\n ```\n"},{"file": 19,"line": 237,"col": 4},{"file": 19,"line": 1,"col": 0},{"file": 19,"line": 395,"col": 0,"fields": []},{"file": 19,"line": 440,"col": 0,"fields": []},{"file": 19,"line": 299,"col": 0,"fields": []},{"file": 19,"line": 459,"col": 0,"fields": [6889]},{"file": 19,"line": 451,"col": 0,"fields": [6890,6891]},{"file": 19,"line": 0,"col": 0},{"file": 19,"line": 78,"col": 0},{"file": 19,"line": 315,"col": 0,"fields": []},{"file": 19,"line": 345,"col": 0,"fields": []},{"file": 19,"line": 376,"col": 0,"fields": []},{"file": 19,"line": 3,"col": 0},{"file": 19,"line": 62,"col": 0},{"file": 19,"line": 120,"col": 0},{"file": 19,"line": 273,"col": 0,"fields": []},{"file": 19,"line": 307,"col": 0,"fields": [6892,6893,6894]},{"file": 19,"line": 365,"col": 0,"fields": []},{"file": 19,"line": 96,"col": 0},{"file": 19,"line": 455,"col": 0,"fields": [6895,6896]},{"file": 19,"line": 2,"col": 0},{"file": 19,"line": 427,"col": 0,"fields": []},{"file": 19,"line": 4,"col": 0},{"file": 19,"line": 335,"col": 0,"fields": []},{"file": 20,"line": 91,"col": 4,"fields": [6897]},{"file": 20,"line": 879,"col": 4},{"file": 20,"line": 28,"col": 4,"docs": " The application's chosen I/O mode. This defaults to `Mode.blocking` but can be overridden\n by `root.event_loop`.\n"},{"file": 20,"line": 59,"col": 4},{"file": 20,"line": 620,"col": 4,"docs": " Implementation of OutStream trait for Buffer\n"},{"file": 20,"line": 36,"col": 4,"fields": []},{"file": 20,"line": 1074,"col": 4,"docs": " Creates a serializer that serializes types to any stream.\n  If `is_packed` is true, the data will be bit-packed into the stream.\n  Note that the you must call `serializer.flush()` when you are done\n  writing bit-packed data in order ensure any unwritten bits are committed.\n  If `is_packed` is false, data is packed to the smallest byte. In the case\n  of packed structs, the struct will written bit-packed and with the specified\n  endianess, after which data will resume being written at the next byte boundary.\n  Types may implement a custom serialization routine with a\n  function named `serialize` in the form of:\n    pub fn serialize(self: Self, serializer: var) !void\n  which will be called when the serializer is used to serialize that type. It will\n  pass a const pointer to the type instance to be serialized and a pointer\n  to the serializer struct.\n","fields": [6898,6899,6900]},{"file": 20,"line": 641,"col": 4,"docs": " Creates a stream which allows for writing bit fields to another stream\n","fields": [6901,6902]},{"file": 20,"line": 564,"col": 4,"fields": [6903]},{"file": 20,"line": 301,"col": 4,"docs": " Creates a stream which allows for reading bit fields from another stream\n","fields": [6904,6905]},{"file": 20,"line": 18,"col": 4},{"file": 20,"line": 503,"col": 4},{"file": 20,"line": 769,"col": 4},{"file": 20,"line": 506,"col": 4,"docs": " An OutStream that doesn't write to anything.\n"},{"file": 20,"line": 817,"col": 4,"docs": " Reads all characters until the next newline into buf, and returns\n a slice of the characters read (excluding the newline character(s)).\n","fields": [6906,6907]},{"file": 20,"line": 206,"col": 4,"docs": " Creates a stream which supports 'un-reading' data, so that it can be read again.\n This makes look-ahead style parsing much easier.\n","fields": [6908,6909]},{"file": 20,"line": 60,"col": 4},{"file": 20,"line": 34,"col": 4},{"file": 20,"line": 568,"col": 4,"fields": [6910,6911]},{"file": 20,"line": 896,"col": 4,"docs": " Creates a deserializer that deserializes types from any stream.\n  If `is_packed` is true, the data stream is treated as bit-packed,\n  otherwise data is expected to be packed to the smallest byte.\n  Types may implement a custom deserialization routine with a\n  function named `deserialize` in the form of:\n    pub fn deserialize(self: *Self, deserializer: var) !void\n  which will be called when the deserializer is used to deserialize\n  that type. It will pass a pointer to the type instance to deserialize\n  into and a pointer to the deserializer struct.\n","fields": [6912,6913,6914]},{"file": 20,"line": 810,"col": 4,"fields": [6915]},{"file": 20,"line": 270,"col": 4},{"file": 20,"line": 858,"col": 4,"docs": " Reads all characters until the next newline into slice, and returns\n a slice of the characters read (excluding the newline character(s)).\n","fields": [6916,6917]},{"file": 20,"line": 95,"col": 4,"fields": [6918,6919]},{"file": 20,"line": 58,"col": 4},{"file": 20,"line": 61,"col": 4},{"file": 20,"line": 449,"col": 4,"docs": " This is a simple OutStream that writes to a fixed buffer, and returns an error\n when it runs out of space.\n"},{"file": 20,"line": 72,"col": 4,"docs": " On success, caller owns returned buffer.\n TODO move this to `std.fs` and add a version to `std.fs.Dir`.\n","fields": [6920,6921]},{"file": 20,"line": 57,"col": 4},{"file": 20,"line": 64,"col": 4,"docs": " TODO move this to `std.fs` and add a version to `std.fs.Dir`.\n","fields": [6922,6923]},{"file": 20,"line": 851,"col": 4,"fields": [6924]},{"file": 20,"line": 528,"col": 4,"docs": " An OutStream that counts how many bytes has been written to it.\n","fields": [6925]},{"file": 20,"line": 50,"col": 4,"fields": []},{"file": 20,"line": 78,"col": 4,"docs": " On success, caller owns returned buffer.\n TODO move this to `std.fs` and add a version to `std.fs.Dir`.\n","fields": [6926,6927,6928]},{"file": 20,"line": 1,"col": 0},{"file": 20,"line": 5,"col": 0},{"file": 20,"line": 8,"col": 0},{"file": 20,"line": 6,"col": 0},{"file": 20,"line": 13,"col": 0},{"file": 20,"line": 16,"col": 0},{"file": 20,"line": 502,"col": 0},{"file": 20,"line": 12,"col": 0},{"file": 20,"line": 14,"col": 0},{"file": 20,"line": 2,"col": 0},{"file": 20,"line": 0,"col": 0},{"file": 20,"line": 3,"col": 0},{"file": 20,"line": 11,"col": 0},{"file": 20,"line": 9,"col": 0},{"file": 20,"line": 15,"col": 0},{"file": 20,"line": 7,"col": 0},{"file": 20,"line": 10,"col": 0},{"file": 21,"line": 1074,"col": 4,"fields": [6929,6930]},{"file": 21,"line": 10,"col": 4},{"file": 21,"line": 1578,"col": 4,"fields": [6931]},{"file": 21,"line": 573,"col": 4,"fields": [6932,6933,6934,6935,6936]},{"file": 21,"line": 698,"col": 4,"fields": [6937,6938,6939,6940,6941]},{"file": 21,"line": 1552,"col": 4,"fields": [6942]},{"file": 21,"line": 603,"col": 4,"fields": [6943,6944,6945,6946,6947]},{"file": 21,"line": 1068,"col": 4},{"file": 21,"line": 843,"col": 4,"fields": [6948,6949,6950,6951,6952,6953]},{"file": 21,"line": 1120,"col": 4,"fields": [6954,6955,6956],"varArgs": true},{"file": 21,"line": 998,"col": 4,"fields": [6957,6958,6959]},{"file": 21,"line": 18,"col": 4},{"file": 21,"line": 1108,"col": 4},{"file": 21,"line": 981,"col": 4,"fields": [6960,6961,6962,6963,6964]},{"file": 21,"line": 1118,"col": 4},{"file": 21,"line": 1585,"col": 4,"fields": [6965,6966]},{"file": 21,"line": 583,"col": 4,"fields": [6967,6968,6969,6970,6971]},{"file": 21,"line": 1028,"col": 4,"fields": [6972,6973,6974]},{"file": 21,"line": 12,"col": 4},{"file": 21,"line": 5,"col": 0},{"file": 21,"line": 6,"col": 0},{"file": 21,"line": 1095,"col": 0},{"file": 21,"line": 1129,"col": 0,"fields": [6975,6976]},{"file": 21,"line": 1,"col": 0},{"file": 21,"line": 7,"col": 0},{"file": 21,"line": 25,"col": 0,"fields": [6977,6978,6979]},{"file": 21,"line": 989,"col": 0},{"file": 21,"line": 2,"col": 0},{"file": 21,"line": 4,"col": 0},{"file": 21,"line": 534,"col": 0,"fields": [6980,6981,6982,6983,6984,6985]},{"file": 21,"line": 36,"col": 0,"fields": [6986]},{"file": 21,"line": 1539,"col": 0,"fields": [6987,6988,6989],"varArgs": true},{"file": 21,"line": 1151,"col": 0,"fields": [6990,6991,6992,6993,6994]},{"file": 21,"line": 1020,"col": 0},{"file": 21,"line": 0,"col": 0},{"file": 21,"line": 993,"col": 0,"fields": [6995,6996]},{"file": 21,"line": 8,"col": 0},{"file": 21,"line": 3,"col": 0},{"file": 22,"line": 1,"col": 4},{"file": 22,"line": 2,"col": 4},{"file": 22,"line": 0,"col": 4},{"file": 23,"line": 422,"col": 4},{"file": 23,"line": 355,"col": 4,"docs": " The following variable length array appears immediately after the header.\n The structure definition follows.\n LineBlockFragmentHeader Blocks[]\n Each `LineBlockFragmentHeader` as specified below.\n"},{"file": 23,"line": 16,"col": 4},{"file": 23,"line": 310,"col": 4},{"file": 23,"line": 52,"col": 4},{"file": 23,"line": 39,"col": 4},{"file": 23,"line": 377,"col": 4,"docs": " The following two variable length arrays appear immediately after the\n header.  The structure definitions follow.\n LineNumberEntry   Lines[NumLines];\n ColumnNumberEntry Columns[NumLines];\n"},{"file": 23,"line": 450,"col": 4},{"file": 23,"line": 405,"col": 4},{"file": 23,"line": 389,"col": 4},{"file": 23,"line": 442,"col": 4},{"file": 23,"line": 327,"col": 4},{"file": 23,"line": 343,"col": 4},{"file": 23,"line": 461,"col": 4},{"file": 23,"line": 70,"col": 4},{"file": 23,"line": 102,"col": 4},{"file": 23,"line": 111,"col": 4,"docs": " Duplicate copy of SymbolRecordKind, but using the official CV names. Useful\n for reference purposes and when dealing with unknown record types.\n"},{"file": 23,"line": 312,"col": 4},{"file": 23,"line": 411,"col": 4,"docs": " Checksum bytes follow.\n"},{"file": 23,"line": 78,"col": 4},{"file": 23,"line": 338,"col": 4},{"file": 23,"line": 367,"col": 4},{"file": 23,"line": 0,"col": 0},{"file": 23,"line": 581,"col": 0},{"file": 23,"line": 7,"col": 0},{"file": 23,"line": 3,"col": 0},{"file": 23,"line": 1,"col": 0},{"file": 23,"line": 627,"col": 0},{"file": 23,"line": 5,"col": 0},{"file": 23,"line": 8,"col": 0},{"file": 23,"line": 6,"col": 0},{"file": 23,"line": 2,"col": 0},{"file": 23,"line": 10,"col": 0},{"file": 23,"line": 491,"col": 0},{"file": 23,"line": 4,"col": 0},{"file": 24,"line": 256,"col": 4},{"file": 24,"line": 32,"col": 4},{"file": 24,"line": 24,"col": 4},{"file": 24,"line": 0,"col": 0},{"file": 24,"line": 21,"col": 0},{"file": 24,"line": 12,"col": 0},{"file": 24,"line": 22,"col": 0},{"file": 24,"line": 20,"col": 0},{"file": 24,"line": 235,"col": 0},{"file": 24,"line": 18,"col": 0},{"file": 24,"line": 11,"col": 0},{"file": 24,"line": 1,"col": 0},{"file": 24,"line": 4,"col": 0},{"file": 24,"line": 260,"col": 0},{"file": 24,"line": 5,"col": 0},{"file": 24,"line": 245,"col": 0},{"file": 24,"line": 225,"col": 0},{"file": 24,"line": 17,"col": 0},{"file": 24,"line": 13,"col": 0},{"file": 24,"line": 2,"col": 0},{"file": 24,"line": 7,"col": 0},{"file": 24,"line": 3,"col": 0},{"file": 25,"line": 6,"col": 4},{"file": 25,"line": 10,"col": 4},{"file": 25,"line": 24,"col": 4},{"file": 25,"line": 32,"col": 4},{"file": 25,"line": 19,"col": 4},{"file": 25,"line": 5,"col": 4},{"file": 25,"line": 21,"col": 4},{"file": 25,"line": 22,"col": 4},{"file": 25,"line": 15,"col": 4},{"file": 25,"line": 27,"col": 4},{"file": 25,"line": 25,"col": 4},{"file": 25,"line": 13,"col": 4},{"file": 25,"line": 14,"col": 4},{"file": 25,"line": 1,"col": 4},{"file": 25,"line": 18,"col": 4},{"file": 25,"line": 28,"col": 4},{"file": 25,"line": 9,"col": 4},{"file": 25,"line": 4,"col": 4},{"file": 25,"line": 29,"col": 4},{"file": 25,"line": 12,"col": 0},{"file": 25,"line": 31,"col": 0},{"file": 25,"line": 0,"col": 0},{"file": 25,"line": 3,"col": 0},{"file": 25,"line": 17,"col": 0},{"file": 26,"line": 393,"col": 4,"docs": "Compares two of any type for equality. Containers are compared on a field-by-field basis,\n where possible. Pointers are not followed.\n","fields": [6997,6998]},{"file": 26,"line": 74,"col": 4,"fields": [6999]},{"file": 26,"line": 161,"col": 4,"fields": [7000]},{"file": 26,"line": 547,"col": 4,"docs": " Given a type and a name, return the field index according to source order.\n Returns `null` if the field is not found.\n","fields": [7001,7002]},{"file": 26,"line": 556,"col": 4,"docs": " Given a type, reference all the declarations inside, so that the semantic analyzer sees them.\n","fields": [7003]},{"file": 26,"line": 532,"col": 4},{"file": 26,"line": 278,"col": 4,"fields": [7004,7005]},{"file": 26,"line": 341,"col": 4,"docs": "Returns the active tag of a tagged union\n","fields": [7006]},{"file": 26,"line": 197,"col": 4,"fields": [7007,7008]},{"file": 26,"line": 7,"col": 4},{"file": 26,"line": 318,"col": 4,"fields": [7009]},{"file": 26,"line": 118,"col": 4,"fields": [7010]},{"file": 26,"line": 12,"col": 4,"fields": [7011]},{"file": 26,"line": 534,"col": 4,"fields": [7012,7013]},{"file": 26,"line": 366,"col": 4,"docs": "Given a tagged union type, and an enum, return the type of the union\n field corresponding to the enum tag.\n","fields": [7014,7015]},{"file": 26,"line": 55,"col": 4,"fields": [7016,7017]},{"file": 26,"line": 233,"col": 4,"fields": [7018]},{"file": 26,"line": 3,"col": 0},{"file": 26,"line": 1,"col": 0},{"file": 26,"line": 4,"col": 0},{"file": 26,"line": 0,"col": 0},{"file": 26,"line": 2,"col": 0},{"file": 26,"line": 9,"col": 0},{"file": 26,"line": 5,"col": 0},{"file": 26,"line": 10,"col": 0},{"file": 27,"line": 1043,"col": 4},{"file": 27,"line": 289,"col": 4,"docs": " Calls makeDir recursively to make an entire path. Returns success if the path\n already exists and is a directory.\n This function is not atomic, and if it returns an error, the file system may\n have been modified regardless.\n TODO determine if we can remove the allocator requirement from this function\n","fields": [7019,7020]},{"file": 27,"line": 29,"col": 4,"docs": " This represents the maximum size of a UTF-8 encoded file path.\n All file system operations which return a path are guaranteed to\n fit into a UTF-8 encoded array of this length.\n"},{"file": 27,"line": 1136,"col": 4,"docs": " Read value of a symbolic link.\n The return value is a slice of buffer, from index `0`.\n","fields": [7021,7022]},{"file": 27,"line": 333,"col": 4,"docs": " Same as `deleteDir` except the parameter is a null-terminated UTF16LE-encoded string.\n","fields": [7023]},{"file": 27,"line": 1112,"col": 4,"docs": " Recursively iterates over a directory.\n Must call `Walker.deinit` when done.\n `dir_path` must not end in a path separator.\n The order of returned file system entries is undefined.\n","fields": [7024,7025]},{"file": 27,"line": 19,"col": 4},{"file": 27,"line": 1181,"col": 4,"docs": " Get the path to the current executable.\n If you only need the directory, use selfExeDirPath.\n If you only want an open file handle, use openSelfExe.\n This function may return an error if the current executable\n was deleted after spawning.\n Returned value is a slice of out_buffer.\n\n On Linux, depends on procfs being mounted. If the currently executing binary has\n been deleted, the file path looks something like `/a/b/c/exe (deleted)`.\n TODO make the return type of this a null terminated pointer\n","fields": [7026]},{"file": 27,"line": 87,"col": 4,"docs": " Check the file size, mtime, and mode of `source_path` and `dest_path`. If they are equal, does nothing.\n Otherwise, atomically copies `source_path` to `dest_path`. The destination file gains the mtime,\n atime, and mode of the source file so that the next call to `updateFile` will not need a copy.\n Returns the previous status of the file before updating.\n If any of the directories do not exist for dest_path, they are created.\n TODO https://github.com/ziglang/zig/issues/2885\n","fields": [7027,7028,7029]},{"file": 27,"line": 24,"col": 4},{"file": 27,"line": 17,"col": 4},{"file": 27,"line": 323,"col": 4,"docs": " Returns `error.DirNotEmpty` if the directory is not empty.\n To delete a directory recursively, see `deleteTree`.\n","fields": [7030]},{"file": 27,"line": 156,"col": 4,"docs": " Guaranteed to be atomic. However until https://patchwork.kernel.org/patch/9636735/ is\n merged and readily available,\n there is a possibility of power loss or application termination leaving temporary files present\n in the same directory as dest_path.\n Destination file will have the same mode as the source file.\n","fields": [7031,7032]},{"file": 27,"line": 359,"col": 4},{"file": 27,"line": 12,"col": 4},{"file": 27,"line": 9,"col": 4},{"file": 27,"line": 179,"col": 4,"docs": " Guaranteed to be atomic. However until https://patchwork.kernel.org/patch/9636735/ is\n merged and readily available,\n there is a possibility of power loss or application termination leaving temporary files present\n","fields": [7033,7034,7035]},{"file": 27,"line": 1247,"col": 4,"docs": " `realpath`, except caller must free the returned memory.\n","fields": [7036,7037]},{"file": 27,"line": 342,"col": 4,"docs": " Removes a symlink, file, or directory.\n If `full_path` is relative, this is equivalent to `Dir.deleteTree` with the\n current working directory as the open directory handle.\n If `full_path` is absolute, this is equivalent to `Dir.deleteTree` with the\n base directory.\n","fields": [7038]},{"file": 27,"line": 1169,"col": 4},{"file": 27,"line": 18,"col": 4},{"file": 27,"line": 270,"col": 4,"docs": " Create a new directory.\n","fields": [7039]},{"file": 27,"line": 1222,"col": 4,"docs": " `selfExeDirPath` except allocates the result on the heap.\n Caller owns returned memory.\n","fields": [7040]},{"file": 27,"line": 16,"col": 4},{"file": 27,"line": 13,"col": 4},{"file": 27,"line": 1145,"col": 4},{"file": 27,"line": 196,"col": 4},{"file": 27,"line": 280,"col": 4,"docs": " Same as `makeDir` except the parameter is a null-terminated UTF16LE-encoded string.\n","fields": [7041]},{"file": 27,"line": 77,"col": 4,"fields": [7042,7043]},{"file": 27,"line": 10,"col": 4},{"file": 27,"line": 20,"col": 4},{"file": 27,"line": 23,"col": 4},{"file": 27,"line": 21,"col": 4},{"file": 27,"line": 1229,"col": 4,"docs": " Get the directory path that contains the current executable.\n Returned value is a slice of out_buffer.\n","fields": [7044]},{"file": 27,"line": 14,"col": 4},{"file": 27,"line": 328,"col": 4,"docs": " Same as `deleteDir` except the parameter is a null-terminated UTF8-encoded string.\n","fields": [7045]},{"file": 27,"line": 275,"col": 4,"docs": " Same as `makeDir` except the parameter is a null-terminated UTF8-encoded string.\n","fields": [7046]},{"file": 27,"line": 43,"col": 4,"docs": " TODO remove the allocator requirement from this API\n","fields": [7047,7048,7049]},{"file": 27,"line": 15,"col": 4},{"file": 27,"line": 1141,"col": 4,"docs": " Same as `readLink`, except the parameter is null-terminated.\n","fields": [7050,7051]},{"file": 27,"line": 0,"col": 0},{"file": 27,"line": 40,"col": 0},{"file": 27,"line": 2,"col": 0},{"file": 27,"line": 6,"col": 0},{"file": 27,"line": 4,"col": 0},{"file": 27,"line": 5,"col": 0},{"file": 27,"line": 1,"col": 0},{"file": 27,"line": 267,"col": 0},{"file": 27,"line": 72,"col": 0},{"file": 27,"line": 7,"col": 0},{"file": 27,"line": 3,"col": 0},{"file": 28,"line": 583,"col": 4},{"file": 28,"line": 10,"col": 4},{"file": 28,"line": 424,"col": 4},{"file": 28,"line": 637,"col": 4,"fields": [7052,7053]},{"file": 28,"line": 337,"col": 4,"docs": " This allocator takes an existing allocator, wraps it, and provides an interface\n where you can allocate without freeing, and then free it all together.\n"},{"file": 28,"line": 491,"col": 4},{"file": 28,"line": 237,"col": 4},{"file": 28,"line": 14,"col": 4},{"file": 28,"line": 35,"col": 4,"docs": " This allocator makes a syscall directly for every allocation and free.\n Thread-safe and lock-free.\n"},{"file": 28,"line": 649,"col": 4,"fields": [7054]},{"file": 28,"line": 6,"col": 0},{"file": 28,"line": 865,"col": 0,"fields": [7055,7056]},{"file": 28,"line": 918,"col": 0,"fields": [7057]},{"file": 28,"line": 488,"col": 0,"fields": [7058]},{"file": 28,"line": 8,"col": 0},{"file": 28,"line": 502,"col": 0},{"file": 28,"line": 0,"col": 0},{"file": 28,"line": 7,"col": 0},{"file": 28,"line": 837,"col": 0,"fields": [7059]},{"file": 28,"line": 27,"col": 0,"fields": [7060,7061,7062,7063,7064]},{"file": 28,"line": 20,"col": 0,"fields": [7065,7066,7067,7068,7069]},{"file": 28,"line": 769,"col": 0},{"file": 28,"line": 492,"col": 0},{"file": 28,"line": 889,"col": 0,"fields": [7070]},{"file": 28,"line": 5,"col": 0},{"file": 28,"line": 1,"col": 0},{"file": 28,"line": 489,"col": 0,"fields": [7071,7072]},{"file": 28,"line": 3,"col": 0},{"file": 28,"line": 15,"col": 0},{"file": 28,"line": 41,"col": 0},{"file": 28,"line": 36,"col": 0},{"file": 28,"line": 12,"col": 0},{"file": 28,"line": 2,"col": 0},{"file": 28,"line": 4,"col": 0},{"file": 29,"line": 99,"col": 4,"docs": " A monotonic high-performance timer.\n Timer.start() must be called to initialize the struct, which captures\n   the counter frequency on windows and darwin, records the resolution,\n   and gives the user an opportunity to check for the existnece of\n   monotonic clocks without forcing them to check for error on each read.\n .resolution is in nanoseconds on all platforms but .start_time's meaning\n   depends on the OS. On Windows and Darwin it is a hardware counter\n   value that requires calculation to convert to a meaninful unit.\n"},{"file": 29,"line": 73,"col": 4},{"file": 29,"line": 31,"col": 4,"docs": " Get the posix timestamp, UTC, in milliseconds\n TODO audit this function. is it possible to return an error?\n","fields": []},{"file": 29,"line": 88,"col": 4},{"file": 29,"line": 89,"col": 4},{"file": 29,"line": 77,"col": 4},{"file": 29,"line": 80,"col": 4,"docs": " Divisions of a second\n"},{"file": 29,"line": 87,"col": 4},{"file": 29,"line": 72,"col": 4,"docs": " Multiples of a base unit (nanoseconds)\n"},{"file": 29,"line": 75,"col": 4},{"file": 29,"line": 25,"col": 4,"docs": " Get the posix timestamp, UTC, in seconds\n TODO audit this function. is it possible to return an error?\n","fields": []},{"file": 29,"line": 7,"col": 4},{"file": 29,"line": 76,"col": 4},{"file": 29,"line": 74,"col": 4},{"file": 29,"line": 86,"col": 4,"docs": " Common time divisions\n"},{"file": 29,"line": 82,"col": 4},{"file": 29,"line": 81,"col": 4},{"file": 29,"line": 83,"col": 4},{"file": 29,"line": 0,"col": 0},{"file": 29,"line": 5,"col": 0},{"file": 29,"line": 1,"col": 0},{"file": 29,"line": 4,"col": 0},{"file": 29,"line": 3,"col": 0},{"file": 29,"line": 2,"col": 0},{"file": 38,"line": 42,"col": 8,"docs": " Represents one unit of progress. Each node can have children nodes, or\n one can use integers with `update`.\n"},{"file": 40,"line": 418,"col": 8,"fields": [7073]},{"file": 40,"line": 549,"col": 8,"fields": [7074]},{"file": 40,"line": 209,"col": 8,"fields": [7075,7076]},{"file": 40,"line": 474,"col": 8,"fields": [7077]},{"file": 40,"line": 207,"col": 8},{"file": 40,"line": 404,"col": 8,"fields": [7078]},{"file": 40,"line": 492,"col": 8,"fields": [7079]},{"file": 40,"line": 467,"col": 8,"fields": [7080]},{"file": 40,"line": 260,"col": 8,"fields": [7081,7082]},{"file": 40,"line": 481,"col": 8,"fields": [7083]},{"file": 40,"line": 350,"col": 8,"fields": [7084]},{"file": 40,"line": 430,"col": 8,"fields": [7085]},{"file": 40,"line": 499,"col": 8,"fields": [7086]},{"file": 40,"line": 411,"col": 8,"fields": [7087]},{"file": 40,"line": 527,"col": 8,"fields": [7088]},{"file": 40,"line": 485,"col": 8,"fields": [7089]},{"file": 40,"line": 254,"col": 8,"fields": [7090,7091]},{"file": 40,"line": 221,"col": 8,"docs": " Returned slice must be freed by the caller.\n","fields": [7092,7093,7094]},{"file": 40,"line": 440,"col": 8,"fields": [7095]},{"file": 40,"line": 11,"col": 8},{"file": 40,"line": 149,"col": 8},{"file": 40,"line": 193,"col": 8},{"file": 40,"line": 545,"col": 8,"fields": [7096]},{"file": 40,"line": 345,"col": 8},{"file": 40,"line": 270,"col": 8,"fields": [7097,7098]},{"file": 40,"line": 541,"col": 8,"fields": [7099]},{"file": 40,"line": 174,"col": 8},{"file": 40,"line": 199,"col": 8},{"file": 40,"line": 609,"col": 8},{"file": 40,"line": 371,"col": 8,"fields": [7100]},{"file": 40,"line": 460,"col": 8,"fields": [7101]},{"file": 40,"line": 450,"col": 8,"fields": [7102]},{"file": 40,"line": 51,"col": 8},{"file": 40,"line": 534,"col": 8,"fields": [7103]},{"file": 40,"line": 182,"col": 8},{"file": 40,"line": 280,"col": 8,"fields": [7104]},{"file": 40,"line": 506,"col": 8,"fields": [7105]},{"file": 40,"line": 616,"col": 8,"fields": [7106]},{"file": 40,"line": 381,"col": 8,"fields": [7107]},{"file": 40,"line": 513,"col": 8,"fields": [7108]},{"file": 40,"line": 295,"col": 8,"fields": [7109,7110]},{"file": 40,"line": 520,"col": 8,"fields": [7111]},{"file": 40,"line": 391,"col": 4,"fields": [7112]},{"file": 36,"line": 40,"col": 8,"docs": " Provides a method to incrementally yield longer each time its called.\n"},{"file": 36,"line": 21,"col": 8,"fields": [7113]},{"file": 36,"line": 17,"col": 8,"fields": []},{"file": 36,"line": 9,"col": 8},{"file": 30,"line": 37,"col": 4,"docs": " Caller must free result when done.\n TODO make this go through libc when we have it\n","fields": [7114]},{"file": 30,"line": 13,"col": 4},{"file": 30,"line": 14,"col": 4},{"file": 30,"line": 347,"col": 4},{"file": 30,"line": 171,"col": 4},{"file": 30,"line": 454,"col": 4,"fields": [7115,7116]},{"file": 30,"line": 515,"col": 4,"docs": " TODO this reads /etc/passwd. But sometimes the user/id mapping is in something else\n like NIS, AD, etc. See `man nss` or look at an strace for `id myuser`.\n","fields": [7117]},{"file": 30,"line": 15,"col": 4},{"file": 30,"line": 389,"col": 4,"docs": " Caller must call argsFree on result.\n","fields": [7118]},{"file": 30,"line": 500,"col": 4},{"file": 30,"line": 18,"col": 4,"docs": " The result is a slice of `out_buffer`, from index `0`.\n","fields": [7119]},{"file": 30,"line": 198,"col": 4},{"file": 30,"line": 120,"col": 4},{"file": 30,"line": 506,"col": 4,"docs": " POSIX function which gets a uid from username.\n","fields": [7120]},{"file": 30,"line": 12,"col": 4},{"file": 30,"line": 384,"col": 4,"fields": []},{"file": 30,"line": 0,"col": 0},{"file": 30,"line": 4,"col": 0},{"file": 30,"line": 7,"col": 0},{"file": 30,"line": 491,"col": 0,"fields": [7121,7122]},{"file": 30,"line": 1,"col": 0},{"file": 30,"line": 2,"col": 0},{"file": 30,"line": 5,"col": 0},{"file": 30,"line": 10,"col": 0},{"file": 30,"line": 3,"col": 0},{"file": 30,"line": 8,"col": 0},{"file": 30,"line": 9,"col": 0},{"file": 30,"line": 6,"col": 0},{"file": 31,"line": 648,"col": 4,"docs": " compiler -O level: name,,NO_SECT,0,0\n"},{"file": 31,"line": 470,"col": 4,"docs": " the object file has no undefined references\n"},{"file": 31,"line": 357,"col": 4,"docs": " local of info to split segments\n"},{"file": 31,"line": 372,"col": 4,"docs": " compressed dyld information only\n"},{"file": 31,"line": 539,"col": 4,"docs": " Contains a section of type S_THREAD_LOCAL_VARIABLES\n"},{"file": 31,"line": 293,"col": 4,"docs": " fixed VM file inclusion (internal use)\n"},{"file": 31,"line": 591,"col": 4,"docs": " global symbol: name,,NO_SECT,type,0\n"},{"file": 31,"line": 570,"col": 4,"docs": " section with only 4 byte literals\n"},{"file": 31,"line": 323,"col": 4,"docs": " sub umbrella\n"},{"file": 31,"line": 384,"col": 4,"docs": " compressed table of function start addresses\n"},{"file": 31,"line": 281,"col": 4,"docs": " unix thread (includes a stack)\n"},{"file": 31,"line": 332,"col": 4,"docs": " two-level namespace lookup hints\n"},{"file": 31,"line": 411,"col": 4,"docs": " build for AppleTV min OS version\n"},{"file": 31,"line": 582,"col": 4,"docs": " private external symbol bit\n"},{"file": 31,"line": 558,"col": 4,"docs": "  24 section attributes\n"},{"file": 31,"line": 660,"col": 4,"docs": " left bracket: 0,,NO_SECT,nesting level,address\n"},{"file": 31,"line": 75,"col": 4,"docs": " The segment load command indicates that a part of this file is to be\n mapped into the task's address space.  The size of this segment in memory,\n vmsize, maybe equal to or larger than the amount to map from this file,\n filesize.  The file is mapped starting at fileoff to the beginning of\n the segment in memory, vmaddr.  The rest of the memory of the segment,\n if any, is allocated zero fill on demand.  The segment's maximum virtual\n memory protection and initial virtual memory protection are specified\n by the maxprot and initprot fields.  If the segment has sections then the\n section structures directly follow the segment command and their size is\n reflected in cmdsize.\n"},{"file": 31,"line": 0,"col": 4},{"file": 31,"line": 657,"col": 4,"docs": " alternate entry: name,,n_sect,linenumber,address\n"},{"file": 31,"line": 314,"col": 4,"docs": " modules prebound for a dynamically\n"},{"file": 31,"line": 527,"col": 4,"docs": " When this bit is set, the binary declares it is safe for use in processes when issetugid() is true\n"},{"file": 31,"line": 476,"col": 4,"docs": " the object file is input for the dynamic linker and can't be staticly link edited again\n"},{"file": 31,"line": 612,"col": 4,"docs": " emitted with gcc2_compiled and in gcc source\n"},{"file": 31,"line": 573,"col": 4,"docs": " section with only 8 byte literals\n"},{"file": 31,"line": 447,"col": 4,"docs": " preloaded executable file\n"},{"file": 31,"line": 678,"col": 4,"docs": " second stab entry with length information\n"},{"file": 31,"line": 450,"col": 4,"docs": " dynamically bound shared library\n"},{"file": 31,"line": 606,"col": 4,"docs": " begin nsect sym: 0,,n_sect,0,address\n"},{"file": 31,"line": 567,"col": 4,"docs": " section with only literal C string\n"},{"file": 31,"line": 205,"col": 4},{"file": 31,"line": 326,"col": 4,"docs": " sub client\n"},{"file": 31,"line": 456,"col": 4,"docs": " dynamically bound bundle file\n"},{"file": 31,"line": 675,"col": 4,"docs": " end common (local name): 0,,n_sect,0,address\n"},{"file": 31,"line": 345,"col": 4,"docs": " 64-bit image routines\n"},{"file": 31,"line": 366,"col": 4,"docs": " encrypted segment information\n"},{"file": 31,"line": 515,"col": 4,"docs": " the final linked image contains external weak symbols\n"},{"file": 31,"line": 494,"col": 4,"docs": " the executable is forcing all images to use flat name space bindings\n"},{"file": 31,"line": 509,"col": 4,"docs": " safe to divide up the sections into sub-sections via symbols for dead code stripping\n"},{"file": 31,"line": 453,"col": 4,"docs": " dynamic link editor\n"},{"file": 31,"line": 536,"col": 4,"docs": " Only for use on dylibs.  When linking against a dylib that has this bit set, the static linker will automatically not create a LC_LOAD_DYLIB load command to the dylib if no symbols are being referenced from the dylib.\n"},{"file": 31,"line": 299,"col": 4,"docs": " dynamic link-edit symbol table info\n"},{"file": 31,"line": 29,"col": 4,"docs": " The symtab_command contains the offsets and sizes of the link-edit 4.3BSD\n \"stab\" style symbol table information as described in the header files\n <nlist.h> and <stab.h>.\n"},{"file": 31,"line": 296,"col": 4,"docs": " prepage command (internal use)\n"},{"file": 31,"line": 530,"col": 4,"docs": " When this bit is set on a dylib, the static linker does not need to examine dependent dylibs to see if any are re-exported\n"},{"file": 31,"line": 278,"col": 4,"docs": " thread\n"},{"file": 31,"line": 588,"col": 4,"docs": " external symbol bit, set for external symbols\n"},{"file": 31,"line": 618,"col": 4,"docs": " src line: 0,,n_sect,linenumber,address\n"},{"file": 31,"line": 405,"col": 4,"docs": " linker options in MH_OBJECT files\n"},{"file": 31,"line": 423,"col": 4,"docs": " the mach magic number\n"},{"file": 31,"line": 597,"col": 4,"docs": " procedure: name,,n_sect,linenumber,address\n"},{"file": 31,"line": 542,"col": 4,"docs": " When this bit is set, the OS will run the main executable with a non-executable heap even on platforms (e.g. i386) that don't require it. Only used in MH_EXECUTE filetypes.\n"},{"file": 31,"line": 690,"col": 4},{"file": 31,"line": 473,"col": 4,"docs": " the object file is the output of an incremental link against a base file and can't be link edited again\n"},{"file": 31,"line": 414,"col": 4,"docs": " build for Watch min OS version\n"},{"file": 31,"line": 545,"col": 4,"docs": " The code was linked for use in an application extension.\n"},{"file": 31,"line": 615,"col": 4,"docs": " register sym: name,,NO_SECT,type,register\n"},{"file": 31,"line": 393,"col": 4,"docs": " table of non-instructions in __text\n"},{"file": 31,"line": 441,"col": 4,"docs": " fixed VM shared library file\n"},{"file": 31,"line": 521,"col": 4,"docs": " When this bit is set, all stacks in the task will be given stack execution privilege.  Only used in MH_EXECUTE filetypes.\n"},{"file": 31,"line": 633,"col": 4,"docs": " local sym: name,,NO_SECT,type,offset\n"},{"file": 31,"line": 360,"col": 4,"docs": " load and re-export dylib\n"},{"file": 31,"line": 600,"col": 4,"docs": " static symbol: name,,n_sect,type,address\n"},{"file": 31,"line": 533,"col": 4,"docs": " When this bit is set, the OS will load the main executable at a random address.  Only used in MH_EXECUTE filetypes.\n"},{"file": 31,"line": 692,"col": 4},{"file": 31,"line": 369,"col": 4,"docs": " compressed dyld information\n"},{"file": 31,"line": 402,"col": 4,"docs": " 64-bit encrypted segment information\n"},{"file": 31,"line": 438,"col": 4,"docs": " demand paged executable file\n"},{"file": 31,"line": 426,"col": 4,"docs": " NXSwapInt(MH_MAGIC)\n"},{"file": 31,"line": 342,"col": 4,"docs": " 64-bit segment of this file to be mapped\n"},{"file": 31,"line": 518,"col": 4,"docs": " the final linked image uses weak symbols\n"},{"file": 31,"line": 284,"col": 4,"docs": " load a specified fixed VM shared library\n"},{"file": 31,"line": 479,"col": 4,"docs": " the object file's undefined references are bound by the dynamic linker when loaded.\n"},{"file": 31,"line": 497,"col": 4,"docs": " this umbrella guarantees no multiple defintions of symbols in its sub-images so the two-level namespace hints can always be used.\n"},{"file": 31,"line": 381,"col": 4,"docs": " build for iPhoneOS min OS version\n"},{"file": 31,"line": 112,"col": 4,"docs": " The 64-bit segment load command indicates that a part of this file is to be\n mapped into a 64-bit task's address space.  If the 64-bit segment has\n sections then section_64 structures directly follow the 64-bit segment\n command and their size is reflected in cmdsize.\n"},{"file": 31,"line": 10,"col": 4},{"file": 31,"line": 420,"col": 4,"docs": " build for platform min OS version\n"},{"file": 31,"line": 663,"col": 4,"docs": " deleted include file: name,,NO_SECT,0,sum\n"},{"file": 31,"line": 491,"col": 4,"docs": " the image is using two-level name space bindings\n"},{"file": 31,"line": 251,"col": 4},{"file": 31,"line": 503,"col": 4,"docs": " the binary is not prebound but can have its prebinding redone. only used when MH_PREBOUND is not set.\n"},{"file": 31,"line": 548,"col": 4,"docs": " The external symbols listed in the nlist symbol table do not include all the symbols listed in the dyld info.\n"},{"file": 31,"line": 688,"col": 4,"docs": " If a segment contains any sections marked with S_ATTR_DEBUG then all\n sections in that segment must have this attribute.  No section other than\n a section marked with this attribute may reference the contents of this\n section.  A section with this attribute may contain no symbols and must have\n a section type S_REGULAR.  The static linker will not copy section contents\n from sections with this attribute into its output file.  These sections\n generally contain DWARF debugging info.\n a debug section\n"},{"file": 31,"line": 329,"col": 4,"docs": " sub library\n"},{"file": 31,"line": 348,"col": 4,"docs": " the uuid\n"},{"file": 31,"line": 459,"col": 4,"docs": " shared library stub for static linking only, no section contents\n"},{"file": 31,"line": 272,"col": 4,"docs": " link-edit stab symbol table info\n"},{"file": 31,"line": 691,"col": 4},{"file": 31,"line": 666,"col": 4,"docs": " right bracket: 0,,NO_SECT,nesting level,address\n"},{"file": 31,"line": 564,"col": 4,"docs": " zero fill on demand section\n"},{"file": 31,"line": 396,"col": 4,"docs": " source version used to build binary\n"},{"file": 31,"line": 311,"col": 4,"docs": " dynamic linker identification\n"},{"file": 31,"line": 378,"col": 4,"docs": " build for MacOSX min OS version\n"},{"file": 31,"line": 243,"col": 4},{"file": 31,"line": 417,"col": 4,"docs": " arbitrary data included within a Mach-O file\n"},{"file": 31,"line": 594,"col": 4,"docs": " procedure name (f77 kludge): name,,NO_SECT,0,0\n"},{"file": 31,"line": 555,"col": 4,"docs": " The flags field of a section structure is separated into two parts a section\n type and section attributes.  The section types are mutually exclusive (it\n can only have one type) but the section attributes are not (it may have more\n than one attribute).\n 256 section types\n"},{"file": 31,"line": 561,"col": 4,"docs": " regular section\n"},{"file": 31,"line": 432,"col": 4,"docs": " NXSwapInt(MH_MAGIC_64)\n"},{"file": 31,"line": 375,"col": 4,"docs": " load upward dylib\n"},{"file": 31,"line": 506,"col": 4,"docs": " indicates that this binary binds to all two-level namespace modules of its dependent libraries. only used when MH_PREBINDABLE and MH_TWOLEVEL are both set.\n"},{"file": 31,"line": 287,"col": 4,"docs": " fixed VM shared library identification\n"},{"file": 31,"line": 485,"col": 4,"docs": " the file has its read-only and read-write segments split\n"},{"file": 31,"line": 488,"col": 4,"docs": " the shared library init routine is to be run lazily via catching memory faults to its writeable segments (obsolete)\n"},{"file": 31,"line": 636,"col": 4,"docs": " include file beginning: name,,NO_SECT,0,sum\n"},{"file": 31,"line": 524,"col": 4,"docs": " When this bit is set, the binary declares it is safe for use in processes with uid zero\n"},{"file": 31,"line": 693,"col": 4},{"file": 31,"line": 387,"col": 4,"docs": " string for dyld to treat like environment variable\n"},{"file": 31,"line": 290,"col": 4,"docs": " object identification info (obsolete)\n"},{"file": 31,"line": 609,"col": 4,"docs": " AST file path: name,,NO_SECT,0,0\n"},{"file": 31,"line": 354,"col": 4,"docs": " local of code signature\n"},{"file": 31,"line": 320,"col": 4,"docs": " sub framework\n"},{"file": 31,"line": 627,"col": 4,"docs": " source file name: name,,n_sect,0,address\n"},{"file": 31,"line": 21,"col": 4},{"file": 31,"line": 429,"col": 4,"docs": " the 64-bit mach magic number\n"},{"file": 31,"line": 305,"col": 4,"docs": " dynamically linked shared lib ident\n"},{"file": 31,"line": 351,"col": 4,"docs": " runpath additions\n"},{"file": 31,"line": 444,"col": 4,"docs": " core file\n"},{"file": 31,"line": 482,"col": 4,"docs": " the file has its dynamic undefined references prebound.\n"},{"file": 31,"line": 500,"col": 4,"docs": " do not have dyld notify the prebinding agent about this executable\n"},{"file": 31,"line": 170,"col": 4,"docs": " A segment is made up of zero or more sections.  Non-MH_OBJECT files have\n all of their segments with the proper sections in each, and padded to the\n specified segment alignment when produced by the link editor.  The first\n segment of a MH_EXECUTE and MH_FVMLIB format file contains the mach_header\n and load commands of the object file before its first section.  The zero\n fill sections are always last in their segment (in all formats).  This\n allows the zeroed segment padding to be mapped into memory where zero fill\n sections might be. The gigabyte zero fill sections, those with the section\n type S_GB_ZEROFILL, can only be in a segment with sections of this type.\n These segments are then placed after all other segments.\n\n The MH_OBJECT format has all of its sections in one segment for\n compactness.  There is no padding to a specified segment boundary and the\n mach_header and load commands are not part of the segment.\n\n Sections with the same section name, sectname, going into the same segment,\n segname, are combined by the link editor.  The resulting section is aligned\n to the maximum alignment of the combined sections and is the new section's\n alignment.  The combined sections are aligned to their original alignment in\n the combined section.  Any padded bytes to get the specified alignment are\n zeroed.\n\n The format of the relocation entries referenced by the reloff and nreloc\n fields of the section structure for mach object files is described in the\n header file <reloc.h>.\n"},{"file": 31,"line": 639,"col": 4,"docs": " #included file name: name,,n_sect,0,address\n"},{"file": 31,"line": 672,"col": 4,"docs": " end common: name,,n_sect,0,0\n"},{"file": 31,"line": 603,"col": 4,"docs": " .lcomm symbol: name,,n_sect,type,address\n"},{"file": 31,"line": 275,"col": 4,"docs": " link-edit gdb symbol table info (obsolete)\n"},{"file": 31,"line": 651,"col": 4,"docs": " parameter: name,,NO_SECT,type,offset\n"},{"file": 31,"line": 645,"col": 4,"docs": " compiler version: name,,NO_SECT,0,0\n"},{"file": 31,"line": 669,"col": 4,"docs": " begin common: name,,NO_SECT,0,0\n"},{"file": 31,"line": 363,"col": 4,"docs": " delay load of dylib until first use\n"},{"file": 31,"line": 654,"col": 4,"docs": " include file end: name,,NO_SECT,0,0\n"},{"file": 31,"line": 462,"col": 4,"docs": " companion file with only debug sections\n"},{"file": 31,"line": 579,"col": 4,"docs": " if any of these bits set, a symbolic debugging entry\n"},{"file": 31,"line": 266,"col": 4,"docs": " After MacOS X 10.1 when a new load command is added that is required to be\n understood by the dynamic linker for the image to execute properly the\n LC_REQ_DYLD bit will be or'ed into the load command constant.  If the dynamic\n linker sees such a load command it it does not understand will issue a\n \"unknown load command required for execution\" error and refuse to use the\n image.  Other load commands without this bit that are not understood will\n simply be ignored.\n"},{"file": 31,"line": 269,"col": 4,"docs": " segment of this file to be mapped\n"},{"file": 31,"line": 335,"col": 4,"docs": " prebind checksum\n"},{"file": 31,"line": 390,"col": 4,"docs": " replacement for LC_UNIXTHREAD\n"},{"file": 31,"line": 621,"col": 4,"docs": " end nsect sym: 0,,n_sect,0,address\n"},{"file": 31,"line": 408,"col": 4,"docs": " optimization hints in MH_OBJECT files\n"},{"file": 31,"line": 585,"col": 4,"docs": " mask for the type bits\n"},{"file": 31,"line": 399,"col": 4,"docs": " Code signing DRs copied from linked dylibs\n"},{"file": 31,"line": 317,"col": 4,"docs": " image routines\n"},{"file": 31,"line": 576,"col": 4,"docs": " section with only pointers to\n"},{"file": 31,"line": 630,"col": 4,"docs": " object file name: name,,0,0,st_mtime\n"},{"file": 31,"line": 435,"col": 4,"docs": " relocatable object file\n"},{"file": 31,"line": 308,"col": 4,"docs": " load a dynamic linker\n"},{"file": 31,"line": 302,"col": 4,"docs": " load a dynamically linked shared library\n"},{"file": 31,"line": 642,"col": 4,"docs": " compiler parameters: name,,NO_SECT,0,0\n"},{"file": 31,"line": 465,"col": 4,"docs": " x86_64 kexts\n"},{"file": 31,"line": 624,"col": 4,"docs": " structure elt: name,,NO_SECT,type,struct_offset\n"},{"file": 31,"line": 512,"col": 4,"docs": " the binary has been canonicalized via the unprebind operation\n"},{"file": 31,"line": 339,"col": 4,"docs": " load a dynamically linked shared library that is allowed to be missing\n (all symbols are weak imported).\n"},{"file": 31,"line": 51,"col": 0,"docs": " The linkedit_data_command contains the offsets and sizes of a blob\n of data in the __LINKEDIT segment.\n"},{"file": 32,"line": 11,"col": 4},{"file": 32,"line": 1,"col": 0},{"file": 32,"line": 7,"col": 0},{"file": 32,"line": 9,"col": 0},{"file": 32,"line": 5,"col": 0},{"file": 32,"line": 3,"col": 0},{"file": 32,"line": 0,"col": 0},{"file": 32,"line": 2,"col": 0},{"file": 32,"line": 8,"col": 0},{"file": 32,"line": 6,"col": 0},{"file": 32,"line": 4,"col": 0},{"file": 24,"line": 236,"col": 4},{"file": 33,"line": 138,"col": 4,"fields": [7123]},{"file": 33,"line": 19,"col": 4},{"file": 33,"line": 176,"col": 4,"fields": [7124]},{"file": 33,"line": 716,"col": 4,"docs": " If the path is a file in the current directory (no directory component)\n then returns null\n","fields": [7125]},{"file": 33,"line": 964,"col": 4,"docs": " Returns the relative path from `from` to `to`. If `from` and `to` each\n resolve to the same path (after calling `resolve` on each), a zero-length\n string is returned.\n On Windows this canonicalizes the drive to a capital letter and paths to `\\\\`.\n","fields": [7126,7127,7128]},{"file": 33,"line": 570,"col": 4,"docs": " This function is like a series of `cd` statements executed one after another.\n It resolves \".\" and \"..\".\n The result does not have a trailing path separator.\n If all paths are relative it uses the current working directory as a starting point.\n Note: all usage of this function should be audited due to the existence of symlinks.\n Without performing actual syscalls, resolving `..` could be incorrect.\n","fields": [7129,7130]},{"file": 33,"line": 724,"col": 4,"fields": [7131]},{"file": 33,"line": 84,"col": 4,"docs": " Naively combines a series of paths with the native path seperator.\n Allocates memory for the result, which must be freed by the caller.\n","fields": [7132,7133]},{"file": 33,"line": 758,"col": 4,"fields": [7134]},{"file": 33,"line": 972,"col": 4,"fields": [7135,7136,7137]},{"file": 33,"line": 20,"col": 4},{"file": 33,"line": 78,"col": 4,"docs": " Naively combines a series of paths with the native path seperator.\n Allocates memory for the result, which must be freed by the caller.\n","fields": [7138,7139]},{"file": 33,"line": 15,"col": 4},{"file": 33,"line": 308,"col": 4,"fields": [7140]},{"file": 33,"line": 217,"col": 4},{"file": 33,"line": 316,"col": 4,"fields": [7141]},{"file": 33,"line": 17,"col": 4},{"file": 33,"line": 23,"col": 4,"fields": [7142]},{"file": 33,"line": 1045,"col": 4,"fields": [7143,7144,7145]},{"file": 33,"line": 13,"col": 4},{"file": 33,"line": 14,"col": 4},{"file": 33,"line": 74,"col": 4},{"file": 33,"line": 21,"col": 4},{"file": 33,"line": 856,"col": 4,"fields": [7146]},{"file": 33,"line": 0,"col": 0},{"file": 33,"line": 33,"col": 0,"docs": " This is different from mem.join in that the separator will not be repeated if\n it is found at the end or beginning of a pair of consecutive paths.\n","fields": [7147,7148,7149]},{"file": 33,"line": 8,"col": 0},{"file": 33,"line": 213,"col": 0,"fields": [7150,7151]},{"file": 33,"line": 2,"col": 0},{"file": 33,"line": 4,"col": 0},{"file": 33,"line": 710,"col": 0,"fields": [7152]},{"file": 33,"line": 956,"col": 0,"fields": [7153,7154]},{"file": 33,"line": 7,"col": 0},{"file": 33,"line": 840,"col": 0,"fields": [7155,7156]},{"file": 33,"line": 6,"col": 0},{"file": 33,"line": 209,"col": 0,"fields": [7157,7158]},{"file": 33,"line": 948,"col": 0,"fields": [7159,7160]},{"file": 33,"line": 95,"col": 0,"fields": [7161,7162]},{"file": 33,"line": 832,"col": 0,"fields": [7163,7164]},{"file": 33,"line": 320,"col": 0,"fields": [7165,7166]},{"file": 33,"line": 1139,"col": 0,"fields": [7167,7168,7169]},{"file": 33,"line": 88,"col": 0,"fields": [7170,7171]},{"file": 33,"line": 1,"col": 0},{"file": 33,"line": 706,"col": 0,"fields": [7172]},{"file": 33,"line": 10,"col": 0},{"file": 33,"line": 1134,"col": 0,"fields": [7173,7174,7175]},{"file": 33,"line": 9,"col": 0},{"file": 33,"line": 11,"col": 0},{"file": 33,"line": 952,"col": 0,"fields": [7176,7177]},{"file": 33,"line": 3,"col": 0},{"file": 33,"line": 5,"col": 0},{"file": 23,"line": 583,"col": 4,"docs": " The LLVM docs list a space between C / C++ but empirically this is not the case.\n"},{"file": 34,"line": 12,"col": 4,"docs": " Lock may be held only once. If the same thread\n tries to acquire the same mutex twice, it deadlocks.\n This type supports static initialization and is based off of Golang 1.13 runtime.lock_futex:\n https://github.com/golang/go/blob/master/src/runtime/lock_futex.go\n When an application is built in single threaded release mode, all the functions are\n no-ops. In single threaded debug mode, there is deadlock detection.\n"},{"file": 34,"line": 1,"col": 0},{"file": 34,"line": 0,"col": 0},{"file": 34,"line": 3,"col": 0},{"file": 34,"line": 4,"col": 0},{"file": 34,"line": 157,"col": 0,"fields": [7178]},{"file": 34,"line": 2,"col": 0},{"file": 34,"line": 119,"col": 0},{"file": 35,"line": 9,"col": 4},{"file": 35,"line": 1,"col": 0},{"file": 35,"line": 2,"col": 0},{"file": 35,"line": 107,"col": 0},{"file": 35,"line": 7,"col": 0},{"file": 35,"line": 15,"col": 0},{"file": 35,"line": 0,"col": 0},{"file": 35,"line": 55,"col": 0},{"file": 35,"line": 5,"col": 0},{"file": 35,"line": 30,"col": 0},{"file": 35,"line": 3,"col": 0},{"file": 35,"line": 4,"col": 0},{"file": 35,"line": 6,"col": 0},{"file": 36,"line": 6,"col": 4},{"file": 36,"line": 1,"col": 0},{"file": 36,"line": 0,"col": 0},{"file": 36,"line": 3,"col": 0},{"file": 36,"line": 4,"col": 0},{"file": 36,"line": 2,"col": 0},{"file": 37,"line": 130,"col": 4,"docs": " Fast non-cryptographic 64bit hash function.\n See https://github.com/wangyi-fudan/wyhash\n"},{"file": 37,"line": 3,"col": 0},{"file": 37,"line": 175,"col": 0},{"file": 37,"line": 0,"col": 0},{"file": 37,"line": 37,"col": 0},{"file": 37,"line": 1,"col": 0},{"file": 29,"line": 166,"col": 8,"docs": " Resets the timer value to 0/now.\n","fields": [7179]},{"file": 29,"line": 171,"col": 8,"docs": " Returns the current value of the timer in nanoseconds, then resets it\n","fields": [7180]},{"file": 29,"line": 111,"col": 4},{"file": 29,"line": 116,"col": 4,"docs": "At some point we may change our minds on RAW, but for now we're\n  sticking with posix standard MONOTONIC. For more information, see:\n  https://github.com/ziglang/zig/pull/933\n"},{"file": 38,"line": 9,"col": 4,"docs": " This API is non-allocating and non-fallible. The tradeoff is that users of\n this API must provide the storage for each `Progress.Node`.\n Initialize the struct directly, overriding these fields as desired:\n * `refresh_rate_ms`\n * `initial_delay_ms`\n"},{"file": 38,"line": 0,"col": 0},{"file": 38,"line": 2,"col": 0},{"file": 38,"line": 1,"col": 0},{"file": 3,"line": 5,"col": 4,"fields": []},{"file": 3,"line": 2,"col": 0},{"file": 3,"line": 1,"col": 0},{"file": 3,"line": 0,"col": 0},{"file": 3,"line": 3,"col": 0},{"file": 7,"line": 303,"col": 16,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 39,"line": 14,"col": 4},{"file": 39,"line": 1,"col": 0},{"file": 39,"line": 2,"col": 0},{"file": 39,"line": 6,"col": 0},{"file": 39,"line": 942,"col": 0,"fields": [7181,7182]},{"file": 39,"line": 10,"col": 0},{"file": 39,"line": 11,"col": 0},{"file": 39,"line": 12,"col": 0},{"file": 39,"line": 0,"col": 0},{"file": 39,"line": 938,"col": 0,"fields": []},{"file": 39,"line": 9,"col": 0},{"file": 39,"line": 7,"col": 0},{"file": 39,"line": 3,"col": 0},{"file": 39,"line": 4,"col": 0},{"file": 39,"line": 5,"col": 0},{"file": 39,"line": 8,"col": 0},{"file": 40,"line": 7,"col": 4,"docs": " TODO Nearly all the functions in this namespace would be\n better off if https://github.com/ziglang/zig/issues/425\n was solved.\n"},{"file": 40,"line": 2,"col": 0},{"file": 40,"line": 0,"col": 0},{"file": 40,"line": 1,"col": 0},{"file": 41,"line": 58,"col": 4,"docs": "\n","fields": [7183]},{"file": 41,"line": 155,"col": 4,"fields": [7184]},{"file": 41,"line": 338,"col": 4,"docs": "\n","fields": [7185]},{"file": 41,"line": 22,"col": 4,"fields": [7186]},{"file": 41,"line": 300,"col": 4,"docs": "\n","fields": [7187]},{"file": 41,"line": 197,"col": 4,"docs": "\n","fields": [7188]},{"file": 41,"line": 15,"col": 4},{"file": 41,"line": 244,"col": 4,"docs": "\n","fields": [7189]},{"file": 41,"line": 212,"col": 4,"docs": "\n","fields": [7190]},{"file": 41,"line": 277,"col": 4,"docs": "\n","fields": [7191]},{"file": 41,"line": 134,"col": 4,"docs": "\n","fields": [7192]},{"file": 41,"line": 176,"col": 4,"docs": "\n","fields": [7193]},{"file": 41,"line": 21,"col": 4,"docs": "\n"},{"file": 41,"line": 82,"col": 4,"docs": "\n","fields": [7194]},{"file": 41,"line": 1,"col": 0},{"file": 41,"line": 0,"col": 0},{"file": 41,"line": 3,"col": 0},{"file": 41,"line": 7,"col": 0},{"file": 41,"line": 4,"col": 0},{"file": 41,"line": 11,"col": 0,"fields": [7195]},{"file": 41,"line": 5,"col": 0},{"file": 41,"line": 2,"col": 0},{"file": 42,"line": 8,"col": 4},{"file": 42,"line": 0,"col": 0},{"file": 42,"line": 1,"col": 0},{"file": 42,"line": 5,"col": 0},{"file": 42,"line": 2,"col": 0},{"file": 42,"line": 4,"col": 0},{"file": 42,"line": 6,"col": 0},{"file": 42,"line": 3,"col": 0},{"file": 47,"line": 736,"col": 4},{"file": 47,"line": 461,"col": 4},{"file": 47,"line": 644,"col": 4},{"file": 47,"line": 773,"col": 4},{"file": 47,"line": 397,"col": 4},{"file": 47,"line": 235,"col": 4},{"file": 47,"line": 290,"col": 4},{"file": 47,"line": 608,"col": 4},{"file": 47,"line": 635,"col": 4},{"file": 47,"line": 751,"col": 4},{"file": 47,"line": 841,"col": 4},{"file": 47,"line": 336,"col": 4},{"file": 47,"line": 713,"col": 4},{"file": 47,"line": 568,"col": 4},{"file": 47,"line": 468,"col": 4},{"file": 47,"line": 311,"col": 4},{"file": 47,"line": 241,"col": 4},{"file": 47,"line": 578,"col": 4},{"file": 47,"line": 37,"col": 4},{"file": 47,"line": 737,"col": 4},{"file": 47,"line": 53,"col": 4},{"file": 47,"line": 22,"col": 4},{"file": 47,"line": 125,"col": 4},{"file": 47,"line": 304,"col": 4},{"file": 47,"line": 589,"col": 4},{"file": 47,"line": 109,"col": 4},{"file": 47,"line": 771,"col": 4},{"file": 47,"line": 62,"col": 4},{"file": 47,"line": 628,"col": 4},{"file": 47,"line": 268,"col": 4,"docs": " Return the normalized drive name. This is the default.\n"},{"file": 47,"line": 28,"col": 4},{"file": 47,"line": 9,"col": 4},{"file": 47,"line": 316,"col": 4},{"file": 47,"line": 562,"col": 4},{"file": 47,"line": 283,"col": 4,"docs": " Return the path with the volume device path.\n"},{"file": 47,"line": 756,"col": 4},{"file": 47,"line": 350,"col": 4},{"file": 47,"line": 49,"col": 4},{"file": 47,"line": 328,"col": 4},{"file": 47,"line": 714,"col": 4},{"file": 47,"line": 453,"col": 4},{"file": 47,"line": 358,"col": 4},{"file": 47,"line": 432,"col": 4},{"file": 47,"line": 245,"col": 4},{"file": 47,"line": 41,"col": 4},{"file": 47,"line": 440,"col": 4},{"file": 47,"line": 67,"col": 4},{"file": 47,"line": 326,"col": 4},{"file": 47,"line": 421,"col": 4},{"file": 47,"line": 569,"col": 4},{"file": 47,"line": 564,"col": 4},{"file": 47,"line": 349,"col": 4},{"file": 47,"line": 249,"col": 4},{"file": 47,"line": 239,"col": 4},{"file": 47,"line": 594,"col": 4},{"file": 47,"line": 804,"col": 4},{"file": 47,"line": 312,"col": 4},{"file": 47,"line": 294,"col": 4},{"file": 47,"line": 325,"col": 4},{"file": 47,"line": 703,"col": 4},{"file": 47,"line": 590,"col": 4},{"file": 47,"line": 505,"col": 4},{"file": 47,"line": 223,"col": 4},{"file": 47,"line": 21,"col": 4},{"file": 47,"line": 38,"col": 4},{"file": 47,"line": 610,"col": 4},{"file": 47,"line": 450,"col": 4},{"file": 47,"line": 10,"col": 4},{"file": 47,"line": 335,"col": 4},{"file": 47,"line": 732,"col": 4},{"file": 47,"line": 409,"col": 4},{"file": 47,"line": 575,"col": 4},{"file": 47,"line": 323,"col": 4},{"file": 47,"line": 229,"col": 4},{"file": 47,"line": 652,"col": 4},{"file": 47,"line": 574,"col": 4},{"file": 47,"line": 481,"col": 4},{"file": 47,"line": 769,"col": 4},{"file": 47,"line": 244,"col": 4},{"file": 47,"line": 394,"col": 4},{"file": 47,"line": 69,"col": 4},{"file": 47,"line": 117,"col": 4},{"file": 47,"line": 240,"col": 4},{"file": 47,"line": 742,"col": 4},{"file": 47,"line": 570,"col": 4},{"file": 47,"line": 236,"col": 4},{"file": 47,"line": 354,"col": 4},{"file": 47,"line": 52,"col": 4},{"file": 47,"line": 733,"col": 4},{"file": 47,"line": 776,"col": 4},{"file": 47,"line": 466,"col": 4},{"file": 47,"line": 581,"col": 4},{"file": 47,"line": 35,"col": 4},{"file": 47,"line": 561,"col": 4},{"file": 47,"line": 603,"col": 4},{"file": 47,"line": 399,"col": 4},{"file": 47,"line": 291,"col": 4},{"file": 47,"line": 360,"col": 4},{"file": 47,"line": 734,"col": 4},{"file": 47,"line": 322,"col": 4},{"file": 47,"line": 66,"col": 4},{"file": 47,"line": 221,"col": 4},{"file": 47,"line": 740,"col": 4},{"file": 47,"line": 455,"col": 4},{"file": 47,"line": 313,"col": 4},{"file": 47,"line": 247,"col": 4},{"file": 47,"line": 462,"col": 4},{"file": 47,"line": 767,"col": 4},{"file": 47,"line": 866,"col": 4},{"file": 47,"line": 7,"col": 4},{"file": 47,"line": 679,"col": 4},{"file": 47,"line": 60,"col": 4},{"file": 47,"line": 54,"col": 4},{"file": 47,"line": 353,"col": 4},{"file": 47,"line": 300,"col": 4},{"file": 47,"line": 293,"col": 4},{"file": 47,"line": 567,"col": 4},{"file": 47,"line": 357,"col": 4},{"file": 47,"line": 407,"col": 4},{"file": 47,"line": 584,"col": 4},{"file": 47,"line": 674,"col": 4},{"file": 47,"line": 671,"col": 4},{"file": 47,"line": 113,"col": 4},{"file": 47,"line": 457,"col": 4},{"file": 47,"line": 344,"col": 4},{"file": 47,"line": 331,"col": 4},{"file": 47,"line": 463,"col": 4},{"file": 47,"line": 657,"col": 4},{"file": 47,"line": 438,"col": 4},{"file": 47,"line": 449,"col": 4},{"file": 47,"line": 46,"col": 4},{"file": 47,"line": 456,"col": 4},{"file": 47,"line": 8,"col": 4},{"file": 47,"line": 305,"col": 4},{"file": 47,"line": 758,"col": 4},{"file": 47,"line": 42,"col": 4},{"file": 47,"line": 729,"col": 4},{"file": 47,"line": 338,"col": 4},{"file": 47,"line": 33,"col": 4},{"file": 47,"line": 400,"col": 4},{"file": 47,"line": 303,"col": 4},{"file": 47,"line": 93,"col": 4},{"file": 47,"line": 227,"col": 4},{"file": 47,"line": 655,"col": 4},{"file": 47,"line": 460,"col": 4},{"file": 47,"line": 355,"col": 4},{"file": 47,"line": 768,"col": 4},{"file": 47,"line": 29,"col": 4},{"file": 47,"line": 619,"col": 4},{"file": 47,"line": 658,"col": 4},{"file": 47,"line": 774,"col": 4},{"file": 47,"line": 653,"col": 4},{"file": 47,"line": 32,"col": 4},{"file": 47,"line": 343,"col": 4},{"file": 47,"line": 738,"col": 4},{"file": 47,"line": 572,"col": 4},{"file": 47,"line": 643,"col": 4},{"file": 47,"line": 234,"col": 4},{"file": 47,"line": 731,"col": 4},{"file": 47,"line": 452,"col": 4},{"file": 47,"line": 315,"col": 4},{"file": 47,"line": 422,"col": 4},{"file": 47,"line": 30,"col": 4},{"file": 47,"line": 870,"col": 4},{"file": 47,"line": 715,"col": 4},{"file": 47,"line": 630,"col": 4},{"file": 47,"line": 419,"col": 4},{"file": 47,"line": 73,"col": 4},{"file": 47,"line": 406,"col": 4},{"file": 47,"line": 105,"col": 4},{"file": 47,"line": 576,"col": 4},{"file": 47,"line": 810,"col": 4},{"file": 47,"line": 324,"col": 4},{"file": 47,"line": 59,"col": 4},{"file": 47,"line": 396,"col": 4},{"file": 47,"line": 61,"col": 4},{"file": 47,"line": 45,"col": 4},{"file": 47,"line": 333,"col": 4},{"file": 47,"line": 233,"col": 4},{"file": 47,"line": 728,"col": 4},{"file": 47,"line": 34,"col": 4},{"file": 47,"line": 334,"col": 4},{"file": 47,"line": 451,"col": 4},{"file": 47,"line": 712,"col": 4},{"file": 47,"line": 448,"col": 4},{"file": 47,"line": 16,"col": 4,"docs": " The standard output device. Initially, this is the active console screen buffer, CONOUT$.\n"},{"file": 47,"line": 416,"col": 4},{"file": 47,"line": 346,"col": 4},{"file": 47,"line": 44,"col": 4},{"file": 47,"line": 356,"col": 4},{"file": 47,"line": 43,"col": 4},{"file": 47,"line": 436,"col": 4},{"file": 47,"line": 330,"col": 4},{"file": 47,"line": 417,"col": 4},{"file": 47,"line": 454,"col": 4},{"file": 47,"line": 435,"col": 4},{"file": 47,"line": 850,"col": 4},{"file": 47,"line": 580,"col": 4},{"file": 47,"line": 71,"col": 4},{"file": 47,"line": 591,"col": 4},{"file": 47,"line": 246,"col": 4},{"file": 47,"line": 437,"col": 4},{"file": 47,"line": 412,"col": 4},{"file": 47,"line": 711,"col": 4},{"file": 47,"line": 648,"col": 4},{"file": 47,"line": 566,"col": 4},{"file": 47,"line": 709,"col": 4},{"file": 47,"line": 231,"col": 4},{"file": 47,"line": 659,"col": 4},{"file": 47,"line": 624,"col": 4},{"file": 47,"line": 645,"col": 4},{"file": 47,"line": 427,"col": 4},{"file": 47,"line": 577,"col": 4},{"file": 47,"line": 25,"col": 4},{"file": 47,"line": 314,"col": 4},{"file": 47,"line": 340,"col": 4},{"file": 47,"line": 772,"col": 4},{"file": 47,"line": 398,"col": 4},{"file": 47,"line": 611,"col": 4},{"file": 47,"line": 327,"col": 4},{"file": 47,"line": 875,"col": 4},{"file": 47,"line": 85,"col": 4},{"file": 47,"line": 55,"col": 4},{"file": 47,"line": 230,"col": 4},{"file": 47,"line": 585,"col": 4},{"file": 47,"line": 58,"col": 4},{"file": 47,"line": 277,"col": 4,"docs": " Return the path with a volume GUID path instead of the drive name.\n"},{"file": 47,"line": 296,"col": 4},{"file": 47,"line": 629,"col": 4},{"file": 47,"line": 582,"col": 4},{"file": 47,"line": 739,"col": 4},{"file": 47,"line": 306,"col": 4},{"file": 47,"line": 587,"col": 4},{"file": 47,"line": 23,"col": 4},{"file": 47,"line": 486,"col": 4},{"file": 47,"line": 130,"col": 4},{"file": 47,"line": 226,"col": 4},{"file": 47,"line": 586,"col": 4},{"file": 47,"line": 26,"col": 4},{"file": 47,"line": 121,"col": 4},{"file": 47,"line": 405,"col": 4},{"file": 47,"line": 661,"col": 4},{"file": 47,"line": 558,"col": 4},{"file": 47,"line": 40,"col": 4},{"file": 47,"line": 337,"col": 4},{"file": 47,"line": 332,"col": 4},{"file": 47,"line": 691,"col": 4},{"file": 47,"line": 428,"col": 4},{"file": 47,"line": 302,"col": 4},{"file": 47,"line": 592,"col": 4},{"file": 47,"line": 439,"col": 4},{"file": 47,"line": 401,"col": 4},{"file": 47,"line": 232,"col": 4},{"file": 47,"line": 280,"col": 4,"docs": " Return the path with no drive information.\n"},{"file": 47,"line": 446,"col": 4},{"file": 47,"line": 403,"col": 4},{"file": 47,"line": 701,"col": 4},{"file": 47,"line": 242,"col": 4},{"file": 47,"line": 573,"col": 4},{"file": 47,"line": 579,"col": 4},{"file": 47,"line": 465,"col": 4},{"file": 47,"line": 36,"col": 4},{"file": 47,"line": 135,"col": 4},{"file": 47,"line": 626,"col": 4},{"file": 47,"line": 563,"col": 4},{"file": 47,"line": 347,"col": 4},{"file": 47,"line": 646,"col": 4},{"file": 47,"line": 271,"col": 4,"docs": " Return the opened file name (not normalized).\n"},{"file": 47,"line": 414,"col": 4},{"file": 47,"line": 238,"col": 4},{"file": 47,"line": 565,"col": 4},{"file": 47,"line": 274,"col": 4,"docs": " Return the path with the drive letter. This is the default.\n"},{"file": 47,"line": 402,"col": 4},{"file": 47,"line": 50,"col": 4},{"file": 47,"line": 362,"col": 4},{"file": 47,"line": 413,"col": 4},{"file": 47,"line": 420,"col": 4},{"file": 47,"line": 31,"col": 4},{"file": 47,"line": 366,"col": 4},{"file": 47,"line": 404,"col": 4},{"file": 47,"line": 868,"col": 4},{"file": 47,"line": 702,"col": 4},{"file": 47,"line": 64,"col": 4},{"file": 47,"line": 431,"col": 4},{"file": 47,"line": 310,"col": 4},{"file": 47,"line": 588,"col": 4},{"file": 47,"line": 48,"col": 4},{"file": 47,"line": 285,"col": 4},{"file": 47,"line": 363,"col": 4},{"file": 47,"line": 361,"col": 4},{"file": 47,"line": 441,"col": 4},{"file": 47,"line": 622,"col": 4},{"file": 47,"line": 642,"col": 4},{"file": 47,"line": 321,"col": 4},{"file": 47,"line": 237,"col": 4},{"file": 47,"line": 228,"col": 4},{"file": 47,"line": 508,"col": 4},{"file": 47,"line": 329,"col": 4},{"file": 47,"line": 672,"col": 4},{"file": 47,"line": 57,"col": 4},{"file": 47,"line": 650,"col": 4},{"file": 47,"line": 320,"col": 4},{"file": 47,"line": 770,"col": 4},{"file": 47,"line": 423,"col": 4},{"file": 47,"line": 395,"col": 4},{"file": 47,"line": 299,"col": 4},{"file": 47,"line": 848,"col": 4},{"file": 47,"line": 307,"col": 4},{"file": 47,"line": 19,"col": 4,"docs": " The standard error device. Initially, this is the active console screen buffer, CONOUT$.\n"},{"file": 47,"line": 424,"col": 4},{"file": 47,"line": 670,"col": 4},{"file": 47,"line": 351,"col": 4},{"file": 47,"line": 730,"col": 4},{"file": 47,"line": 298,"col": 4},{"file": 47,"line": 262,"col": 4},{"file": 47,"line": 243,"col": 4},{"file": 47,"line": 56,"col": 4},{"file": 47,"line": 705,"col": 4},{"file": 47,"line": 295,"col": 4},{"file": 47,"line": 39,"col": 4},{"file": 47,"line": 442,"col": 4},{"file": 47,"line": 633,"col": 4},{"file": 47,"line": 24,"col": 4},{"file": 47,"line": 348,"col": 4},{"file": 47,"line": 373,"col": 4},{"file": 47,"line": 430,"col": 4},{"file": 47,"line": 27,"col": 4},{"file": 47,"line": 352,"col": 4},{"file": 47,"line": 507,"col": 4},{"file": 47,"line": 214,"col": 4},{"file": 47,"line": 426,"col": 4},{"file": 47,"line": 51,"col": 4},{"file": 47,"line": 627,"col": 4},{"file": 47,"line": 593,"col": 4},{"file": 47,"line": 341,"col": 4},{"file": 47,"line": 726,"col": 4,"docs": " > The maximum path of 32,767 characters is approximate, because the \"\\\\?\\\"\n > prefix may be expanded to a longer string by the system at run time, and\n > this expansion applies to the total length.\n from https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#maximum-path-length-limitation\n"},{"file": 47,"line": 700,"col": 4},{"file": 47,"line": 342,"col": 4},{"file": 47,"line": 359,"col": 4},{"file": 47,"line": 13,"col": 4,"docs": " The standard input device. Initially, this is the console input buffer, CONIN$.\n"},{"file": 47,"line": 654,"col": 4},{"file": 47,"line": 620,"col": 4},{"file": 47,"line": 47,"col": 4},{"file": 47,"line": 560,"col": 4},{"file": 47,"line": 669,"col": 4},{"file": 47,"line": 656,"col": 4},{"file": 47,"line": 101,"col": 4},{"file": 47,"line": 596,"col": 4},{"file": 47,"line": 445,"col": 4},{"file": 47,"line": 411,"col": 4},{"file": 47,"line": 364,"col": 4},{"file": 47,"line": 782,"col": 4},{"file": 47,"line": 319,"col": 4},{"file": 47,"line": 447,"col": 4},{"file": 44,"line": 3,"col": 0},{"file": 45,"line": 130,"col": 4},{"file": 45,"line": 792,"col": 4,"docs": " A file time is a 64-bit value that represents the number of 100-nanosecond\n intervals that have elapsed since 12:00 A.M. January 1, 1601 Coordinated\n Universal Time (UTC).\n This function returns the number of nanoseconds since the canonical epoch,\n which is the POSIX one (Jan 01, 1970 AD).\n","fields": [7196]},{"file": 45,"line": 186,"col": 4,"fields": [7197,7198,7199,7200]},{"file": 45,"line": 108,"col": 4},{"file": 45,"line": 156,"col": 4,"fields": [7201,7202]},{"file": 45,"line": 733,"col": 4,"fields": [7203]},{"file": 45,"line": 645,"col": 4},{"file": 45,"line": 621,"col": 4,"fields": []},{"file": 45,"line": 585,"col": 4},{"file": 45,"line": 259,"col": 4},{"file": 45,"line": 100,"col": 4,"fields": [7204,7205,7206]},{"file": 45,"line": 549,"col": 4},{"file": 45,"line": 136,"col": 4,"fields": [7207,7208]},{"file": 45,"line": 517,"col": 4,"fields": [7209,7210,7211,7212]},{"file": 45,"line": 383,"col": 4},{"file": 45,"line": 88,"col": 4},{"file": 45,"line": 385,"col": 4,"fields": [7213,7214,7215]},{"file": 45,"line": 344,"col": 4,"fields": [7216,7217,7218]},{"file": 45,"line": 391,"col": 4,"fields": [7219,7220,7221]},{"file": 45,"line": 510,"col": 4},{"file": 45,"line": 332,"col": 4},{"file": 45,"line": 15,"col": 4},{"file": 45,"line": 174,"col": 4,"docs": " Returns `true` if there was another file, `false` otherwise.\n","fields": [7222,7223]},{"file": 45,"line": 802,"col": 4,"fields": [7224]},{"file": 45,"line": 426,"col": 4,"fields": [7225]},{"file": 45,"line": 90,"col": 4,"fields": [7226,7227,7228]},{"file": 45,"line": 356,"col": 4},{"file": 45,"line": 216,"col": 4},{"file": 45,"line": 279,"col": 4},{"file": 45,"line": 16,"col": 4},{"file": 45,"line": 431,"col": 4,"fields": [7229]},{"file": 45,"line": 560,"col": 4,"fields": [7230]},{"file": 45,"line": 797,"col": 4,"fields": [7231]},{"file": 45,"line": 725,"col": 4,"fields": [7232,7233,7234,7235]},{"file": 45,"line": 17,"col": 4},{"file": 45,"line": 703,"col": 4,"fields": [7236]},{"file": 45,"line": 625,"col": 4,"fields": [7237]},{"file": 45,"line": 405,"col": 4,"fields": [7238,7239]},{"file": 45,"line": 420,"col": 4},{"file": 45,"line": 609,"col": 4},{"file": 45,"line": 595,"col": 4},{"file": 45,"line": 587,"col": 4,"fields": [7240,7241]},{"file": 45,"line": 399,"col": 4},{"file": 45,"line": 304,"col": 4},{"file": 45,"line": 203,"col": 4,"fields": [7242,7243,7244,7245]},{"file": 45,"line": 201,"col": 4},{"file": 45,"line": 629,"col": 4},{"file": 45,"line": 21,"col": 4},{"file": 45,"line": 113,"col": 4,"docs": " Call RtlGenRandom() instead of CryptGetRandom() on Windows\n https://github.com/rust-lang-nursery/rand/issues/111\n https://bugzilla.mozilla.org/show_bug.cgi?id=504270\n","fields": [7246]},{"file": 45,"line": 555,"col": 4,"fields": [7247]},{"file": 45,"line": 692,"col": 4,"fields": [7248]},{"file": 45,"line": 148,"col": 4},{"file": 45,"line": 98,"col": 4},{"file": 45,"line": 687,"col": 4},{"file": 45,"line": 737,"col": 4},{"file": 45,"line": 255,"col": 4,"fields": [7249]},{"file": 45,"line": 410,"col": 4,"fields": [7250,7251]},{"file": 45,"line": 816,"col": 4,"fields": [7252]},{"file": 45,"line": 496,"col": 4,"docs": " The SetFilePointerEx function with parameters to get the current offset.\n","fields": [7253]},{"file": 45,"line": 23,"col": 4},{"file": 45,"line": 752,"col": 4},{"file": 45,"line": 171,"col": 4},{"file": 45,"line": 334,"col": 4,"fields": [7254,7255,7256]},{"file": 45,"line": 808,"col": 4,"docs": " Converts a number of nanoseconds since the POSIX epoch to a Windows FILETIME.\n","fields": [7257]},{"file": 45,"line": 729,"col": 4,"fields": [7258,7259,7260]},{"file": 45,"line": 364,"col": 4,"fields": [7261]},{"file": 45,"line": 223,"col": 4,"fields": [7262,7263,7264,7265,7266]},{"file": 45,"line": 446,"col": 4,"fields": [7267]},{"file": 45,"line": 872,"col": 4,"docs": " Call this when you made a windows NtDll call\n and you get an unexpected status.\n","fields": [7268]},{"file": 45,"line": 369,"col": 4,"fields": [7269]},{"file": 45,"line": 184,"col": 4},{"file": 45,"line": 456,"col": 4},{"file": 45,"line": 754,"col": 4,"fields": [7270,7271,7272,7273]},{"file": 45,"line": 537,"col": 4},{"file": 45,"line": 739,"col": 4,"fields": [7274]},{"file": 45,"line": 13,"col": 4},{"file": 45,"line": 619,"col": 4},{"file": 45,"line": 441,"col": 4},{"file": 45,"line": 485,"col": 4,"docs": " The SetFilePointerEx function with the `dwMoveMethod` parameter set to `FILE_END`.\n","fields": [7275,7276]},{"file": 45,"line": 14,"col": 4},{"file": 45,"line": 47,"col": 4,"fields": [7277,7278,7279,7280,7281,7282,7283]},{"file": 45,"line": 652,"col": 4,"fields": [7284,7285,7286,7287,7288,7289,7290,7291,7292,7293]},{"file": 45,"line": 9,"col": 0},{"file": 45,"line": 10,"col": 0},{"file": 45,"line": 7,"col": 0},{"file": 45,"line": 11,"col": 0},{"file": 45,"line": 6,"col": 0},{"file": 45,"line": 573,"col": 0},{"file": 45,"line": 8,"col": 0},{"file": 16,"line": 1215,"col": 4,"fields": [7294,7295]},{"file": 16,"line": 1211,"col": 4,"docs": " Returns the address from the macho file\n","fields": [7296]},{"file": 39,"line": 665,"col": 8,"docs": " If the build is multi-threaded and there is an event loop, then it calls `yield`. Otherwise,\n does nothing.\n","fields": []},{"file": 39,"line": 678,"col": 8,"fields": [7297]},{"file": 39,"line": 93,"col": 8},{"file": 39,"line": 615,"col": 8,"docs": " Bring your own linked list node. This means it can't fail.\n","fields": [7298,7299]},{"file": 39,"line": 110,"col": 8,"docs": " After initialization, call run().\n TODO copy elision / named return values so that the threads referencing *Loop\n have the correct pointer value.\n https://github.com/ziglang/zig/issues/2761 and https://github.com/ziglang/zig/issues/2765\n","fields": [7300]},{"file": 39,"line": 674,"col": 8,"docs": " call finishOneEvent when done\n","fields": [7301]},{"file": 39,"line": 162,"col": 8,"fields": [7302]},{"file": 39,"line": 439,"col": 8,"fields": [7303,7304,7305,7306,7307]},{"file": 39,"line": 652,"col": 8,"docs": " Yielding lets the event loop run, starting any unstarted async operations.\n Note that async operations automatically start when a function yields for any other reason,\n for example, when async I/O is performed. This function is intended to be used only when\n CPU bound tasks would be waiting in the event loop but never get started because no async I/O\n is performed.\n","fields": [7308]},{"file": 39,"line": 508,"col": 8,"fields": [7309,7310]},{"file": 39,"line": 448,"col": 8,"fields": [7311,7312]},{"file": 39,"line": 29,"col": 8},{"file": 39,"line": 627,"col": 8,"fields": [7313]},{"file": 39,"line": 549,"col": 8,"fields": [7314,7315,7316]},{"file": 39,"line": 120,"col": 8,"docs": " After initialization, call run().\n This is the same as `initThreadPool` using `Thread.cpuCount` to determine the thread\n pool size.\n TODO copy elision / named return values so that the threads referencing *Loop\n have the correct pointer value.\n https://github.com/ziglang/zig/issues/2761 and https://github.com/ziglang/zig/issues/2765\n","fields": [7317]},{"file": 39,"line": 533,"col": 8,"docs": " resume_node must live longer than the anyframe that it holds a reference to.\n","fields": [7318,7319,7320,7321,7322]},{"file": 39,"line": 516,"col": 8,"fields": [7323,7324,7325,7326]},{"file": 39,"line": 621,"col": 8,"fields": [7327,7328]},{"file": 39,"line": 453,"col": 8,"fields": [7329,7330,7331]},{"file": 39,"line": 512,"col": 8,"fields": [7332,7333]},{"file": 39,"line": 27,"col": 8},{"file": 39,"line": 98,"col": 8,"docs": " TODO copy elision / named return values so that the threads referencing *Loop\n have the correct pointer value.\n https://github.com/ziglang/zig/issues/2761 and https://github.com/ziglang/zig/issues/2765\n","fields": [7334]},{"file": 39,"line": 504,"col": 8,"fields": [7335,7336]},{"file": 39,"line": 129,"col": 8,"docs": " Thread count is the total thread count. The thread pool size will be\n max(thread_count - 1, 0)\n","fields": [7337,7338]},{"file": 39,"line": 427,"col": 8,"docs": " resume_node must live longer than the anyframe that it holds a reference to.\n flags must contain EPOLLET\n","fields": [7339,7340,7341,7342]},{"file": 39,"line": 806,"col": 4,"fields": [7343,7344]},{"file": 39,"line": 173,"col": 4,"fields": [7345,7346]},{"file": 39,"line": 88,"col": 4},{"file": 39,"line": 89,"col": 4},{"file": 39,"line": 167,"col": 4},{"file": 39,"line": 406,"col": 4,"fields": [7347]},{"file": 39,"line": 836,"col": 4,"fields": [7348]},{"file": 39,"line": 895,"col": 4},{"file": 39,"line": 828,"col": 4,"fields": [7349,7350]},{"file": 39,"line": 713,"col": 4,"fields": [7351]},{"file": 39,"line": 905,"col": 4},{"file": 39,"line": 916,"col": 4},{"file": 39,"line": 564,"col": 4,"fields": [7352]},{"file": 39,"line": 171,"col": 4},{"file": 23,"line": 395,"col": 8,"docs": " TODO runtime crash when I make the actual type of Flags this\n"},{"file": 46,"line": 7,"col": 4,"docs": " Describes how pointer types should be hashed.\n"},{"file": 46,"line": 55,"col": 4,"docs": " Helper function to hash a set of contiguous objects, from an array or slice.\n","fields": [7353,7354,7355]},{"file": 46,"line": 23,"col": 4,"docs": " Helper function to hash a pointer and mutate the strategy if needed.\n","fields": [7356,7357,7358]},{"file": 46,"line": 1,"col": 0},{"file": 46,"line": 200,"col": 0,"fields": [7359]},{"file": 46,"line": 184,"col": 0},{"file": 46,"line": 186,"col": 0,"fields": [7360]},{"file": 46,"line": 0,"col": 0},{"file": 46,"line": 207,"col": 0,"fields": [7361]},{"file": 46,"line": 193,"col": 0,"fields": [7362]},{"file": 46,"line": 4,"col": 0},{"file": 46,"line": 2,"col": 0},{"file": 46,"line": 183,"col": 0},{"file": 46,"line": 3,"col": 0},{"file": 7,"line": 316,"col": 20,"docs": " This data structure is used by the Zig language code generation and\n therefore must be kept in sync with the compiler implementation.\n"},{"file": 47,"line": 4,"col": 0},{"file": 47,"line": 3,"col": 0},{"file": 47,"line": 5,"col": 0},{"file": 47,"line": 2,"col": 0},{"file": 48,"line": 54,"col": 4},{"file": 48,"line": 28,"col": 4},{"file": 48,"line": 72,"col": 4},{"file": 48,"line": 27,"col": 4},{"file": 48,"line": 32,"col": 4},{"file": 48,"line": 68,"col": 4},{"file": 48,"line": 44,"col": 4},{"file": 48,"line": 9,"col": 4},{"file": 48,"line": 16,"col": 4},{"file": 48,"line": 64,"col": 4},{"file": 48,"line": 101,"col": 4},{"file": 48,"line": 52,"col": 4},{"file": 48,"line": 26,"col": 4},{"file": 48,"line": 110,"col": 4},{"file": 48,"line": 76,"col": 4},{"file": 48,"line": 8,"col": 4},{"file": 48,"line": 3,"col": 4},{"file": 48,"line": 99,"col": 4},{"file": 48,"line": 36,"col": 4},{"file": 48,"line": 59,"col": 4},{"file": 48,"line": 2,"col": 4},{"file": 48,"line": 121,"col": 4},{"file": 48,"line": 43,"col": 4},{"file": 48,"line": 90,"col": 4},{"file": 48,"line": 114,"col": 4},{"file": 48,"line": 122,"col": 4},{"file": 48,"line": 49,"col": 4},{"file": 48,"line": 0,"col": 4},{"file": 48,"line": 22,"col": 4},{"file": 48,"line": 131,"col": 4},{"file": 48,"line": 39,"col": 4},{"file": 48,"line": 117,"col": 4},{"file": 48,"line": 123,"col": 4},{"file": 48,"line": 12,"col": 4},{"file": 48,"line": 65,"col": 4},{"file": 48,"line": 5,"col": 4},{"file": 48,"line": 31,"col": 4},{"file": 48,"line": 91,"col": 4},{"file": 48,"line": 70,"col": 4},{"file": 48,"line": 86,"col": 4},{"file": 48,"line": 132,"col": 4},{"file": 48,"line": 124,"col": 4},{"file": 48,"line": 13,"col": 4},{"file": 48,"line": 35,"col": 4},{"file": 48,"line": 48,"col": 4},{"file": 48,"line": 116,"col": 4},{"file": 48,"line": 40,"col": 4},{"file": 48,"line": 107,"col": 4},{"file": 48,"line": 113,"col": 4},{"file": 48,"line": 88,"col": 4},{"file": 48,"line": 37,"col": 4},{"file": 48,"line": 51,"col": 4},{"file": 48,"line": 74,"col": 4},{"file": 48,"line": 18,"col": 4},{"file": 48,"line": 19,"col": 4},{"file": 48,"line": 138,"col": 4},{"file": 48,"line": 119,"col": 4},{"file": 48,"line": 20,"col": 4},{"file": 48,"line": 111,"col": 4},{"file": 48,"line": 112,"col": 4},{"file": 48,"line": 21,"col": 4},{"file": 48,"line": 97,"col": 4},{"file": 48,"line": 7,"col": 4},{"file": 48,"line": 11,"col": 4},{"file": 48,"line": 109,"col": 4},{"file": 48,"line": 98,"col": 4},{"file": 48,"line": 6,"col": 4},{"file": 48,"line": 129,"col": 4},{"file": 48,"line": 81,"col": 4},{"file": 48,"line": 42,"col": 4},{"file": 48,"line": 46,"col": 4},{"file": 48,"line": 108,"col": 4},{"file": 48,"line": 127,"col": 4},{"file": 48,"line": 136,"col": 4},{"file": 48,"line": 1,"col": 4},{"file": 48,"line": 30,"col": 4},{"file": 48,"line": 60,"col": 4},{"file": 48,"line": 17,"col": 4},{"file": 48,"line": 45,"col": 4},{"file": 48,"line": 133,"col": 4},{"file": 48,"line": 55,"col": 4},{"file": 48,"line": 53,"col": 4},{"file": 48,"line": 71,"col": 4},{"file": 48,"line": 102,"col": 4},{"file": 48,"line": 25,"col": 4},{"file": 48,"line": 66,"col": 4},{"file": 48,"line": 77,"col": 4},{"file": 48,"line": 73,"col": 4},{"file": 48,"line": 103,"col": 4},{"file": 48,"line": 104,"col": 4},{"file": 48,"line": 78,"col": 4},{"file": 48,"line": 34,"col": 4},{"file": 48,"line": 92,"col": 4},{"file": 48,"line": 94,"col": 4},{"file": 48,"line": 95,"col": 4},{"file": 48,"line": 67,"col": 4},{"file": 48,"line": 56,"col": 4},{"file": 48,"line": 69,"col": 4},{"file": 48,"line": 106,"col": 4},{"file": 48,"line": 47,"col": 4},{"file": 48,"line": 80,"col": 4},{"file": 48,"line": 125,"col": 4},{"file": 48,"line": 63,"col": 4},{"file": 48,"line": 96,"col": 4},{"file": 48,"line": 85,"col": 4},{"file": 48,"line": 87,"col": 4},{"file": 48,"line": 10,"col": 4},{"file": 48,"line": 105,"col": 4},{"file": 48,"line": 38,"col": 4},{"file": 48,"line": 128,"col": 4},{"file": 48,"line": 29,"col": 4},{"file": 48,"line": 89,"col": 4},{"file": 48,"line": 130,"col": 4},{"file": 48,"line": 134,"col": 4},{"file": 48,"line": 79,"col": 4},{"file": 48,"line": 135,"col": 4},{"file": 48,"line": 139,"col": 4},{"file": 48,"line": 82,"col": 4},{"file": 48,"line": 83,"col": 4},{"file": 48,"line": 75,"col": 4},{"file": 48,"line": 84,"col": 4},{"file": 48,"line": 118,"col": 4},{"file": 48,"line": 62,"col": 4},{"file": 48,"line": 4,"col": 4},{"file": 48,"line": 14,"col": 4},{"file": 48,"line": 137,"col": 4},{"file": 48,"line": 23,"col": 4},{"file": 48,"line": 41,"col": 4},{"file": 48,"line": 57,"col": 4},{"file": 48,"line": 115,"col": 4},{"file": 48,"line": 58,"col": 4},{"file": 48,"line": 100,"col": 4},{"file": 48,"line": 61,"col": 4},{"file": 48,"line": 126,"col": 4},{"file": 48,"line": 93,"col": 4},{"file": 48,"line": 120,"col": 4},{"file": 48,"line": 15,"col": 4},{"file": 48,"line": 24,"col": 4},{"file": 48,"line": 33,"col": 4},{"file": 48,"line": 50,"col": 4},{"file": 49,"line": 54,"col": 4},{"file": 49,"line": 177,"col": 4},{"file": 49,"line": 190,"col": 4},{"file": 49,"line": 20,"col": 4},{"file": 49,"line": 93,"col": 4},{"file": 49,"line": 174,"col": 4},{"file": 49,"line": 99,"col": 4},{"file": 49,"line": 49,"col": 4},{"file": 49,"line": 19,"col": 4},{"file": 49,"line": 64,"col": 4},{"file": 49,"line": 119,"col": 4},{"file": 49,"line": 101,"col": 4},{"file": 49,"line": 187,"col": 4},{"file": 49,"line": 73,"col": 4},{"file": 49,"line": 137,"col": 4},{"file": 49,"line": 173,"col": 4},{"file": 49,"line": 191,"col": 4},{"file": 49,"line": 71,"col": 4},{"file": 49,"line": 94,"col": 4},{"file": 49,"line": 147,"col": 4},{"file": 49,"line": 13,"col": 4},{"file": 49,"line": 164,"col": 4},{"file": 49,"line": 133,"col": 4},{"file": 49,"line": 36,"col": 4},{"file": 49,"line": 155,"col": 4},{"file": 49,"line": 107,"col": 4},{"file": 49,"line": 112,"col": 4},{"file": 49,"line": 131,"col": 4},{"file": 49,"line": 146,"col": 4},{"file": 49,"line": 239,"col": 4},{"file": 49,"line": 85,"col": 4},{"file": 49,"line": 180,"col": 4},{"file": 49,"line": 80,"col": 4},{"file": 49,"line": 53,"col": 4},{"file": 49,"line": 203,"col": 4},{"file": 49,"line": 181,"col": 4},{"file": 49,"line": 82,"col": 4},{"file": 49,"line": 217,"col": 4},{"file": 49,"line": 183,"col": 4},{"file": 49,"line": 159,"col": 4},{"file": 49,"line": 33,"col": 4},{"file": 49,"line": 151,"col": 4},{"file": 49,"line": 207,"col": 4},{"file": 49,"line": 149,"col": 4},{"file": 49,"line": 11,"col": 4},{"file": 49,"line": 218,"col": 4},{"file": 49,"line": 56,"col": 4},{"file": 49,"line": 242,"col": 4},{"file": 49,"line": 132,"col": 4},{"file": 49,"line": 200,"col": 4},{"file": 49,"line": 126,"col": 4},{"file": 49,"line": 7,"col": 4},{"file": 49,"line": 103,"col": 4},{"file": 49,"line": 201,"col": 4},{"file": 49,"line": 162,"col": 4},{"file": 49,"line": 134,"col": 4},{"file": 49,"line": 221,"col": 4},{"file": 49,"line": 202,"col": 4},{"file": 49,"line": 66,"col": 4},{"file": 49,"line": 83,"col": 4},{"file": 49,"line": 108,"col": 4},{"file": 49,"line": 3,"col": 4},{"file": 49,"line": 178,"col": 4},{"file": 49,"line": 81,"col": 4},{"file": 49,"line": 52,"col": 4},{"file": 49,"line": 129,"col": 4},{"file": 49,"line": 23,"col": 4},{"file": 49,"line": 2,"col": 4},{"file": 49,"line": 75,"col": 4},{"file": 49,"line": 143,"col": 4},{"file": 49,"line": 96,"col": 4},{"file": 49,"line": 106,"col": 4},{"file": 49,"line": 243,"col": 4},{"file": 49,"line": 227,"col": 4},{"file": 49,"line": 226,"col": 4},{"file": 49,"line": 172,"col": 4},{"file": 49,"line": 156,"col": 4},{"file": 49,"line": 40,"col": 4},{"file": 49,"line": 139,"col": 4},{"file": 49,"line": 210,"col": 4},{"file": 49,"line": 97,"col": 4},{"file": 49,"line": 153,"col": 4},{"file": 49,"line": 105,"col": 4},{"file": 49,"line": 167,"col": 4},{"file": 49,"line": 168,"col": 4},{"file": 49,"line": 45,"col": 4},{"file": 49,"line": 170,"col": 4},{"file": 49,"line": 184,"col": 4},{"file": 49,"line": 113,"col": 4},{"file": 49,"line": 37,"col": 4},{"file": 49,"line": 24,"col": 4},{"file": 49,"line": 78,"col": 4},{"file": 49,"line": 55,"col": 4},{"file": 49,"line": 32,"col": 4},{"file": 49,"line": 41,"col": 4},{"file": 49,"line": 87,"col": 4},{"file": 49,"line": 120,"col": 4},{"file": 49,"line": 179,"col": 4},{"file": 49,"line": 233,"col": 4},{"file": 49,"line": 84,"col": 4},{"file": 49,"line": 213,"col": 4},{"file": 49,"line": 185,"col": 4},{"file": 49,"line": 176,"col": 4},{"file": 49,"line": 12,"col": 4},{"file": 49,"line": 199,"col": 4},{"file": 49,"line": 67,"col": 4},{"file": 49,"line": 38,"col": 4},{"file": 49,"line": 223,"col": 4},{"file": 49,"line": 234,"col": 4},{"file": 49,"line": 6,"col": 4},{"file": 49,"line": 169,"col": 4},{"file": 49,"line": 25,"col": 4},{"file": 49,"line": 163,"col": 4},{"file": 49,"line": 236,"col": 4},{"file": 49,"line": 171,"col": 4},{"file": 49,"line": 70,"col": 4},{"file": 49,"line": 212,"col": 4},{"file": 49,"line": 208,"col": 4},{"file": 49,"line": 39,"col": 4},{"file": 49,"line": 14,"col": 4},{"file": 49,"line": 225,"col": 4},{"file": 49,"line": 109,"col": 4},{"file": 49,"line": 44,"col": 4},{"file": 49,"line": 235,"col": 4},{"file": 49,"line": 198,"col": 4},{"file": 49,"line": 219,"col": 4},{"file": 49,"line": 204,"col": 4},{"file": 49,"line": 43,"col": 4},{"file": 49,"line": 26,"col": 4},{"file": 49,"line": 60,"col": 4},{"file": 49,"line": 47,"col": 4},{"file": 49,"line": 30,"col": 4},{"file": 49,"line": 216,"col": 4},{"file": 49,"line": 222,"col": 4},{"file": 49,"line": 188,"col": 4},{"file": 49,"line": 4,"col": 4},{"file": 49,"line": 31,"col": 4},{"file": 49,"line": 15,"col": 4},{"file": 49,"line": 228,"col": 4},{"file": 49,"line": 58,"col": 4},{"file": 49,"line": 90,"col": 4},{"file": 49,"line": 237,"col": 4},{"file": 49,"line": 193,"col": 4},{"file": 49,"line": 224,"col": 4},{"file": 49,"line": 194,"col": 4},{"file": 49,"line": 196,"col": 4},{"file": 49,"line": 238,"col": 4},{"file": 49,"line": 135,"col": 4},{"file": 49,"line": 50,"col": 4},{"file": 49,"line": 102,"col": 4},{"file": 49,"line": 122,"col": 4},{"file": 49,"line": 29,"col": 4},{"file": 49,"line": 230,"col": 4},{"file": 49,"line": 77,"col": 4},{"file": 49,"line": 0,"col": 4},{"file": 49,"line": 118,"col": 4},{"file": 49,"line": 150,"col": 4},{"file": 49,"line": 88,"col": 4},{"file": 49,"line": 123,"col": 4},{"file": 49,"line": 17,"col": 4},{"file": 49,"line": 229,"col": 4},{"file": 49,"line": 114,"col": 4},{"file": 49,"line": 104,"col": 4},{"file": 49,"line": 195,"col": 4},{"file": 49,"line": 117,"col": 4},{"file": 49,"line": 57,"col": 4},{"file": 49,"line": 59,"col": 4},{"file": 49,"line": 211,"col": 4},{"file": 49,"line": 145,"col": 4},{"file": 49,"line": 121,"col": 4},{"file": 49,"line": 161,"col": 4},{"file": 49,"line": 165,"col": 4},{"file": 49,"line": 18,"col": 4},{"file": 49,"line": 42,"col": 4},{"file": 49,"line": 141,"col": 4},{"file": 49,"line": 86,"col": 4},{"file": 49,"line": 231,"col": 4},{"file": 49,"line": 189,"col": 4},{"file": 49,"line": 62,"col": 4},{"file": 49,"line": 76,"col": 4},{"file": 49,"line": 138,"col": 4},{"file": 49,"line": 186,"col": 4},{"file": 49,"line": 241,"col": 4},{"file": 49,"line": 125,"col": 4},{"file": 49,"line": 91,"col": 4},{"file": 49,"line": 175,"col": 4},{"file": 49,"line": 9,"col": 4},{"file": 49,"line": 209,"col": 4},{"file": 49,"line": 115,"col": 4},{"file": 49,"line": 5,"col": 4},{"file": 49,"line": 152,"col": 4},{"file": 49,"line": 16,"col": 4},{"file": 49,"line": 157,"col": 4},{"file": 49,"line": 205,"col": 4},{"file": 49,"line": 63,"col": 4},{"file": 49,"line": 61,"col": 4},{"file": 49,"line": 206,"col": 4},{"file": 49,"line": 21,"col": 4},{"file": 49,"line": 65,"col": 4},{"file": 49,"line": 8,"col": 4},{"file": 49,"line": 220,"col": 4},{"file": 49,"line": 51,"col": 4},{"file": 49,"line": 142,"col": 4},{"file": 49,"line": 48,"col": 4},{"file": 49,"line": 124,"col": 4},{"file": 49,"line": 89,"col": 4},{"file": 49,"line": 215,"col": 4},{"file": 49,"line": 160,"col": 4},{"file": 49,"line": 128,"col": 4},{"file": 49,"line": 98,"col": 4},{"file": 49,"line": 140,"col": 4},{"file": 49,"line": 79,"col": 4},{"file": 49,"line": 46,"col": 4},{"file": 49,"line": 110,"col": 4},{"file": 49,"line": 10,"col": 4},{"file": 49,"line": 74,"col": 4},{"file": 49,"line": 130,"col": 4},{"file": 49,"line": 27,"col": 4},{"file": 49,"line": 240,"col": 4},{"file": 49,"line": 148,"col": 4},{"file": 49,"line": 22,"col": 4},{"file": 49,"line": 192,"col": 4},{"file": 49,"line": 95,"col": 4},{"file": 49,"line": 182,"col": 4},{"file": 49,"line": 154,"col": 4},{"file": 49,"line": 144,"col": 4},{"file": 49,"line": 72,"col": 4},{"file": 49,"line": 197,"col": 4},{"file": 49,"line": 111,"col": 4},{"file": 49,"line": 68,"col": 4},{"file": 49,"line": 127,"col": 4},{"file": 49,"line": 136,"col": 4},{"file": 49,"line": 116,"col": 4},{"file": 49,"line": 100,"col": 4},{"file": 49,"line": 232,"col": 4},{"file": 49,"line": 166,"col": 4},{"file": 49,"line": 69,"col": 4},{"file": 49,"line": 35,"col": 4},{"file": 49,"line": 214,"col": 4},{"file": 49,"line": 158,"col": 4},{"file": 49,"line": 34,"col": 4},{"file": 49,"line": 28,"col": 4},{"file": 49,"line": 1,"col": 4},{"file": 49,"line": 92,"col": 4},{"file": 50,"line": 2303,"col": 4,"docs": " No more local user identifiers (LUIDs) are available.\n"},{"file": 50,"line": 1393,"col": 4,"docs": " The specified interrupt vector is still connected.\n"},{"file": 50,"line": 3560,"col": 4,"docs": " The specified printer cannot be shared.\n"},{"file": 50,"line": 1240,"col": 4,"docs": " {Fatal Application Exit} %hs.\n"},{"file": 50,"line": 2396,"col": 4,"docs": " The logon session ID is already in use.\n"},{"file": 50,"line": 2696,"col": 4,"docs": " An error was encountered while processing an XML digital signature.\n"},{"file": 50,"line": 3389,"col": 4,"docs": " The context has expired and can no longer be used.\n"},{"file": 50,"line": 268,"col": 4,"docs": " The semaphore timeout period has expired.\n"},{"file": 50,"line": 283,"col": 4,"docs": " The specified module could not be found.\n"},{"file": 50,"line": 664,"col": 4,"docs": " A data integrity checksum error occurred. Data in the file stream is corrupt.\n"},{"file": 50,"line": 817,"col": 4,"docs": " Indicates that an attempt was made to grow an LDT by setting its size, or that the size was not an even number of selectors.\n"},{"file": 50,"line": 250,"col": 4,"docs": " No more internal file identifiers available.\n"},{"file": 50,"line": 820,"col": 4,"docs": " Indicates that the starting value for the LDT information was not an integral multiple of the selector size.\n"},{"file": 50,"line": 1054,"col": 4,"docs": " The system is in the process of shutting down.\n"},{"file": 50,"line": 571,"col": 4,"docs": " The extended attributes did not fit in the buffer.\n"},{"file": 50,"line": 826,"col": 4,"docs": " Indicates a process has too many threads to perform the requested action. For example, assignment of a primary token may only be performed when a process has zero or one threads.\n"},{"file": 50,"line": 3512,"col": 4,"docs": " The specified print monitor has already been installed.\n"},{"file": 50,"line": 733,"col": 4,"docs": " User profile cannot be loaded.\n"},{"file": 50,"line": 2546,"col": 4,"docs": " The list box identifier was not found.\n"},{"file": 50,"line": 2948,"col": 4,"docs": " The interface is unknown.\n"},{"file": 50,"line": 1474,"col": 4,"docs": " The resources required for this device conflict with the MCFG table.\n"},{"file": 50,"line": 1432,"col": 4,"docs": " A version number could not be parsed.\n"},{"file": 50,"line": 925,"col": 4,"docs": " The stream is not a tiny stream.\n"},{"file": 50,"line": 1255,"col": 4,"docs": " Application popup: %1 : %2\n"},{"file": 50,"line": 1738,"col": 4,"docs": " Unable to unload the media.\n"},{"file": 50,"line": 214,"col": 4,"docs": " The exclusive semaphore is owned by another process.\n"},{"file": 50,"line": 3134,"col": 4,"docs": " The byte count is too small.\n"},{"file": 50,"line": 280,"col": 4,"docs": " The disk has no volume label.\n"},{"file": 50,"line": 3032,"col": 4,"docs": " The authentication service is unknown.\n"},{"file": 50,"line": 2636,"col": 4,"docs": " Popup menu already active.\n"},{"file": 50,"line": 3383,"col": 4,"docs": " The group element could not be removed.\n"},{"file": 50,"line": 1099,"col": 4,"docs": " The password provided is too long to meet the policy of your user account. Please choose a shorter password.\n"},{"file": 50,"line": 229,"col": 4,"docs": " Insert the diskette for drive %1.\n"},{"file": 50,"line": 1447,"col": 4,"docs": " The system power state is transitioning from %2 to %3.\n"},{"file": 50,"line": 2186,"col": 4,"docs": " The requested file operation failed because the storage quota was exceeded. To free up disk space, move files to a different location or delete unnecessary files. For more information, contact your system administrator.\n"},{"file": 50,"line": 1579,"col": 4,"docs": " The configuration registry key could not be written.\n"},{"file": 50,"line": 2549,"col": 4,"docs": " No wildcards were found.\n"},{"file": 50,"line": 2792,"col": 4,"docs": " This installation package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer package.\n"},{"file": 50,"line": 1477,"col": 4,"docs": " The volume repair could not be performed while it is online. Please schedule to take the volume offline so that it can be repaired.\n"},{"file": 50,"line": 2591,"col": 4,"docs": " The hook procedure is not installed.\n"},{"file": 50,"line": 121,"col": 4,"docs": " You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name.\n"},{"file": 50,"line": 1195,"col": 4,"docs": " {Object Exists} An attempt was made to create an object and the object name already existed.\n"},{"file": 50,"line": 3302,"col": 4,"docs": " The specified form name is invalid.\n"},{"file": 50,"line": 100,"col": 4,"docs": " The process cannot access the file because another process has locked a portion of the file.\n"},{"file": 50,"line": 2098,"col": 4,"docs": " This program is blocked by group policy. For more information, contact your system administrator.\n"},{"file": 50,"line": 1666,"col": 4,"docs": " After starting, the service hung in a start-pending state.\n"},{"file": 50,"line": 3395,"col": 4,"docs": " The total delegated trust creation quota has been exceeded.\n"},{"file": 50,"line": 1855,"col": 4,"docs": " The indicated element does not exist.\n"},{"file": 50,"line": 421,"col": 4,"docs": " The flag passed is not correct.\n"},{"file": 50,"line": 649,"col": 4,"docs": " The scope specified was not found.\n"},{"file": 50,"line": 1948,"col": 4,"docs": " The format of the specified computer name is invalid.\n"},{"file": 50,"line": 1771,"col": 4,"docs": " A serial I/O operation was completed by another write to the serial port. The IOCTL_SERIAL_XOFF_COUNTER reached zero.)\n"},{"file": 50,"line": 1969,"col": 4,"docs": " The format of the specified message name is invalid.\n"},{"file": 50,"line": 2879,"col": 4,"docs": " Update removal was disallowed by policy.\n"},{"file": 50,"line": 3554,"col": 4,"docs": " The requested print job has failed to print. A print system update requires the job to be resubmitted.\n"},{"file": 50,"line": 2246,"col": 4,"docs": " The name provided is not a properly formed account name.\n"},{"file": 50,"line": 2381,"col": 4,"docs": " A security descriptor is not in the right format (absolute or self-relative).\n"},{"file": 50,"line": 1399,"col": 4,"docs": " Debugger handled exception.\n"},{"file": 50,"line": 766,"col": 4,"docs": " An invalid unwind target was encountered during an unwind operation.\n"},{"file": 50,"line": 265,"col": 4,"docs": " This function is not supported on this system.\n"},{"file": 50,"line": 1684,"col": 4,"docs": " The current boot has already been accepted for use as the last-known-good control set.\n"},{"file": 50,"line": 1345,"col": 4,"docs": " Page fault was a demand zero fault.\n"},{"file": 50,"line": 2414,"col": 4,"docs": " Cannot perform this operation on this built-in special group.\n"},{"file": 50,"line": 2567,"col": 4,"docs": " The window is not a combo box.\n"},{"file": 50,"line": 532,"col": 4,"docs": " The pipe is local.\n"},{"file": 50,"line": 3005,"col": 4,"docs": " The name syntax is not supported.\n"},{"file": 50,"line": 3107,"col": 4,"docs": " The list of RPC servers available for the binding of auto handles has been exhausted.\n"},{"file": 50,"line": 490,"col": 4,"docs": " The signal handler cannot be set.\n"},{"file": 50,"line": 76,"col": 4,"docs": " The drive cannot locate a specific area or track on the disk.\n"},{"file": 50,"line": 1564,"col": 4,"docs": " An attempt was made to reference a token that does not exist.\n"},{"file": 50,"line": 1303,"col": 4,"docs": " ERROR_WAIT_63\n"},{"file": 50,"line": 1528,"col": 4,"docs": " The I/O operation has been aborted because of either a thread exit or an application request.\n"},{"file": 50,"line": 3236,"col": 4,"docs": " Not enough quota is available to process this command.\n"},{"file": 50,"line": 643,"col": 4,"docs": " The device does not support the command feature.\n"},{"file": 50,"line": 316,"col": 4,"docs": " The system tried to delete the substitution of a drive that is not substituted.\n"},{"file": 50,"line": 3176,"col": 4,"docs": " The specified port is unknown.\n"},{"file": 50,"line": 3557,"col": 4,"docs": " The printer driver does not contain a valid manifest, or contains too many manifests.\n"},{"file": 50,"line": 3164,"col": 4,"docs": " An attempt was made to logon, but the network logon service was not started.\n"},{"file": 50,"line": 3083,"col": 4,"docs": " The requested operation is not supported.\n"},{"file": 50,"line": 196,"col": 4,"docs": " The local device name is already in use.\n"},{"file": 50,"line": 2537,"col": 4,"docs": " Invalid index.\n"},{"file": 50,"line": 2627,"col": 4,"docs": " Invalid GW_* command.\n"},{"file": 50,"line": 898,"col": 4,"docs": " {Registry File Failure} The registry cannot load the hive (file): %hs or its log or alternate. It is corrupt, absent, or not writable.\n"},{"file": 50,"line": 1795,"col": 4,"docs": " While accessing the hard disk, a disk controller reset was needed, but even that failed.\n"},{"file": 50,"line": 3131,"col": 4,"docs": " The enumeration value is out of range.\n"},{"file": 50,"line": 832,"col": 4,"docs": " Page file quota was exceeded.\n"},{"file": 50,"line": 2753,"col": 4,"docs": " Component ID not registered.\n"},{"file": 50,"line": 3206,"col": 4,"docs": " There are no more bindings.\n"},{"file": 50,"line": 1753,"col": 4,"docs": " A dynamic link library (DLL) initialization routine failed.\n"},{"file": 50,"line": 2161,"col": 4,"docs": " Insufficient information exists to identify the cause of failure.\n"},{"file": 50,"line": 2957,"col": 4,"docs": " The endpoint cannot be created.\n"},{"file": 50,"line": 1996,"col": 4,"docs": " The network connection was gracefully closed.\n"},{"file": 50,"line": 1927,"col": 4,"docs": " The network path was either typed incorrectly, does not exist, or the network provider is not currently available. Please try retyping the path or contact your network administrator.\n"},{"file": 50,"line": 2171,"col": 4,"docs": " The service start failed since one or more services in the same process have an incompatible service SID type setting. A service with restricted service SID type can only coexist in the same process with other services with a restricted SID type. If the service SID type for this service was just configured, the hosting process must be restarted in order to start this service.\n On Windows Server 2003 and Windows XP, an unrestricted service cannot coexist in the same process with other services. The service with the unrestricted service SID type must be moved to an owned process in order to start this service.\n"},{"file": 50,"line": 2300,"col": 4,"docs": " Too many local user identifiers (LUIDs) were requested at one time.\n"},{"file": 50,"line": 655,"col": 4,"docs": " The Central Access Policy obtained from Active Directory is invalid.\n"},{"file": 50,"line": 1207,"col": 4,"docs": " {Segment Load} A virtual DOS machine (VDM) is loading, unloading, or moving an MS-DOS or Win16 program segment image. An exception is raised so a debugger can load, unload or track symbols and breakpoints within these 16-bit segments.\n"},{"file": 50,"line": 574,"col": 4,"docs": " The extended attribute file on the mounted file system is corrupt.\n"},{"file": 50,"line": 1876,"col": 4,"docs": " There was no match for the specified key in the index.\n"},{"file": 50,"line": 2258,"col": 4,"docs": " The specified group does not exist.\n"},{"file": 50,"line": 2345,"col": 4,"docs": " The type of the token is inappropriate for its attempted use.\n"},{"file": 50,"line": 2789,"col": 4,"docs": " This installation package could not be opened. Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package.\n"},{"file": 50,"line": 148,"col": 4,"docs": " The printer queue is full.\n"},{"file": 50,"line": 589,"col": 4,"docs": " Too many posts were made to a semaphore.\n"},{"file": 50,"line": 1390,"col": 4,"docs": " The specified interrupt vector was already connected.\n"},{"file": 50,"line": 142,"col": 4,"docs": " An unexpected network error occurred.\n"},{"file": 50,"line": 1642,"col": 4,"docs": " The service has not been started.\n"},{"file": 50,"line": 3200,"col": 4,"docs": " The specified datatype is invalid.\n"},{"file": 50,"line": 55,"col": 4,"docs": " There are no more files.\n"},{"file": 50,"line": 2360,"col": 4,"docs": " This operation is only allowed for the Primary Domain Controller of the domain.\n"},{"file": 50,"line": 2834,"col": 4,"docs": " Component not used on this computer.\n"},{"file": 50,"line": 1744,"col": 4,"docs": " The I/O bus was reset.\n"},{"file": 50,"line": 247,"col": 4,"docs": " There is not enough space on the disk.\n"},{"file": 50,"line": 1450,"col": 4,"docs": " The system power state is transitioning from %2 to %3 but could enter %4.\n"},{"file": 50,"line": 2522,"col": 4,"docs": " Invalid window; it belongs to other thread.\n"},{"file": 50,"line": 3059,"col": 4,"docs": " The version option is invalid.\n"},{"file": 50,"line": 919,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs. The data has been lost. This error may be caused by a failure of your computer hardware or network connection. Please try to save this file elsewhere.\n"},{"file": 50,"line": 2801,"col": 4,"docs": " The language of this installation package is not supported by your system.\n"},{"file": 50,"line": 1276,"col": 4,"docs": " The CPUs in this multiprocessor system are not all the same revision level. To use all processors the operating system restricts itself to the features of the least capable processor in the system. Should problems occur with this system, contact the CPU manufacturer to see if this mix of processors is supported.\n"},{"file": 50,"line": 1294,"col": 4,"docs": " ERROR_WAIT_1\n"},{"file": 50,"line": 1420,"col": 4,"docs": " The data provider was not able to interpret the flags set for a column binding in an accessor.\n"},{"file": 50,"line": 1723,"col": 4,"docs": " No more data is on the tape.\n"},{"file": 50,"line": 1258,"col": 4,"docs": " ERROR_ALREADY_WIN32\n"},{"file": 50,"line": 3266,"col": 4,"docs": " Thread is not canceled.\n"},{"file": 50,"line": 286,"col": 4,"docs": " The specified procedure could not be found.\n"},{"file": 50,"line": 22,"col": 4,"docs": " The storage control blocks were destroyed.\n"},{"file": 50,"line": 1600,"col": 4,"docs": " Cannot create a symbolic link in a registry key that already has subkeys or values.\n"},{"file": 50,"line": 1906,"col": 4,"docs": " A file was found, but it may not be the correct file.\n"},{"file": 50,"line": 1567,"col": 4,"docs": " The configuration registry database is corrupt.\n"},{"file": 50,"line": 1966,"col": 4,"docs": " The format of the specified password is invalid.\n"},{"file": 50,"line": 2660,"col": 4,"docs": " Insufficient quota to complete the requested service.\n"},{"file": 50,"line": 616,"col": 4,"docs": " A requested file lock operation cannot be processed due to an invalid byte range.\n"},{"file": 50,"line": 544,"col": 4,"docs": " No process is on the other end of the pipe.\n"},{"file": 50,"line": 2825,"col": 4,"docs": " The Windows Installer service failed to start. Contact your support personnel.\n"},{"file": 50,"line": 2651,"col": 4,"docs": " Insufficient system resources exist to complete the requested service.\n"},{"file": 50,"line": 715,"col": 4,"docs": " The maximum number of sessions has been reached.\n"},{"file": 50,"line": 3065,"col": 4,"docs": " There is nothing to unexport.\n"},{"file": 50,"line": 235,"col": 4,"docs": " The disk is in use or locked by another process.\n"},{"file": 50,"line": 3095,"col": 4,"docs": " An addressing error occurred in the RPC server.\n"},{"file": 50,"line": 319,"col": 4,"docs": " The system tried to join a drive to a directory on a joined drive.\n"},{"file": 50,"line": 190,"col": 4,"docs": " Fail on INT 24.\n"},{"file": 50,"line": 517,"col": 4,"docs": " The file type being saved or retrieved has been blocked.\n"},{"file": 50,"line": 172,"col": 4,"docs": " The network BIOS session limit was exceeded.\n"},{"file": 50,"line": 301,"col": 4,"docs": " The file pointer cannot be set on the specified device or file.\n"},{"file": 50,"line": 2804,"col": 4,"docs": " Error applying transforms. Verify that the specified transform paths are valid.\n"},{"file": 50,"line": 3011,"col": 4,"docs": " The endpoint is a duplicate.\n"},{"file": 50,"line": 2342,"col": 4,"docs": " The validation information class requested was invalid.\n"},{"file": 50,"line": 3488,"col": 4,"docs": " Active connections still exist.\n"},{"file": 50,"line": 1648,"col": 4,"docs": " An exception occurred in the service when handling the control request.\n"},{"file": 50,"line": 1663,"col": 4,"docs": " The service did not start due to a logon failure.\n"},{"file": 50,"line": 610,"col": 4,"docs": " Short names are not enabled on this volume.\n"},{"file": 50,"line": 2936,"col": 4,"docs": " The RPC server is already listening.\n"},{"file": 50,"line": 667,"col": 4,"docs": " An attempt was made to modify both a KERNEL and normal Extended Attribute (EA) in the same operation.\n"},{"file": 50,"line": 2573,"col": 4,"docs": " Invalid device context (DC) handle.\n"},{"file": 50,"line": 1825,"col": 4,"docs": " Cannot start more than one instance of the specified program.\n"},{"file": 50,"line": 2735,"col": 4,"docs": " The Windows Installer Service could not be accessed. This can occur if the Windows Installer is not correctly installed. Contact your support personnel for assistance.\n"},{"file": 50,"line": 2504,"col": 4,"docs": " Invalid cursor handle.\n"},{"file": 50,"line": 2588,"col": 4,"docs": " The journal hook procedure is already installed.\n"},{"file": 50,"line": 2014,"col": 4,"docs": " The network location cannot be reached. For information about network troubleshooting, see Windows Help.\n"},{"file": 50,"line": 2249,"col": 4,"docs": " The specified account already exists.\n"},{"file": 50,"line": 28,"col": 4,"docs": " The storage control block address is invalid.\n"},{"file": 50,"line": 1870,"col": 4,"docs": " The device is not connected.\n"},{"file": 50,"line": 1123,"col": 4,"docs": " Driver %2 returned invalid ID for a child device (%3).\n"},{"file": 50,"line": 2777,"col": 4,"docs": " SQL query syntax invalid or unsupported.\n"},{"file": 50,"line": 1585,"col": 4,"docs": " The registry is corrupted. The structure of one of the files containing registry data is corrupted, or the system's memory image of the file is corrupted, or the file could not be recovered because the alternate copy or log was absent or corrupted.\n"},{"file": 50,"line": 2489,"col": 4,"docs": " Mutual Authentication failed. The server's password is out of date at the domain controller.\n"},{"file": 50,"line": 1837,"col": 4,"docs": " An error occurred in sending the command to the application.\n"},{"file": 50,"line": 2981,"col": 4,"docs": " A remote procedure call (RPC) protocol error occurred.\n"},{"file": 50,"line": 2579,"col": 4,"docs": " Invalid hook procedure.\n"},{"file": 50,"line": 1483,"col": 4,"docs": " One of the volume corruption logs is full. Further corruptions that may be detected won't be logged.\n"},{"file": 50,"line": 2240,"col": 4,"docs": " A specified privilege does not exist.\n"},{"file": 50,"line": 604,"col": 4,"docs": " The file cannot be opened because it is in the process of being deleted.\n"},{"file": 50,"line": 853,"col": 4,"docs": " {Application Error} The exception %s (0x%08lx) occurred in the application at location 0x%08lx.\n"},{"file": 50,"line": 607,"col": 4,"docs": " Short name settings may not be changed on this volume due to the global registry setting.\n"},{"file": 50,"line": 3494,"col": 4,"docs": " The specified print monitor is unknown.\n"},{"file": 50,"line": 1489,"col": 4,"docs": " One of the volume corruption logs is unavailable for being operated on.\n"},{"file": 50,"line": 595,"col": 4,"docs": " The oplock request is denied.\n"},{"file": 50,"line": 1315,"col": 4,"docs": " ERROR_KERNEL_APC\n"},{"file": 50,"line": 1441,"col": 4,"docs": " The attempted operation required self healing to be enabled.\n"},{"file": 50,"line": 1219,"col": 4,"docs": " {Machine Type Mismatch} The image file %hs is valid, but is for a machine type other than the current machine. Select OK to continue, or CANCEL to fail the DLL load.\n"},{"file": 50,"line": 1435,"col": 4,"docs": " The iterator's start position is invalid.\n"},{"file": 50,"line": 16,"col": 4,"docs": " Access is denied.\n"},{"file": 50,"line": 691,"col": 4,"docs": " The storage device does not provide redundancy.\n"},{"file": 50,"line": 793,"col": 4,"docs": " The number of active profiling objects is at the maximum and no more may be started.\n"},{"file": 50,"line": 1537,"col": 4,"docs": " Invalid access to memory location.\n"},{"file": 50,"line": 1150,"col": 4,"docs": " The Plug and Play query operation was not successful.\n"},{"file": 50,"line": 2318,"col": 4,"docs": " The inherited access control list (ACL) or access control entry (ACE) could not be built.\n"},{"file": 50,"line": 3533,"col": 4,"docs": " The printer driver is known to be unreliable.\n"},{"file": 50,"line": 10,"col": 4,"docs": " The system cannot find the path specified.\n"},{"file": 50,"line": 3092,"col": 4,"docs": " The RPC server attempted an integer division by zero.\n"},{"file": 50,"line": 3284,"col": 4,"docs": " Unsupported RPC pipe version.\n"},{"file": 50,"line": 1690,"col": 4,"docs": " The name is already in use as either a service name or a service display name.\n"},{"file": 50,"line": 3137,"col": 4,"docs": " The stub received bad data.\n"},{"file": 50,"line": 2693,"col": 4,"docs": " Windows was unable to parse the requested XML data.\n"},{"file": 50,"line": 2276,"col": 4,"docs": " Unable to update the password. The value provided for the new password does not meet the length, complexity, or history requirements of the domain.\n"},{"file": 50,"line": 2158,"col": 4,"docs": " %1 is a 16-bit application. You do not have permissions to execute 16-bit applications. Check your permissions with your system administrator.\n"},{"file": 50,"line": 427,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 952,"col": 4,"docs": " The timer resolution was not previously set by the current process.\n"},{"file": 50,"line": 2008,"col": 4,"docs": " An invalid operation was attempted on an active network connection.\n"},{"file": 50,"line": 2843,"col": 4,"docs": " This update package cannot be processed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.\n"},{"file": 50,"line": 2531,"col": 4,"docs": " Class does not exist.\n"},{"file": 50,"line": 463,"col": 4,"docs": " The code segment cannot be greater than or equal to 64K.\n"},{"file": 50,"line": 1501,"col": 4,"docs": " The oplock that was associated with this handle is now associated with a different handle.\n"},{"file": 50,"line": 1813,"col": 4,"docs": " The system BIOS failed an attempt to change the system power state.\n"},{"file": 50,"line": 2576,"col": 4,"docs": " Invalid hook procedure type.\n"},{"file": 50,"line": 1153,"col": 4,"docs": " A frame consolidation has been executed.\n"},{"file": 50,"line": 1747,"col": 4,"docs": " No media in drive.\n"},{"file": 50,"line": 727,"col": 4,"docs": " The process is not in background processing mode.\n"},{"file": 50,"line": 3419,"col": 4,"docs": " The window style or class attribute is invalid for this operation.\n"},{"file": 50,"line": 2969,"col": 4,"docs": " The network options are invalid.\n"},{"file": 50,"line": 2756,"col": 4,"docs": " Unknown property.\n"},{"file": 50,"line": 7,"col": 4,"docs": " The system cannot find the file specified.\n"},{"file": 50,"line": 181,"col": 4,"docs": " The specified printer or disk device has been paused.\n"},{"file": 50,"line": 1882,"col": 4,"docs": " The point passed to GetMouseMovePoints is not in the buffer.\n"},{"file": 50,"line": 3086,"col": 4,"docs": " No security context is available to allow impersonation.\n"},{"file": 50,"line": 703,"col": 4,"docs": " The specified copy of the requested data could not be read.\n"},{"file": 50,"line": 2131,"col": 4,"docs": " Windows cannot open this program since it has been disabled.\n"},{"file": 50,"line": 3014,"col": 4,"docs": " The authentication type is unknown.\n"},{"file": 50,"line": 679,"col": 4,"docs": " An operation is currently in progress with the device.\n"},{"file": 50,"line": 1486,"col": 4,"docs": " One of the volume corruption logs is internally corrupted and needs to be recreated. The volume may contain undetected corruptions and must be scanned.\n"},{"file": 50,"line": 2225,"col": 4,"docs": " This security ID may not be assigned as the primary group of an object.\n"},{"file": 50,"line": 3401,"col": 4,"docs": " The computer you are signing into is protected by an authentication firewall. The specified account is not allowed to authenticate to the computer.\n"},{"file": 50,"line": 775,"col": 4,"docs": " An attempt was made to lower a quota limit below the current usage.\n"},{"file": 50,"line": 910,"col": 4,"docs": " NTVDM encountered a hard error.\n"},{"file": 50,"line": 3365,"col": 4,"docs": " Not all object UUIDs could be exported to the specified entry.\n"},{"file": 50,"line": 619,"col": 4,"docs": " The subsystem needed to support the image type is not present.\n"},{"file": 50,"line": 256,"col": 4,"docs": " The IOCTL call made by the application program is not correct.\n"},{"file": 50,"line": 1675,"col": 4,"docs": " The specified service already exists.\n"},{"file": 50,"line": 1072,"col": 4,"docs": " The \"%hs\" encountered an error while applying power or reading the device configuration. This may be caused by a failure of your hardware or by a poor connection.\n"},{"file": 50,"line": 2921,"col": 4,"docs": " No endpoint was found.\n"},{"file": 50,"line": 2450,"col": 4,"docs": " During a logon attempt, the user's security context accumulated too many security IDs.\n"},{"file": 50,"line": 3377,"col": 4,"docs": " The specified profile element could not be removed.\n"},{"file": 50,"line": 1936,"col": 4,"docs": " The network connection profile is corrupted.\n"},{"file": 50,"line": 769,"col": 4,"docs": " Invalid Object Attributes specified to NtCreatePort or invalid Port Attributes specified to NtConnectPort\n"},{"file": 50,"line": 2720,"col": 4,"docs": " The event log file is full.\n"},{"file": 50,"line": 1039,"col": 4,"docs": " A device was removed so enumeration must be restarted.\n"},{"file": 50,"line": 1387,"col": 4,"docs": " A file system or file system filter driver has successfully completed an FsFilter operation.\n"},{"file": 50,"line": 2600,"col": 4,"docs": " This list box does not support tab stops.\n"},{"file": 50,"line": 2993,"col": 4,"docs": " The tag is invalid.\n"},{"file": 50,"line": 2435,"col": 4,"docs": " The specified local group already exists.\n"},{"file": 50,"line": 2954,"col": 4,"docs": " There are no protocol sequences.\n"},{"file": 50,"line": 2189,"col": 4,"docs": " The requested file operation failed because the storage policy blocks that type of file. For more information, contact your system administrator.\n"},{"file": 50,"line": 118,"col": 4,"docs": " Windows cannot find the network path. Verify that the network path is correct and the destination computer is not busy or turned off. If Windows still cannot find the network path, contact your network administrator.\n"},{"file": 50,"line": 175,"col": 4,"docs": " The remote server has been paused or is in the process of being started.\n"},{"file": 50,"line": 3542,"col": 4,"docs": " Unable to find a core driver package that is required by the printer driver package.\n"},{"file": 50,"line": 1030,"col": 4,"docs": " {System Standby Failed} The driver %hs does not support standby mode. Updating this driver may allow the system to go to standby mode.\n"},{"file": 50,"line": 466,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 2930,"col": 4,"docs": " The object universal unique identifier (UUID) has already been registered.\n"},{"file": 50,"line": 3029,"col": 4,"docs": " The binding does not contain any authentication information.\n"},{"file": 50,"line": 2023,"col": 4,"docs": " The request was aborted.\n"},{"file": 50,"line": 127,"col": 4,"docs": " The network is busy.\n"},{"file": 50,"line": 325,"col": 4,"docs": " The system tried to join a drive to a directory on a substituted drive.\n"},{"file": 50,"line": 502,"col": 4,"docs": " This version of %1 is not compatible with the version of Windows you're running. Check your computer's system information and then contact the software publisher.\n"},{"file": 50,"line": 1903,"col": 4,"docs": " The volume change journal is not active.\n"},{"file": 50,"line": 2393,"col": 4,"docs": " The logon session is not in a state that is consistent with the requested operation.\n"},{"file": 50,"line": 1531,"col": 4,"docs": " Overlapped I/O event is not in a signaled state.\n"},{"file": 50,"line": 1051,"col": 4,"docs": " ERROR_MULTIPLE_FAULT_VIOLATION\n"},{"file": 50,"line": 1963,"col": 4,"docs": " The format of the specified share name is invalid.\n"},{"file": 50,"line": 742,"col": 4,"docs": " Waiting for a process to open the other end of the pipe.\n"},{"file": 50,"line": 2456,"col": 4,"docs": " A cross-encrypted password is necessary to change a user password.\n"},{"file": 50,"line": 1576,"col": 4,"docs": " The configuration registry key could not be read.\n"},{"file": 50,"line": 1321,"col": 4,"docs": " The requested operation requires elevation.\n"},{"file": 50,"line": 2110,"col": 4,"docs": " The Kerberos protocol encountered an error while attempting to utilize the smartcard subsystem.\n"},{"file": 50,"line": 2116,"col": 4,"docs": " The machine is locked and cannot be shut down without the force option.\n"},{"file": 50,"line": 1594,"col": 4,"docs": " Illegal operation attempted on a registry key that has been marked for deletion.\n"},{"file": 50,"line": 400,"col": 4,"docs": " The requested resource is in use.\n"},{"file": 50,"line": 2939,"col": 4,"docs": " No protocol sequences have been registered.\n"},{"file": 50,"line": 1954,"col": 4,"docs": " The format of the specified domain name is invalid.\n"},{"file": 50,"line": 781,"col": 4,"docs": " An attempt was made to execute an instruction at an unaligned address and the host system does not support unaligned instruction references.\n"},{"file": 50,"line": 160,"col": 4,"docs": " Network access is denied.\n"},{"file": 50,"line": 1678,"col": 4,"docs": " The system is currently running with the last-known-good configuration.\n"},{"file": 50,"line": 2429,"col": 4,"docs": " The specified account name is not a member of the group.\n"},{"file": 50,"line": 1402,"col": 4,"docs": " Debugger continued.\n"},{"file": 50,"line": 3404,"col": 4,"docs": " Remote connections to the Print Spooler are blocked by a policy set on your machine.\n"},{"file": 50,"line": 2864,"col": 4,"docs": " One or more customizations are not permitted by software restriction policy.\n"},{"file": 50,"line": 694,"col": 4,"docs": " An operation is not supported on a resident file.\n"},{"file": 50,"line": 1603,"col": 4,"docs": " Cannot create a stable subkey under a volatile parent key.\n"},{"file": 50,"line": 2020,"col": 4,"docs": " No service is operating at the destination network endpoint on the remote system.\n"},{"file": 50,"line": 1090,"col": 4,"docs": " The driver could not be loaded because a previous version of the driver is still in memory.\n"},{"file": 50,"line": 73,"col": 4,"docs": " The program issued a command but the command length is incorrect.\n"},{"file": 50,"line": 82,"col": 4,"docs": " The drive cannot find the sector requested.\n"},{"file": 50,"line": 2333,"col": 4,"docs": " The specified attributes are invalid, or incompatible with the attributes for the group as a whole.\n"},{"file": 50,"line": 1693,"col": 4,"docs": " The account specified for this service is different from the account specified for other services running in the same process.\n"},{"file": 50,"line": 208,"col": 4,"docs": " The system cannot start another process at this time.\n"},{"file": 50,"line": 2603,"col": 4,"docs": " Cannot destroy object created by another thread.\n"},{"file": 50,"line": 802,"col": 4,"docs": " If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception.\n"},{"file": 50,"line": 697,"col": 4,"docs": " An operation is not supported on a compressed file.\n"},{"file": 50,"line": 2125,"col": 4,"docs": " This driver has been blocked from loading.\n"},{"file": 50,"line": 2438,"col": 4,"docs": " Logon failure: the user has not been granted the requested logon type at this computer.\n"},{"file": 50,"line": 2978,"col": 4,"docs": " The remote procedure call failed and did not execute.\n"},{"file": 50,"line": 2038,"col": 4,"docs": " The account is not authorized to log in from this station.\n"},{"file": 50,"line": 2699,"col": 4,"docs": " This application must be restarted.\n"},{"file": 50,"line": 1867,"col": 4,"docs": " The device has indicated that its door is open.\n"},{"file": 50,"line": 3335,"col": 4,"docs": " Some data remains to be sent in the request buffer.\n"},{"file": 50,"line": 2642,"col": 4,"docs": " Scroll bar range cannot be greater than MAXLONG.\n"},{"file": 50,"line": 2143,"col": 4,"docs": " The current thread has already been converted from a fiber.\n"},{"file": 50,"line": 1987,"col": 4,"docs": " The operation was canceled by the user.\n"},{"file": 50,"line": 2059,"col": 4,"docs": " An attempt was made to perform an initialization operation when initialization has already been completed.\n"},{"file": 50,"line": 2095,"col": 4,"docs": " AppHelp dialog canceled thus preventing the application from starting.\n"},{"file": 50,"line": 226,"col": 4,"docs": " The previous ownership of this semaphore has ended.\n"},{"file": 50,"line": 946,"col": 4,"docs": " The specified buffer contains ill-formed data.\n"},{"file": 50,"line": 3524,"col": 4,"docs": " The requested operation is successful. Changes will not be effective until the system is rebooted.\n"},{"file": 50,"line": 2399,"col": 4,"docs": " A logon request contained an invalid logon type value.\n"},{"file": 50,"line": 712,"col": 4,"docs": " The restart operation failed.\n"},{"file": 50,"line": 3191,"col": 4,"docs": " The printer name is invalid.\n"},{"file": 50,"line": 514,"col": 4,"docs": " The file must be checked out before saving changes.\n"},{"file": 50,"line": 934,"col": 4,"docs": " The attempt to find the object found an object matching by ID on the volume but it is out of the scope of the handle used for the operation.\n"},{"file": 50,"line": 550,"col": 4,"docs": " The session was canceled.\n"},{"file": 50,"line": 3098,"col": 4,"docs": " A floating-point operation at the RPC server caused a division by zero.\n"},{"file": 50,"line": 3359,"col": 4,"docs": " The name of the file cannot be resolved by the system.\n"},{"file": 50,"line": 3515,"col": 4,"docs": " The specified print monitor does not have the required functions.\n"},{"file": 50,"line": 1792,"col": 4,"docs": " While accessing the hard disk, a disk operation failed even after retries.\n"},{"file": 50,"line": 3413,"col": 4,"docs": " The pixel format is invalid.\n"},{"file": 50,"line": 106,"col": 4,"docs": " Too many files opened for sharing.\n"},{"file": 50,"line": 2873,"col": 4,"docs": " The update is not applied to this product.\n"},{"file": 50,"line": 2762,"col": 4,"docs": " The configuration data for this product is corrupt. Contact your support personnel.\n"},{"file": 50,"line": 3437,"col": 4,"docs": " The specified tag was not found.\n"},{"file": 50,"line": 3536,"col": 4,"docs": " The printer driver is known to harm the system.\n"},{"file": 50,"line": 1945,"col": 4,"docs": " The format of the specified group name is invalid.\n"},{"file": 50,"line": 193,"col": 4,"docs": " Storage to process this request is not available.\n"},{"file": 50,"line": 736,"col": 4,"docs": " Arithmetic result exceeded 32 bits.\n"},{"file": 50,"line": 2852,"col": 4,"docs": " Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator.\n"},{"file": 50,"line": 964,"col": 4,"docs": " There is an IP address conflict with another system on the network.\n"},{"file": 50,"line": 3269,"col": 4,"docs": " Invalid operation on the encoding/decoding handle.\n"},{"file": 50,"line": 2044,"col": 4,"docs": " The service is already registered.\n"},{"file": 50,"line": 1228,"col": 4,"docs": " {Partial Expedited Data Received} The network transport returned partial data to its client and this data was marked as expedited by the remote system. The remaining data will be sent later.\n"},{"file": 50,"line": 1885,"col": 4,"docs": " The tracking (workstation) service is not running.\n"},{"file": 50,"line": 3119,"col": 4,"docs": " The context handle changed during a remote procedure call.\n"},{"file": 50,"line": 2480,"col": 4,"docs": " There is no user session key for the specified logon session.\n"},{"file": 50,"line": 112,"col": 4,"docs": " The disk is full.\n"},{"file": 50,"line": 1180,"col": 4,"docs": " Debugger got control C.\n"},{"file": 50,"line": 2273,"col": 4,"docs": " Unable to update the password. The value provided for the new password contains values that are not allowed in passwords.\n"},{"file": 50,"line": 1246,"col": 4,"docs": " {Page Unlocked} The page protection of a locked page was changed to 'No Access' and the page was unlocked from memory and from the process.\n"},{"file": 50,"line": 1729,"col": 4,"docs": " When accessing a new tape of a multivolume partition, the current block size is incorrect.\n"},{"file": 50,"line": 3161,"col": 4,"docs": " A remote procedure call is already in progress for this thread.\n"},{"file": 50,"line": 1480,"col": 4,"docs": " The volume repair was not successful.\n"},{"file": 50,"line": 1,"col": 4,"docs": " The operation completed successfully.\n"},{"file": 50,"line": 1861,"col": 4,"docs": " The indicated device requires reinitialization due to hardware errors.\n"},{"file": 50,"line": 1327,"col": 4,"docs": " An open/create operation completed while an oplock break is underway.\n"},{"file": 50,"line": 2327,"col": 4,"docs": " The value provided was an invalid value for an identifier authority.\n"},{"file": 50,"line": 2675,"col": 4,"docs": " This operation requires an interactive window station.\n"},{"file": 50,"line": 892,"col": 4,"docs": " An attempt was made to acquire a mutant such that its maximum count would have been exceeded.\n"},{"file": 50,"line": 1840,"col": 4,"docs": " One of the library files needed to run this application cannot be found.\n"},{"file": 50,"line": 448,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 385,"col": 4,"docs": " One or more arguments are not correct.\n"},{"file": 50,"line": 1264,"col": 4,"docs": " A yield execution was performed and no thread was available to run.\n"},{"file": 50,"line": 2894,"col": 4,"docs": " The app that you are trying to run is not supported on this version of Windows.\n"},{"file": 50,"line": 3062,"col": 4,"docs": " There are no more members.\n"},{"file": 50,"line": 277,"col": 4,"docs": " The system call level is not correct.\n"},{"file": 50,"line": 1000,"col": 4,"docs": " {Illegal System DLL Relocation} The system DLL %hs was relocated in memory. The application will not run properly. The relocation occurred because the DLL %hs occupied an address range reserved for Windows system DLLs. The vendor supplying the DLL should be contacted for a new DLL.\n"},{"file": 50,"line": 3350,"col": 4,"docs": " No more data is available from the RPC pipe.\n"},{"file": 50,"line": 676,"col": 4,"docs": " The command specified an invalid field in its parameter list.\n"},{"file": 50,"line": 1588,"col": 4,"docs": " An I/O operation initiated by the registry failed unrecoverably. The registry could not read in, or write out, or flush, one of the files that contain the system's image of the registry.\n"},{"file": 50,"line": 2372,"col": 4,"docs": " Unable to complete the requested operation because of either a catastrophic media failure or a data structure corruption on the disk.\n"},{"file": 50,"line": 2270,"col": 4,"docs": " Unable to update the password. The value provided as the current password is incorrect.\n"},{"file": 50,"line": 1249,"col": 4,"docs": " %hs\n"},{"file": 50,"line": 1309,"col": 4,"docs": " ERROR_ABANDONED_WAIT_63\n"},{"file": 50,"line": 2996,"col": 4,"docs": " The array bounds are invalid.\n"},{"file": 50,"line": 3071,"col": 4,"docs": " The entry already exists.\n"},{"file": 50,"line": 1657,"col": 4,"docs": " The process terminated unexpectedly.\n"},{"file": 50,"line": 2366,"col": 4,"docs": " The specified domain already exists.\n"},{"file": 50,"line": 3338,"col": 4,"docs": " Invalid asynchronous remote procedure call handle.\n"},{"file": 50,"line": 2555,"col": 4,"docs": " Hot key is not registered.\n"},{"file": 50,"line": 553,"col": 4,"docs": " The specified extended attribute name was invalid.\n"},{"file": 50,"line": 1942,"col": 4,"docs": " An extended error has occurred.\n"},{"file": 50,"line": 2005,"col": 4,"docs": " An operation was attempted on a nonexistent network connection.\n"},{"file": 50,"line": 2101,"col": 4,"docs": " A program attempt to use an invalid register value. Normally caused by an uninitialized register. This error is Itanium specific.\n"},{"file": 50,"line": 355,"col": 4,"docs": " System trace information was not specified in your CONFIG.SYS file, or tracing is disallowed.\n"},{"file": 50,"line": 2378,"col": 4,"docs": " Generic access types were contained in an access mask which should already be mapped to nongeneric types.\n"},{"file": 50,"line": 730,"col": 4,"docs": " Attempt to access invalid address.\n"},{"file": 50,"line": 1468,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error was returned by the server on which the file exists. Please try to save this file elsewhere.\n"},{"file": 50,"line": 1750,"col": 4,"docs": " No mapping for the Unicode character exists in the target multi-byte code page.\n"},{"file": 50,"line": 973,"col": 4,"docs": " A callback return system service cannot be executed when no callback is active.\n"},{"file": 50,"line": 2354,"col": 4,"docs": " The security account manager (SAM) or local security authority (LSA) server was in the wrong state to perform the security operation.\n"},{"file": 50,"line": 1423,"col": 4,"docs": " One or more errors occurred while processing the request.\n"},{"file": 50,"line": 2474,"col": 4,"docs": " The file or directory is corrupted and unreadable.\n"},{"file": 50,"line": 3203,"col": 4,"docs": " The environment specified is invalid.\n"},{"file": 50,"line": 1192,"col": 4,"docs": " Debugger command communication exception.\n"},{"file": 50,"line": 3116,"col": 4,"docs": " A null context handle was passed from the client to the host during a remote procedure call.\n"},{"file": 50,"line": 2288,"col": 4,"docs": " This user isn't allowed to sign in to this computer.\n"},{"file": 50,"line": 391,"col": 4,"docs": " A signal is already pending.\n"},{"file": 50,"line": 538,"col": 4,"docs": " All pipe instances are busy.\n"},{"file": 50,"line": 253,"col": 4,"docs": " The target internal file identifier is incorrect.\n"},{"file": 50,"line": 1363,"col": 4,"docs": " Specified buffer contains all zeros.\n"},{"file": 50,"line": 154,"col": 4,"docs": " Your file waiting to be printed was deleted.\n"},{"file": 50,"line": 3392,"col": 4,"docs": " The current user's delegated trust creation quota has been exceeded.\n"},{"file": 50,"line": 2795,"col": 4,"docs": " There was an error starting the Windows Installer service user interface. Contact your support personnel.\n"},{"file": 50,"line": 922,"col": 4,"docs": " The parameter(s) passed to the server in the client/server shared memory window were invalid. Too much data may have been put in the shared memory window.\n"},{"file": 50,"line": 841,"col": 4,"docs": " The NtCreateFile API failed. This error should never be returned to an application, it is a place holder for the Windows Lan Manager Redirector to use in its internal error mapping routines.\n"},{"file": 50,"line": 2906,"col": 4,"docs": " The RPC protocol sequence is not supported.\n"},{"file": 50,"line": 1174,"col": 4,"docs": " Debugger terminated thread.\n"},{"file": 50,"line": 370,"col": 4,"docs": " Cannot create another thread.\n"},{"file": 50,"line": 1930,"col": 4,"docs": " The specified network provider name is invalid.\n"},{"file": 50,"line": 778,"col": 4,"docs": " An attempt was made to attach to a device that was already attached to another device.\n"},{"file": 50,"line": 847,"col": 4,"docs": " {Application Exit by CTRL+C} The application terminated as a result of a CTRL+C.\n"},{"file": 50,"line": 1741,"col": 4,"docs": " The media in the drive may have changed.\n"},{"file": 50,"line": 2633,"col": 4,"docs": " Cannot process a message from a window that is not a multiple document interface (MDI) window.\n"},{"file": 50,"line": 3197,"col": 4,"docs": " The printer command is invalid.\n"},{"file": 50,"line": 748,"col": 4,"docs": " An error occurred in the ABIOS subsystem.\n"},{"file": 50,"line": 2876,"col": 4,"docs": " No valid sequence could be found for the set of updates.\n"},{"file": 50,"line": 625,"col": 4,"docs": " An invalid exception handler routine has been detected.\n"},{"file": 50,"line": 1510,"col": 4,"docs": " The handle with which this oplock was associated has been closed. The oplock is now broken.\n"},{"file": 50,"line": 2729,"col": 4,"docs": " The specified task index is invalid.\n"},{"file": 50,"line": 2882,"col": 4,"docs": " The XML update data is invalid.\n"},{"file": 50,"line": 3329,"col": 4,"docs": " The object specified was not found.\n"},{"file": 50,"line": 2336,"col": 4,"docs": " Either a required impersonation level was not provided, or the provided impersonation level is invalid.\n"},{"file": 50,"line": 1801,"col": 4,"docs": " Not enough server storage is available to process this command.\n"},{"file": 50,"line": 1873,"col": 4,"docs": " Element not found.\n"},{"file": 50,"line": 34,"col": 4,"docs": " An attempt was made to load a program with an incorrect format.\n"},{"file": 50,"line": 3455,"col": 4,"docs": " Image Color Management is not enabled.\n"},{"file": 50,"line": 2011,"col": 4,"docs": " The network location cannot be reached. For information about network troubleshooting, see Windows Help.\n"},{"file": 50,"line": 70,"col": 4,"docs": " Data error (cyclic redundancy check).\n"},{"file": 50,"line": 1639,"col": 4,"docs": " The service cannot accept control messages at this time.\n"},{"file": 50,"line": 3245,"col": 4,"docs": " The binding handle does not contain all required information.\n"},{"file": 50,"line": 2086,"col": 4,"docs": " The remote system is not available. For information about network troubleshooting, see Windows Help.\n"},{"file": 50,"line": 688,"col": 4,"docs": " Scrub is disabled on the specified file.\n"},{"file": 50,"line": 805,"col": 4,"docs": " If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception.\n"},{"file": 50,"line": 103,"col": 4,"docs": " The wrong diskette is in the drive. Insert %2 (Volume Serial Number: %3) into drive %1.\n"},{"file": 50,"line": 412,"col": 4,"docs": " The system detected a segment number that was not correct.\n"},{"file": 50,"line": 37,"col": 4,"docs": " The access code is invalid.\n"},{"file": 50,"line": 451,"col": 4,"docs": " The operating system cannot run this application program.\n"},{"file": 50,"line": 2411,"col": 4,"docs": " Cannot perform this operation on built-in accounts.\n"},{"file": 50,"line": 2648,"col": 4,"docs": " Insufficient system resources exist to complete the requested service.\n"},{"file": 50,"line": 262,"col": 4,"docs": " The system does not support the command requested.\n"},{"file": 50,"line": 3146,"col": 4,"docs": " The workstation does not have a trust secret.\n"},{"file": 50,"line": 2417,"col": 4,"docs": " Cannot perform this operation on this built-in special user.\n"},{"file": 50,"line": 2134,"col": 4,"docs": " Windows cannot open this program because the license enforcement system has been tampered with or become corrupted.\n"},{"file": 50,"line": 3224,"col": 4,"docs": " The specified image file did not contain a resource section.\n"},{"file": 50,"line": 3425,"col": 4,"docs": " The requested transformation operation is not supported.\n"},{"file": 50,"line": 3467,"col": 4,"docs": " The specified named color index is not present in the profile.\n"},{"file": 50,"line": 3347,"col": 4,"docs": " The RPC call completed before all pipes were processed.\n"},{"file": 50,"line": 2035,"col": 4,"docs": " Attempting to log in during an unauthorized time of day for this account.\n"},{"file": 50,"line": 1066,"col": 4,"docs": " The driver was not loaded because the system is booting into safe mode.\n"},{"file": 50,"line": 2597,"col": 4,"docs": " LB_SETCOUNT sent to non-lazy list box.\n"},{"file": 50,"line": 970,"col": 4,"docs": " {Low On Registry Space} The system has reached the maximum size allowed for the system part of the registry. Additional storage requests will be ignored.\n"},{"file": 50,"line": 1891,"col": 4,"docs": " Unable to remove the file to be replaced.\n"},{"file": 50,"line": 2375,"col": 4,"docs": " An internal error occurred.\n"},{"file": 50,"line": 2405,"col": 4,"docs": " The transaction state of a registry subtree is incompatible with the requested operation.\n"},{"file": 50,"line": 3122,"col": 4,"docs": " The binding handles passed to a remote procedure call do not match.\n"},{"file": 50,"line": 211,"col": 4,"docs": " Cannot create another system semaphore.\n"},{"file": 50,"line": 1027,"col": 4,"docs": " The requested interface is not supported.\n"},{"file": 50,"line": 2528,"col": 4,"docs": " Class already exists.\n"},{"file": 50,"line": 3194,"col": 4,"docs": " The printer already exists.\n"},{"file": 50,"line": 940,"col": 4,"docs": " The user/kernel marshalling buffer has overflowed.\n"},{"file": 50,"line": 1828,"col": 4,"docs": " The specified program was written for an earlier version of Windows.\n"},{"file": 50,"line": 1624,"col": 4,"docs": " An instance of the service is already running.\n"},{"file": 50,"line": 2351,"col": 4,"docs": " Configuration information could not be read from the domain controller, either because the machine is unavailable, or access has been denied.\n"},{"file": 50,"line": 415,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 757,"col": 4,"docs": " An attempt was made to cancel or set a timer that has an associated APC and the subject thread is not the thread that originally set the timer with an associated APC routine.\n"},{"file": 50,"line": 1636,"col": 4,"docs": " The specified service does not exist as an installed service.\n"},{"file": 50,"line": 3368,"col": 4,"docs": " Interface could not be exported to the specified entry.\n"},{"file": 50,"line": 298,"col": 4,"docs": " An attempt was made to move the file pointer before the beginning of the file.\n"},{"file": 50,"line": 151,"col": 4,"docs": " Space to store the file waiting to be printed is not available on the server.\n"},{"file": 50,"line": 724,"col": 4,"docs": " The process is already in background processing mode.\n"},{"file": 50,"line": 3497,"col": 4,"docs": " The specified printer driver is currently in use.\n"},{"file": 50,"line": 2861,"col": 4,"docs": " The update package is not permitted by software restriction policy.\n"},{"file": 50,"line": 2786,"col": 4,"docs": " Another installation is already in progress. Complete that installation before proceeding with this install.\n"},{"file": 50,"line": 931,"col": 4,"docs": " Internal OFS status codes indicating how an allocation operation is handled. Either it is retried after the containing onode is moved or the extent stream is converted to a large stream.\n"},{"file": 50,"line": 2855,"col": 4,"docs": " The requested operation completed successfully. The system will be restarted so the changes can take effect.\n"},{"file": 50,"line": 223,"col": 4,"docs": " Cannot request exclusive semaphores at interrupt time.\n"},{"file": 50,"line": 2080,"col": 4,"docs": " This operation is not supported on a computer running Windows Server 2003 for Small Business Server.\n"},{"file": 50,"line": 1735,"col": 4,"docs": " Unable to lock the media eject mechanism.\n"},{"file": 50,"line": 361,"col": 4,"docs": " DosMuxSemWait did not execute; too many semaphores are already set.\n"},{"file": 50,"line": 1186,"col": 4,"docs": " Debugger received RIP exception.\n"},{"file": 50,"line": 2128,"col": 4,"docs": " A dynamic link library (DLL) referenced a module that was neither a DLL nor the process's executable image.\n"},{"file": 50,"line": 3503,"col": 4,"docs": " A StartDocPrinter call was not issued.\n"},{"file": 50,"line": 1222,"col": 4,"docs": " {Partial Data Received} The network transport returned partial data to its client. The remaining data will be sent later.\n"},{"file": 50,"line": 2420,"col": 4,"docs": " The user cannot be removed from a group because the group is currently the user's primary group.\n"},{"file": 50,"line": 2264,"col": 4,"docs": " The specified user account is not a member of the specified group account.\n"},{"file": 50,"line": 958,"col": 4,"docs": " {Invalid DLL Entrypoint} The dynamic link library %hs is not written correctly. The stack pointer has been left in an inconsistent state. The entrypoint should be declared as WINAPI or STDCALL. Select YES to fail the DLL load. Select NO to continue execution. Selecting NO may cause the application to operate incorrectly.\n"},{"file": 50,"line": 3476,"col": 4,"docs": " The network connection was made successfully using default credentials.\n"},{"file": 50,"line": 1654,"col": 4,"docs": " The service has returned a service-specific error code.\n"},{"file": 50,"line": 1972,"col": 4,"docs": " The format of the specified message destination is invalid.\n"},{"file": 50,"line": 2432,"col": 4,"docs": " The specified account name is already a member of the group.\n"},{"file": 50,"line": 1783,"col": 4,"docs": " The floppy disk controller reported an error that is not recognized by the floppy disk driver.\n"},{"file": 50,"line": 3326,"col": 4,"docs": " The object exporter specified was not found.\n"},{"file": 50,"line": 2047,"col": 4,"docs": " The specified service does not exist.\n"},{"file": 50,"line": 163,"col": 4,"docs": " The network resource type is not correct.\n"},{"file": 50,"line": 2149,"col": 4,"docs": " Data present in one of the parameters is more than the function can operate on.\n"},{"file": 50,"line": 1081,"col": 4,"docs": " A Machine Check Error has occurred. Please check the system eventlog for additional information.\n"},{"file": 50,"line": 1864,"col": 4,"docs": " The device has indicated that cleaning is required before further operations are attempted.\n"},{"file": 50,"line": 994,"col": 4,"docs": " The specified quota list is internally inconsistent with its descriptor.\n"},{"file": 50,"line": 1525,"col": 4,"docs": " Access to the extended attribute was denied.\n"},{"file": 50,"line": 2768,"col": 4,"docs": " The installation source for this product is not available. Verify that the source exists and that you can access it.\n"},{"file": 50,"line": 1033,"col": 4,"docs": " The system file %1 has become corrupt and has been replaced.\n"},{"file": 50,"line": 2198,"col": 4,"docs": " Indicates a particular Security ID may not be assigned as the label of an object.\n"},{"file": 50,"line": 3509,"col": 4,"docs": " The specified print processor has already been installed.\n"},{"file": 50,"line": 475,"col": 4,"docs": " No process in the command subtree has a signal handler.\n"},{"file": 50,"line": 961,"col": 4,"docs": " {Invalid Service Callback Entrypoint} The %hs service is not written correctly. The stack pointer has been left in an inconsistent state. The callback entrypoint should be declared as WINAPI or STDCALL. Selecting OK will cause the service to continue operation. However, the service process may operate incorrectly.\n"},{"file": 50,"line": 1705,"col": 4,"docs": " The executable program that this service is configured to run in does not implement the service.\n"},{"file": 50,"line": 1939,"col": 4,"docs": " Cannot enumerate a noncontainer.\n"},{"file": 50,"line": 2819,"col": 4,"docs": " Data supplied is of wrong type.\n"},{"file": 50,"line": 1087,"col": 4,"docs": " System hive size has exceeded its limit.\n"},{"file": 50,"line": 943,"col": 4,"docs": " The supplied variant structure contains invalid data.\n"},{"file": 50,"line": 2615,"col": 4,"docs": " Invalid system-wide (SPI_*) parameter.\n"},{"file": 50,"line": 1645,"col": 4,"docs": " The service process could not connect to the service controller.\n"},{"file": 50,"line": 2507,"col": 4,"docs": " Invalid accelerator table handle.\n"},{"file": 50,"line": 982,"col": 4,"docs": " You have attempted to change your password to one that you have used in the past. The policy of your user account does not allow this. Please select a password that you have not previously used.\n"},{"file": 50,"line": 988,"col": 4,"docs": " The specified hardware profile configuration is invalid.\n"},{"file": 50,"line": 2192,"col": 4,"docs": " A privilege that the service requires to function properly does not exist in the service account configuration. You may use the Services Microsoft Management Console (MMC) snap-in (services.msc) and the Local Security Settings MMC snap-in (secpol.msc) to view the service configuration and the account configuration.\n"},{"file": 50,"line": 562,"col": 4,"docs": " No more data is available.\n"},{"file": 50,"line": 2585,"col": 4,"docs": " This hook procedure can only be set globally.\n"},{"file": 50,"line": 2207,"col": 4,"docs": " No system quota limits are specifically set for this account.\n"},{"file": 50,"line": 3020,"col": 4,"docs": " The string is too long.\n"},{"file": 50,"line": 877,"col": 4,"docs": " An illegal character was encountered. For a multi-byte character set this includes a lead byte without a succeeding trail byte. For the Unicode character set this includes the characters 0xFFFF and 0xFFFE.\n"},{"file": 50,"line": 3275,"col": 4,"docs": " Incompatible version of the RPC stub.\n"},{"file": 50,"line": 3167,"col": 4,"docs": " The user's account has expired.\n"},{"file": 50,"line": 3506,"col": 4,"docs": " An AddJob call was not issued.\n"},{"file": 50,"line": 1237,"col": 4,"docs": " Checking file system on %wZ.\n"},{"file": 50,"line": 2140,"col": 4,"docs": " The current thread has already been converted to a fiber.\n"},{"file": 50,"line": 2146,"col": 4,"docs": " The system detected an overrun of a stack-based buffer in this application. This overrun could potentially allow a malicious user to gain control of this application.\n"},{"file": 50,"line": 1843,"col": 4,"docs": " The current process has used all of its system allowance of handles for Window Manager objects.\n"},{"file": 50,"line": 1129,"col": 4,"docs": " {Handles Closed} Handles to objects have been automatically closed as a result of the requested operation.\n"},{"file": 50,"line": 1312,"col": 4,"docs": " ERROR_USER_APC\n"},{"file": 50,"line": 3428,"col": 4,"docs": " The requested clipping operation is not supported.\n"},{"file": 50,"line": 424,"col": 4,"docs": " The specified system semaphore name was not found.\n"},{"file": 50,"line": 2666,"col": 4,"docs": " A menu item was not found.\n"},{"file": 50,"line": 3440,"col": 4,"docs": " A required tag is not present.\n"},{"file": 50,"line": 3209,"col": 4,"docs": " The account used is an interdomain trust account. Use your global user account or local user account to access this server.\n"},{"file": 50,"line": 1621,"col": 4,"docs": " The service database is locked.\n"},{"file": 50,"line": 3308,"col": 4,"docs": " The specified printer handle is already being waited on.\n"},{"file": 50,"line": 418,"col": 4,"docs": " Cannot create a file when that file already exists.\n"},{"file": 50,"line": 856,"col": 4,"docs": " {Application Error} The application was unable to start correctly (0x%lx). Click OK to close the application.\n"},{"file": 50,"line": 3149,"col": 4,"docs": " The security database on the server does not have a computer account for this workstation trust relationship.\n"},{"file": 50,"line": 3320,"col": 4,"docs": " Could not find the domain controller for this domain.\n"},{"file": 50,"line": 2471,"col": 4,"docs": " Indicates an ACL contains no inheritable components.\n"},{"file": 50,"line": 2077,"col": 4,"docs": " The specified user does not have a valid profile.\n"},{"file": 50,"line": 3215,"col": 4,"docs": " The account used is a server trust account. Use your global user account or local user account to access this server.\n"},{"file": 50,"line": 1267,"col": 4,"docs": " The resumable flag to a timer API was ignored.\n"},{"file": 50,"line": 1981,"col": 4,"docs": " The workgroup or domain name is already in use by another computer on the network.\n"},{"file": 50,"line": 1336,"col": 4,"docs": " This indicates that a notify change request has been completed due to closing the handle which made the notify change request.\n"},{"file": 50,"line": 1288,"col": 4,"docs": " A device driver is leaking locked I/O pages causing system degradation. The system has automatically enabled tracking code in order to try and catch the culprit.\n"},{"file": 50,"line": 1612,"col": 4,"docs": " The requested control is not valid for this service.\n"},{"file": 50,"line": 94,"col": 4,"docs": " A device attached to the system is not functioning.\n"},{"file": 50,"line": 1732,"col": 4,"docs": " Tape partition information could not be found when loading a tape.\n"},{"file": 50,"line": 2234,"col": 4,"docs": " There are currently no logon servers available to service the logon request.\n"},{"file": 50,"line": 2201,"col": 4,"docs": " Not all privileges or groups referenced are assigned to the caller.\n"},{"file": 50,"line": 2498,"col": 4,"docs": " Invalid window handle.\n"},{"file": 50,"line": 2029,"col": 4,"docs": " The operation could not be completed. A retry should be performed.\n"},{"file": 50,"line": 2714,"col": 4,"docs": " The event log file is corrupted.\n"},{"file": 50,"line": 187,"col": 4,"docs": " The directory or file cannot be created.\n"},{"file": 50,"line": 64,"col": 4,"docs": " The device is not ready.\n"},{"file": 50,"line": 2630,"col": 4,"docs": " Invalid thread identifier.\n"},{"file": 50,"line": 2570,"col": 4,"docs": " Height must be less than 256.\n"},{"file": 50,"line": 1285,"col": 4,"docs": " Windows has detected that the system firmware (BIOS) was updated [previous firmware date = %2, current firmware date %3].\n"},{"file": 50,"line": 3140,"col": 4,"docs": " The supplied user buffer is not valid for the requested operation.\n"},{"file": 50,"line": 1702,"col": 4,"docs": " No recovery program has been configured for this service.\n"},{"file": 50,"line": 2657,"col": 4,"docs": " Insufficient quota to complete the requested service.\n"},{"file": 50,"line": 2732,"col": 4,"docs": " The specified thread is already joining a task.\n"},{"file": 50,"line": 1318,"col": 4,"docs": " ERROR_ALERTED\n"},{"file": 50,"line": 2606,"col": 4,"docs": " Child windows cannot have menus.\n"},{"file": 50,"line": 865,"col": 4,"docs": " {No Paging File Specified} No paging file was specified in the system configuration.\n"},{"file": 50,"line": 1960,"col": 4,"docs": " The format of the specified network name is invalid.\n"},{"file": 50,"line": 310,"col": 4,"docs": " An attempt was made to use a JOIN or SUBST command on a drive that has already been substituted.\n"},{"file": 50,"line": 1993,"col": 4,"docs": " The remote computer refused the network connection.\n"},{"file": 50,"line": 1786,"col": 4,"docs": " The floppy disk controller returned inconsistent results in its registers.\n"},{"file": 50,"line": 2089,"col": 4,"docs": " The security identifier provided is not from an account domain.\n"},{"file": 50,"line": 469,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 1456,"col": 4,"docs": " Access to %1 is monitored by policy rule %2.\n"},{"file": 50,"line": 838,"col": 4,"docs": " The SAM database on a Windows Server is significantly out of synchronization with the copy on the Domain Controller. A complete synchronization is required.\n"},{"file": 50,"line": 1513,"col": 4,"docs": " The specified access control entry (ACE) does not contain a condition.\n"},{"file": 50,"line": 2525,"col": 4,"docs": " Hot key is already registered.\n"},{"file": 50,"line": 88,"col": 4,"docs": " The system cannot write to the specified device.\n"},{"file": 50,"line": 700,"col": 4,"docs": " An operation is not supported on a directory.\n"},{"file": 50,"line": 2369,"col": 4,"docs": " An attempt was made to exceed the limit on the number of domains per server.\n"},{"file": 50,"line": 1504,"col": 4,"docs": " An oplock of the requested level cannot be granted. An oplock of a lower level may be available.\n"},{"file": 50,"line": 1126,"col": 4,"docs": " {Kernel Debugger Awakened} the system debugger was awakened by an interrupt.\n"},{"file": 50,"line": 403,"col": 4,"docs": " Device's command support detection is in progress.\n"},{"file": 50,"line": 580,"col": 4,"docs": " The specified extended attribute handle is invalid.\n"},{"file": 50,"line": 1798,"col": 4,"docs": " Physical end of tape encountered.\n"},{"file": 50,"line": 2519,"col": 4,"docs": " Cannot find window class.\n"},{"file": 50,"line": 3242,"col": 4,"docs": " The remote procedure call was cancelled.\n"},{"file": 50,"line": 3155,"col": 4,"docs": " The trust relationship between this workstation and the primary domain failed.\n"},{"file": 50,"line": 2387,"col": 4,"docs": " Cannot start a new logon session with an ID that is already in use.\n"},{"file": 50,"line": 1063,"col": 4,"docs": " The specified range could not be found in the range list.\n"},{"file": 50,"line": 1822,"col": 4,"docs": " The specified program is not a Windows or MS-DOS program.\n"},{"file": 50,"line": 1894,"col": 4,"docs": " Unable to move the replacement file to the file to be replaced. The file to be replaced has retained its original name.\n"},{"file": 50,"line": 496,"col": 4,"docs": " Too many dynamic-link modules are attached to this program or dynamic-link module.\n"},{"file": 50,"line": 3434,"col": 4,"docs": " The specified color profile is invalid.\n"},{"file": 50,"line": 1261,"col": 4,"docs": " {Machine Type Mismatch} The image file %hs is valid, but is for a machine type other than the current machine.\n"},{"file": 50,"line": 3410,"col": 4,"docs": " Logon Failure: EAS policy requires that the user change their password before this operation can be performed.\n"},{"file": 50,"line": 2915,"col": 4,"docs": " The endpoint format is invalid.\n"},{"file": 50,"line": 3152,"col": 4,"docs": " The trust relationship between the primary domain and the trusted domain failed.\n"},{"file": 50,"line": 2483,"col": 4,"docs": " The service being accessed is licensed for a particular number of connections. No more connections can be made to the service at this time because there are already as many connections as the service can accept.\n"},{"file": 50,"line": 3143,"col": 4,"docs": " The disk media is not recognized. It may not be formatted.\n"},{"file": 50,"line": 109,"col": 4,"docs": " Reached the end of the file.\n"},{"file": 50,"line": 2330,"col": 4,"docs": " No more memory is available for security information updates.\n"},{"file": 50,"line": 874,"col": 4,"docs": " A Windows Server has an incorrect configuration.\n"},{"file": 50,"line": 2137,"col": 4,"docs": " A transaction recover failed.\n"},{"file": 50,"line": 2462,"col": 4,"docs": " A new member could not be added to a local group because the member has the wrong account type.\n"},{"file": 50,"line": 1204,"col": 4,"docs": " This informational level status indicates that a specified registry sub-tree transaction state did not yet exist and had to be created.\n"},{"file": 50,"line": 2774,"col": 4,"docs": " Product is uninstalled.\n"},{"file": 50,"line": 2612,"col": 4,"docs": " Invalid message box style.\n"},{"file": 50,"line": 1807,"col": 4,"docs": " The base address or the file offset specified does not have the proper alignment.\n"},{"file": 50,"line": 3290,"col": 4,"docs": " The group member was not found.\n"},{"file": 50,"line": 1858,"col": 4,"docs": " The indicated element is part of a magazine that is not present.\n"},{"file": 50,"line": 2723,"col": 4,"docs": " The event log file has changed between read operations.\n"},{"file": 50,"line": 1630,"col": 4,"docs": " The service cannot be started, either because it is disabled or because it has no enabled devices associated with it.\n"},{"file": 50,"line": 1075,"col": 4,"docs": " The create operation failed because the name contained at least one mount point which resolves to a volume to which the specified device object is not attached.\n"},{"file": 50,"line": 3053,"col": 4,"docs": " No interfaces have been exported.\n"},{"file": 50,"line": 3278,"col": 4,"docs": " The RPC pipe object is invalid or corrupted.\n"},{"file": 50,"line": 202,"col": 4,"docs": " The parameter is incorrect.\n"},{"file": 50,"line": 787,"col": 4,"docs": " Profiling not stopped.\n"},{"file": 50,"line": 997,"col": 4,"docs": " {Windows Evaluation Notification} The evaluation period for this installation of Windows has expired. This system will shutdown in 1 hour. To restore access to this installation of Windows, please upgrade this installation using a licensed distribution of this product.\n"},{"file": 50,"line": 1534,"col": 4,"docs": " Overlapped I/O operation is in progress.\n"},{"file": 50,"line": 3317,"col": 4,"docs": " The user's password must be changed before signing in.\n"},{"file": 50,"line": 2167,"col": 4,"docs": " The operation occurred beyond the valid data length of the file.\n"},{"file": 50,"line": 1507,"col": 4,"docs": " The operation did not complete successfully because it would cause an oplock to be broken. The caller has requested that existing oplocks not be broken.\n"},{"file": 50,"line": 1819,"col": 4,"docs": " The specified program requires a newer version of Windows.\n"},{"file": 50,"line": 2291,"col": 4,"docs": " The password for this account has expired.\n"},{"file": 50,"line": 2213,"col": 4,"docs": " The password is too complex to be converted to a LAN Manager password. The LAN Manager password returned is a NULL string.\n"},{"file": 50,"line": 3056,"col": 4,"docs": " The entry name is incomplete.\n"},{"file": 50,"line": 2155,"col": 4,"docs": " An attempt to delay-load a .dll or get a function address in a delay-loaded .dll failed.\n"},{"file": 50,"line": 1291,"col": 4,"docs": " The system has awoken.\n"},{"file": 50,"line": 1984,"col": 4,"docs": " The network is not present or not started.\n"},{"file": 50,"line": 2684,"col": 4,"docs": " Incorrect size argument.\n"},{"file": 50,"line": 745,"col": 4,"docs": " Application verifier has found an error in the current process.\n"},{"file": 50,"line": 481,"col": 4,"docs": " The ring 2 stack is in use.\n"},{"file": 50,"line": 646,"col": 4,"docs": " The system cannot find message text for message number 0x%1 in the message file for %2.\n"},{"file": 50,"line": 1093,"col": 4,"docs": " {Volume Shadow Copy Service} Please wait while the Volume Shadow Copy Service prepares volume %hs for hibernation.\n"},{"file": 50,"line": 790,"col": 4,"docs": " The passed ACL did not contain the minimum required information.\n"},{"file": 50,"line": 2771,"col": 4,"docs": " This installation package cannot be installed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.\n"},{"file": 50,"line": 3179,"col": 4,"docs": " The printer driver is unknown.\n"},{"file": 50,"line": 3341,"col": 4,"docs": " Invalid asynchronous RPC call handle for this operation.\n"},{"file": 50,"line": 1114,"col": 4,"docs": " A device is missing in the system BIOS MPS table. This device will not be used. Please contact your system vendor for system BIOS update.\n"},{"file": 50,"line": 1459,"col": 4,"docs": " Access to %1 has been restricted by your Administrator by policy rule %2.\n"},{"file": 50,"line": 3035,"col": 4,"docs": " The authentication level is unknown.\n"},{"file": 50,"line": 2687,"col": 4,"docs": " The symbolic link cannot be followed because its type is disabled.\n"},{"file": 50,"line": 1408,"col": 4,"docs": " Compression is disabled for this volume.\n"},{"file": 50,"line": 1159,"col": 4,"docs": " The application is attempting to run executable code from the module %hs. This may be insecure. An alternative, %hs, is available. Should the application use the secure module %hs?\n"},{"file": 50,"line": 1300,"col": 4,"docs": " ERROR_WAIT_3\n"},{"file": 50,"line": 1138,"col": 4,"docs": " {Media Changed} The media may have changed.\n"},{"file": 50,"line": 2897,"col": 4,"docs": " The string binding is invalid.\n"},{"file": 50,"line": 520,"col": 4,"docs": " The file size exceeds the limit allowed and cannot be saved.\n"},{"file": 50,"line": 2408,"col": 4,"docs": " An internal security database corruption has been encountered.\n"},{"file": 50,"line": 3230,"col": 4,"docs": " The specified resource name cannot be found in the image file.\n"},{"file": 50,"line": 3431,"col": 4,"docs": " The specified color management module is invalid.\n"},{"file": 50,"line": 1036,"col": 4,"docs": " {Virtual Memory Minimum Too Low} Your system is low on virtual memory. Windows is increasing the size of your virtual memory paging file. During this process, memory requests for some applications may be denied. For more information, see Help.\n"},{"file": 50,"line": 2564,"col": 4,"docs": " Invalid message for a combo box because it does not have an edit control.\n"},{"file": 50,"line": 241,"col": 4,"docs": " The system cannot open the device or file specified.\n"},{"file": 50,"line": 2618,"col": 4,"docs": " Screen already locked.\n"},{"file": 50,"line": 1015,"col": 4,"docs": " The server process is running under a SID different than that required by client.\n"},{"file": 50,"line": 1210,"col": 4,"docs": " {Invalid Current Directory} The process cannot switch to the startup current directory %hs. Select OK to set current directory to %hs, or select CANCEL to exit.\n"},{"file": 50,"line": 2071,"col": 4,"docs": " This operation is supported only when you are connected to the server.\n"},{"file": 50,"line": 3272,"col": 4,"docs": " Incompatible version of the serializing package.\n"},{"file": 50,"line": 3398,"col": 4,"docs": " The current user's delegated trust deletion quota has been exceeded.\n"},{"file": 50,"line": 115,"col": 4,"docs": " The request is not supported.\n"},{"file": 50,"line": 895,"col": 4,"docs": " A volume has been accessed for which a file system driver is required that has not yet been loaded.\n"},{"file": 50,"line": 1699,"col": 4,"docs": " This service runs in the same process as the service control manager. Therefore, the service control manager cannot take action if this service's process terminates unexpectedly.\n"},{"file": 50,"line": 259,"col": 4,"docs": " The verify-on-write switch parameter value is not correct.\n"},{"file": 50,"line": 1396,"col": 4,"docs": " An operation is blocked waiting for an oplock.\n"},{"file": 50,"line": 670,"col": 4,"docs": " Device does not support file-level TRIM.\n"},{"file": 50,"line": 2510,"col": 4,"docs": " Invalid hook handle.\n"},{"file": 50,"line": 2174,"col": 4,"docs": " The process hosting the driver for this device has been terminated.\n"},{"file": 50,"line": 652,"col": 4,"docs": " The Central Access Policy specified is not defined on the target machine.\n"},{"file": 50,"line": 2032,"col": 4,"docs": " A connection to the server could not be made because the limit on the number of concurrent connections for this account has been reached.\n"},{"file": 50,"line": 397,"col": 4,"docs": " Unable to lock a region of a file.\n"},{"file": 50,"line": 2558,"col": 4,"docs": " The window is not a valid dialog window.\n"},{"file": 50,"line": 3173,"col": 4,"docs": " The specified printer driver is already installed.\n"},{"file": 50,"line": 2315,"col": 4,"docs": " The security descriptor structure is invalid.\n"},{"file": 50,"line": 3293,"col": 4,"docs": " The endpoint mapper database entry could not be created.\n"},{"file": 50,"line": 1348,"col": 4,"docs": " Page fault was a demand zero fault.\n"},{"file": 50,"line": 2933,"col": 4,"docs": " The type universal unique identifier (UUID) has already been registered.\n"},{"file": 50,"line": 1780,"col": 4,"docs": " Mismatch between the floppy disk sector ID field and the floppy disk controller track address.\n"},{"file": 50,"line": 295,"col": 4,"docs": " Attempt to use a file handle to an open disk partition for an operation other than raw disk I/O.\n"},{"file": 50,"line": 2594,"col": 4,"docs": " Invalid message for single-selection list box.\n"},{"file": 50,"line": 1879,"col": 4,"docs": " The property set specified does not exist on the object.\n"},{"file": 50,"line": 343,"col": 4,"docs": " The path specified is being used in a substitute.\n"},{"file": 50,"line": 2104,"col": 4,"docs": " The share is currently offline or does not exist.\n"},{"file": 50,"line": 2717,"col": 4,"docs": " No event log file could be opened, so the event logging service did not start.\n"},{"file": 50,"line": 3371,"col": 4,"docs": " The specified profile entry could not be added.\n"},{"file": 50,"line": 1810,"col": 4,"docs": " An attempt to change the system power state was vetoed by another application or driver.\n"},{"file": 50,"line": 1492,"col": 4,"docs": " One of the volume corruption logs was deleted while still having corruption records in them. The volume contains detected corruptions and must be scanned.\n"},{"file": 50,"line": 2945,"col": 4,"docs": " The manager type is unknown.\n"},{"file": 50,"line": 1069,"col": 4,"docs": " The driver was not loaded because it failed its initialization call.\n"},{"file": 50,"line": 439,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 835,"col": 4,"docs": " The Netlogon service cannot start because another Netlogon service running in the domain conflicts with the specified role.\n"},{"file": 50,"line": 529,"col": 4,"docs": " This file contains a virus or potentially unwanted software and cannot be opened. Due to the nature of this virus or potentially unwanted software, the file has been removed from this location.\n"},{"file": 50,"line": 1546,"col": 4,"docs": " The window cannot act on the sent message.\n"},{"file": 50,"line": 799,"col": 4,"docs": " Indicates that a thread attempted to terminate itself by default (called NtTerminateThread with NULL) and it was the last thread in the current process.\n"},{"file": 50,"line": 472,"col": 4,"docs": " The system could not find the environment option that was entered.\n"},{"file": 50,"line": 2357,"col": 4,"docs": " The domain was in the wrong state to perform the security operation.\n"},{"file": 50,"line": 2663,"col": 4,"docs": " The paging file is too small for this operation to complete.\n"},{"file": 50,"line": 124,"col": 4,"docs": " The network path was not found.\n"},{"file": 50,"line": 238,"col": 4,"docs": " The pipe has been ended.\n"},{"file": 50,"line": 1909,"col": 4,"docs": " The journal entry has been deleted from the journal.\n"},{"file": 50,"line": 130,"col": 4,"docs": " The specified network resource or device is no longer available.\n"},{"file": 50,"line": 1918,"col": 4,"docs": " The specified device name is invalid.\n"},{"file": 50,"line": 2822,"col": 4,"docs": " Data of this type is not supported.\n"},{"file": 50,"line": 622,"col": 4,"docs": " The specified file already has a notification GUID associated with it.\n"},{"file": 50,"line": 2669,"col": 4,"docs": " Invalid keyboard layout handle.\n"},{"file": 50,"line": 2816,"col": 4,"docs": " Invalid or unknown table specified.\n"},{"file": 50,"line": 3212,"col": 4,"docs": " The account used is a computer account. Use your global user account or local user account to access this server.\n"},{"file": 50,"line": 754,"col": 4,"docs": " An error occurred in the WX86 subsystem.\n"},{"file": 50,"line": 3479,"col": 4,"docs": " The specified username is invalid.\n"},{"file": 50,"line": 3449,"col": 4,"docs": " The specified color profile was not found.\n"},{"file": 50,"line": 2222,"col": 4,"docs": " This security ID may not be assigned as the owner of this object.\n"},{"file": 50,"line": 577,"col": 4,"docs": " The extended attribute table file is full.\n"},{"file": 50,"line": 1132,"col": 4,"docs": " {Too Much Information} The specified access control list (ACL) contained more information than was expected.\n"},{"file": 50,"line": 2279,"col": 4,"docs": " The user name or password is incorrect.\n"},{"file": 50,"line": 2231,"col": 4,"docs": " The group may not be disabled.\n"},{"file": 50,"line": 2987,"col": 4,"docs": " The transfer syntax is not supported by the RPC server.\n"},{"file": 50,"line": 3182,"col": 4,"docs": " The print processor is unknown.\n"},{"file": 50,"line": 1912,"col": 4,"docs": " A system shutdown has already been scheduled.\n"},{"file": 50,"line": 3050,"col": 4,"docs": " There are no more endpoints available from the endpoint mapper.\n"},{"file": 50,"line": 2975,"col": 4,"docs": " The remote procedure call failed.\n"},{"file": 50,"line": 1177,"col": 4,"docs": " Debugger terminated process.\n"},{"file": 50,"line": 3485,"col": 4,"docs": " This network connection has files open or requests pending.\n"},{"file": 50,"line": 1372,"col": 4,"docs": " The translator has translated these resources into the global space and no further translations should be performed.\n"},{"file": 50,"line": 436,"col": 4,"docs": " Cannot run %1 in Win32 mode.\n"},{"file": 50,"line": 880,"col": 4,"docs": " The Unicode character is not defined in the Unicode character set installed on the system.\n"},{"file": 50,"line": 1438,"col": 4,"docs": " The hardware has reported an uncorrectable memory error.\n"},{"file": 50,"line": 1006,"col": 4,"docs": " The validation process needs to continue on to the next step.\n"},{"file": 50,"line": 1369,"col": 4,"docs": " The device has succeeded a query-stop and its resource requirements have changed.\n"},{"file": 50,"line": 949,"col": 4,"docs": " {Audit Failed} An attempt to generate a security audit failed.\n"},{"file": 50,"line": 937,"col": 4,"docs": " The bucket array must be grown. Retry transaction after doing so.\n"},{"file": 50,"line": 1360,"col": 4,"docs": " Crash dump exists in paging file.\n"},{"file": 50,"line": 2858,"col": 4,"docs": " The upgrade cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade.\n"},{"file": 50,"line": 139,"col": 4,"docs": " The specified server cannot perform the requested operation.\n"},{"file": 50,"line": 2561,"col": 4,"docs": " Control ID not found.\n"},{"file": 50,"line": 271,"col": 4,"docs": " The data area passed to a system call is too small.\n"},{"file": 50,"line": 829,"col": 4,"docs": " An attempt was made to operate on a thread within a specific process, but the thread specified is not in the process specified.\n"},{"file": 50,"line": 349,"col": 4,"docs": " The path specified cannot be used at this time.\n"},{"file": 50,"line": 862,"col": 4,"docs": " Windows cannot verify the digital signature for this file. A recent hardware or software change might have installed a file that is signed incorrectly or damaged, or that might be malicious software from an unknown source.\n"},{"file": 50,"line": 1417,"col": 4,"docs": " The data provider requires that previously fetched data is released before asking for more data.\n"},{"file": 50,"line": 307,"col": 4,"docs": " An attempt was made to use a JOIN or SUBST command on a drive that has already been joined.\n"},{"file": 50,"line": 2228,"col": 4,"docs": " An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client.\n"},{"file": 50,"line": 3470,"col": 4,"docs": " The specified profile is intended for a device of a different type than the specified device.\n"},{"file": 50,"line": 1651,"col": 4,"docs": " The database specified does not exist.\n"},{"file": 50,"line": 2477,"col": 4,"docs": " The disk structure is corrupted and unreadable.\n"},{"file": 50,"line": 1273,"col": 4,"docs": " The inserted CardBus device cannot be started because of a configuration error on \"%hs\".\n"},{"file": 50,"line": 13,"col": 4,"docs": " The system cannot open the file.\n"},{"file": 50,"line": 1543,"col": 4,"docs": " Recursion too deep; the stack overflowed.\n"},{"file": 50,"line": 2017,"col": 4,"docs": " The network location cannot be reached. For information about network troubleshooting, see Windows Help.\n"},{"file": 50,"line": 3263,"col": 4,"docs": " A security package specific error occurred.\n"},{"file": 50,"line": 145,"col": 4,"docs": " The remote adapter is not compatible.\n"},{"file": 50,"line": 1765,"col": 4,"docs": " No serial device was successfully initialized. The serial driver will unload.\n"},{"file": 50,"line": 3314,"col": 4,"docs": " The state of the printer is invalid.\n"},{"file": 50,"line": 2065,"col": 4,"docs": " The specified site does not exist.\n"},{"file": 50,"line": 3353,"col": 4,"docs": " No site name is available for this machine.\n"},{"file": 50,"line": 3305,"col": 4,"docs": " The specified form size is invalid.\n"},{"file": 50,"line": 334,"col": 4,"docs": " The system cannot join or substitute a drive to or for a directory on the same drive.\n"},{"file": 50,"line": 2681,"col": 4,"docs": " Invalid monitor handle.\n"},{"file": 50,"line": 2306,"col": 4,"docs": " The subauthority part of a security ID is invalid for this particular use.\n"},{"file": 50,"line": 508,"col": 4,"docs": " The image file %1 is strong signed, unable to modify.\n"},{"file": 50,"line": 2828,"col": 4,"docs": " The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder.\n"},{"file": 50,"line": 2441,"col": 4,"docs": " The maximum number of secrets that may be stored in a single system has been exceeded.\n"},{"file": 50,"line": 340,"col": 4,"docs": " The directory is not empty.\n"},{"file": 50,"line": 760,"col": 4,"docs": " Unwind exception code.\n"},{"file": 50,"line": 1711,"col": 4,"docs": " The physical end of the tape has been reached.\n"},{"file": 50,"line": 205,"col": 4,"docs": " A write fault occurred on the network.\n"},{"file": 50,"line": 1714,"col": 4,"docs": " A tape access reached a filemark.\n"},{"file": 50,"line": 1990,"col": 4,"docs": " The requested operation cannot be performed on a file with a user-mapped section open.\n"},{"file": 50,"line": 2495,"col": 4,"docs": " This operation cannot be performed on the current domain.\n"},{"file": 50,"line": 1549,"col": 4,"docs": " Cannot complete this function.\n"},{"file": 50,"line": 2164,"col": 4,"docs": " The parameter passed to a C runtime function is incorrect.\n"},{"file": 50,"line": 2177,"col": 4,"docs": " An operation attempted to exceed an implementation-defined limit.\n"},{"file": 50,"line": 1018,"col": 4,"docs": " A group marked use for deny only cannot be enabled.\n"},{"file": 50,"line": 1411,"col": 4,"docs": " The data provider cannot fetch backwards through a result set.\n"},{"file": 50,"line": 1012,"col": 4,"docs": " The range could not be added to the range list because of a conflict.\n"},{"file": 50,"line": 1141,"col": 4,"docs": " {GUID Substitution} During the translation of a global identifier (GUID) to a Windows security ID (SID), no administratively-defined GUID prefix was found. A substitute prefix was used, which will not compromise system security. However, this may provide a more restrictive access than intended.\n"},{"file": 50,"line": 2056,"col": 4,"docs": " Continue with work in progress.\n"},{"file": 50,"line": 166,"col": 4,"docs": " The network name cannot be found.\n"},{"file": 50,"line": 1708,"col": 4,"docs": " This service cannot be started in Safe Mode.\n"},{"file": 50,"line": 2951,"col": 4,"docs": " There are no bindings.\n"},{"file": 50,"line": 1045,"col": 4,"docs": " Device will not start without a reboot.\n"},{"file": 50,"line": 2582,"col": 4,"docs": " Cannot set nonlocal hook without a module handle.\n"},{"file": 50,"line": 2990,"col": 4,"docs": " The universal unique identifier (UUID) type is not supported.\n"},{"file": 50,"line": 169,"col": 4,"docs": " The name limit for the local computer network adapter card was exceeded.\n"},{"file": 50,"line": 1561,"col": 4,"docs": " The requested operation cannot be performed in full-screen mode.\n"},{"file": 50,"line": 322,"col": 4,"docs": " The system tried to substitute a drive to a directory on a substituted drive.\n"},{"file": 50,"line": 811,"col": 4,"docs": " A malformed function table was encountered during an unwind operation.\n"},{"file": 50,"line": 1615,"col": 4,"docs": " The service did not respond to the start or control request in a timely fashion.\n"},{"file": 50,"line": 2092,"col": 4,"docs": " The security identifier provided does not have a domain component.\n"},{"file": 50,"line": 2348,"col": 4,"docs": " Unable to perform a security operation on an object that has no associated security.\n"},{"file": 50,"line": 2810,"col": 4,"docs": " Function could not be executed.\n"},{"file": 50,"line": 484,"col": 4,"docs": " The global filename characters, * or ?, are entered incorrectly or too many global filename characters are specified.\n"},{"file": 50,"line": 1816,"col": 4,"docs": " An attempt was made to create more links on a file than the file system supports.\n"},{"file": 50,"line": 1429,"col": 4,"docs": " The client of a component requested an operation which is not valid given the state of the component instance.\n"},{"file": 50,"line": 1498,"col": 4,"docs": " Orphaned files exist on the volume but could not be recovered because no more new names could be created in the recovery directory. Files must be moved from the recovery directory.\n"},{"file": 50,"line": 1108,"col": 4,"docs": " An error occurred in the ACPI subsystem.\n"},{"file": 50,"line": 3026,"col": 4,"docs": " The procedure number is out of range.\n"},{"file": 50,"line": 1591,"col": 4,"docs": " The system has attempted to load or restore a file into the registry, but the specified file is not in a registry file format.\n"},{"file": 50,"line": 3380,"col": 4,"docs": " The group element could not be added.\n"},{"file": 50,"line": 2999,"col": 4,"docs": " The binding does not contain an entry name.\n"},{"file": 50,"line": 1897,"col": 4,"docs": " Unable to move the replacement file to the file to be replaced. The file to be replaced has been renamed using the backup name.\n"},{"file": 50,"line": 556,"col": 4,"docs": " The extended attributes are inconsistent.\n"},{"file": 50,"line": 784,"col": 4,"docs": " Profiling not started.\n"},{"file": 50,"line": 1555,"col": 4,"docs": " The volume does not contain a recognized file system. Please make sure that all required file system drivers are loaded and that the volume is not corrupted.\n"},{"file": 50,"line": 598,"col": 4,"docs": " An invalid oplock acknowledgment was received by the system.\n"},{"file": 50,"line": 394,"col": 4,"docs": " No more threads can be created in the system.\n"},{"file": 50,"line": 1726,"col": 4,"docs": " Tape could not be partitioned.\n"},{"file": 50,"line": 1252,"col": 4,"docs": " {Page Locked} One of the pages to lock was already locked.\n"},{"file": 50,"line": 3548,"col": 4,"docs": " The requested operation failed. A system reboot has been initiated to roll back changes made.\n"},{"file": 50,"line": 2708,"col": 4,"docs": " Insufficient NVRAM resources exist to complete the requested service. A reboot might be required.\n"},{"file": 50,"line": 2891,"col": 4,"docs": " A fail fast exception occurred. Exception handlers will not be invoked and the process will be terminated immediately.\n"},{"file": 50,"line": 2888,"col": 4,"docs": " The Windows Installer service is not accessible in Safe Mode. Please try again when your computer is not in Safe Mode or you can use System Restore to return your machine to a previous good state.\n"},{"file": 50,"line": 3041,"col": 4,"docs": " The authorization service is unknown.\n"},{"file": 50,"line": 3527,"col": 4,"docs": " The requested operation is successful. Changes will not be effective until the service is restarted.\n"},{"file": 50,"line": 3311,"col": 4,"docs": " The specified printer has been deleted.\n"},{"file": 50,"line": 883,"col": 4,"docs": " The paging file cannot be created on a floppy diskette.\n"},{"file": 50,"line": 1453,"col": 4,"docs": " A thread is getting dispatched with MCA EXCEPTION because of MCA.\n"},{"file": 50,"line": 97,"col": 4,"docs": " The process cannot access the file because it is being used by another process.\n"},{"file": 50,"line": 1774,"col": 4,"docs": " A serial I/O operation completed because the timeout period expired. The IOCTL_SERIAL_XOFF_COUNTER did not reach zero.)\n"},{"file": 50,"line": 1225,"col": 4,"docs": " {Expedited Data Received} The network transport returned data to its client that was marked as expedited by the remote system.\n"},{"file": 50,"line": 367,"col": 4,"docs": " The volume label you entered exceeds the label character limit of the target file system.\n"},{"file": 50,"line": 1279,"col": 4,"docs": " The system was put into hibernation.\n"},{"file": 50,"line": 3362,"col": 4,"docs": " The entry is not of the expected type.\n"},{"file": 50,"line": 2402,"col": 4,"docs": " Unable to impersonate using a named pipe until data has been read from that pipe.\n"},{"file": 50,"line": 685,"col": 4,"docs": " The command specified a number of descriptors that exceeded the maximum supported by the device.\n"},{"file": 50,"line": 157,"col": 4,"docs": " The specified network name is no longer available.\n"},{"file": 50,"line": 808,"col": 4,"docs": " If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception.\n"},{"file": 50,"line": 2645,"col": 4,"docs": " Cannot show or remove the window in the way specified.\n"},{"file": 50,"line": 40,"col": 4,"docs": " The data is invalid.\n"},{"file": 50,"line": 1165,"col": 4,"docs": " Debugger did not handle the exception.\n"},{"file": 50,"line": 274,"col": 4,"docs": " The filename, directory name, or volume label syntax is incorrect.\n"},{"file": 50,"line": 1324,"col": 4,"docs": " A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.\n"},{"file": 50,"line": 1384,"col": 4,"docs": " {Volume Shadow Copy Service} The system is now ready for hibernation.\n"},{"file": 50,"line": 1084,"col": 4,"docs": " There was error [%2] processing the driver database.\n"},{"file": 50,"line": 3500,"col": 4,"docs": " The spool file was not found.\n"},{"file": 50,"line": 3170,"col": 4,"docs": " The redirector is in use and cannot be unloaded.\n"},{"file": 50,"line": 796,"col": 4,"docs": " Used to indicate that an operation cannot continue without blocking for I/O.\n"},{"file": 50,"line": 3260,"col": 4,"docs": " A UUID that is valid only on this computer has been allocated.\n"},{"file": 50,"line": 967,"col": 4,"docs": " There is an IP address conflict with another system on the network.\n"},{"file": 50,"line": 2447,"col": 4,"docs": " The local security authority database contains an internal inconsistency.\n"},{"file": 50,"line": 292,"col": 4,"docs": " The %1 application cannot be run in Win32 mode.\n"},{"file": 50,"line": 2444,"col": 4,"docs": " The length of a secret exceeds the maximum length allowed.\n"},{"file": 50,"line": 2384,"col": 4,"docs": " The requested action is restricted for use by logon processes only. The calling process has not registered as a logon process.\n"},{"file": 50,"line": 1414,"col": 4,"docs": " The data provider cannot scroll backwards through a result set.\n"},{"file": 50,"line": 2468,"col": 4,"docs": " A cross-encrypted password is necessary to change this user password.\n"},{"file": 50,"line": 976,"col": 4,"docs": " The password provided is too short to meet the policy of your user account. Please choose a longer password.\n"},{"file": 50,"line": 3101,"col": 4,"docs": " A floating-point underflow occurred at the RPC server.\n"},{"file": 50,"line": 364,"col": 4,"docs": " The DosMuxSemWait list is not correct.\n"},{"file": 50,"line": 3446,"col": 4,"docs": " The specified color profile is not associated with the specified device.\n"},{"file": 50,"line": 772,"col": 4,"docs": " Length of message passed to NtRequestPort or NtRequestWaitReplyPort was longer than the maximum message allowed by the port.\n"},{"file": 50,"line": 1957,"col": 4,"docs": " The format of the specified service name is invalid.\n"},{"file": 50,"line": 673,"col": 4,"docs": " The command specified a data offset that does not align to the device's granularity/alignment.\n"},{"file": 50,"line": 2309,"col": 4,"docs": " The access control list (ACL) structure is invalid.\n"},{"file": 50,"line": 3473,"col": 4,"docs": " The network connection was made successfully, but the user had to be prompted for a password other than the one originally specified.\n"},{"file": 50,"line": 1660,"col": 4,"docs": " The dependency service or group failed to start.\n"},{"file": 50,"line": 331,"col": 4,"docs": " The system cannot perform a JOIN or SUBST at this time.\n"},{"file": 50,"line": 1156,"col": 4,"docs": " {Registry Hive Recovered} Registry hive (file): %hs was corrupted and it has been recovered. Some data might have been lost.\n"},{"file": 50,"line": 2324,"col": 4,"docs": " The server is currently enabled.\n"},{"file": 50,"line": 814,"col": 4,"docs": " Indicates that an attempt was made to assign protection to a file system file or directory and one of the SIDs in the security descriptor could not be translated into a GUID that could be stored by the file system. This causes the protection attempt to fail, which may cause a file creation attempt to fail.\n"},{"file": 50,"line": 1306,"col": 4,"docs": " ERROR_ABANDONED_WAIT_0\n"},{"file": 50,"line": 337,"col": 4,"docs": " The directory is not a subdirectory of the root directory.\n"},{"file": 50,"line": 2297,"col": 4,"docs": " No mapping between account names and security IDs was done.\n"},{"file": 50,"line": 1297,"col": 4,"docs": " ERROR_WAIT_2\n"},{"file": 50,"line": 313,"col": 4,"docs": " The system tried to delete the JOIN of a drive that is not joined.\n"},{"file": 50,"line": 1147,"col": 4,"docs": " A long jump has been executed.\n"},{"file": 50,"line": 1216,"col": 4,"docs": " {Redundant Write} To satisfy a write request, the NT fault-tolerant file system successfully wrote a redundant copy of the information. This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was not able to reassign the failing area of the device.\n"},{"file": 50,"line": 1024,"col": 4,"docs": " {EXCEPTION} Multiple floating point traps.\n"},{"file": 50,"line": 2747,"col": 4,"docs": " This action is only valid for products that are currently installed.\n"},{"file": 50,"line": 67,"col": 4,"docs": " The device does not recognize the command.\n"},{"file": 50,"line": 2465,"col": 4,"docs": " Too many security IDs have been specified.\n"},{"file": 50,"line": 1111,"col": 4,"docs": " WOW Assertion Error.\n"},{"file": 50,"line": 3251,"col": 4,"docs": " The requested authentication level is not supported.\n"},{"file": 50,"line": 3125,"col": 4,"docs": " The stub is unable to get the remote procedure call handle.\n"},{"file": 50,"line": 232,"col": 4,"docs": " The program stopped because an alternate diskette was not inserted.\n"},{"file": 50,"line": 1696,"col": 4,"docs": " Failure actions can only be set for Win32 services, not for drivers.\n"},{"file": 50,"line": 3248,"col": 4,"docs": " A communications failure occurred during a remote procedure call.\n"},{"file": 50,"line": 1135,"col": 4,"docs": " This warning level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted. The commit has NOT been completed, but has not been rolled back either (so it may still be committed if desired).\n"},{"file": 50,"line": 3530,"col": 4,"docs": " No printers were found.\n"},{"file": 50,"line": 2321,"col": 4,"docs": " The server is currently disabled.\n"},{"file": 50,"line": 889,"col": 4,"docs": " This operation is only allowed for the Primary Domain Controller of the domain.\n"},{"file": 50,"line": 1834,"col": 4,"docs": " No application is associated with the specified file for this operation.\n"},{"file": 50,"line": 3374,"col": 4,"docs": " The specified profile element could not be added.\n"},{"file": 50,"line": 1234,"col": 4,"docs": " {TDI Event Pending} The TDI indication has entered the pending state.\n"},{"file": 50,"line": 457,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 913,"col": 4,"docs": " {Cancel Timeout} The driver %hs failed to complete a cancelled I/O request in the allotted time.\n"},{"file": 50,"line": 2840,"col": 4,"docs": " This update package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer update package.\n"},{"file": 50,"line": 2984,"col": 4,"docs": " Access to the HTTP proxy is denied.\n"},{"file": 50,"line": 1768,"col": 4,"docs": " Unable to open a device that was sharing an interrupt request (IRQ) with other devices. At least one other device that uses that IRQ was already opened.\n"},{"file": 50,"line": 2690,"col": 4,"docs": " This application does not support the current operation on symbolic links.\n"},{"file": 50,"line": 751,"col": 4,"docs": " A warning occurred in the WX86 subsystem.\n"},{"file": 50,"line": 1582,"col": 4,"docs": " One of the files in the registry database had to be recovered by use of a log or alternate copy. The recovery was successful.\n"},{"file": 50,"line": 1672,"col": 4,"docs": " The specified service has been marked for deletion.\n"},{"file": 50,"line": 1282,"col": 4,"docs": " The system was resumed from hibernation.\n"},{"file": 50,"line": 1789,"col": 4,"docs": " While accessing the hard disk, a recalibrate operation failed, even after retries.\n"},{"file": 50,"line": 2705,"col": 4,"docs": " There was an AuthIP failure when attempting to connect to the remote host.\n"},{"file": 50,"line": 1831,"col": 4,"docs": " One of the library files needed to run this application is damaged.\n"},{"file": 50,"line": 1201,"col": 4,"docs": " {Image Relocated} An image file could not be mapped at the address specified in the image file. Local fixups must be performed on this image.\n"},{"file": 50,"line": 2107,"col": 4,"docs": " The Kerberos protocol encountered an error while validating the KDC certificate during smartcard logon. There is more information in the system event log.\n"},{"file": 50,"line": 220,"col": 4,"docs": " The semaphore cannot be set again.\n"},{"file": 50,"line": 1333,"col": 4,"docs": " This success level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted. The commit has now been completed.\n"},{"file": 50,"line": 3002,"col": 4,"docs": " The name syntax is invalid.\n"},{"file": 50,"line": 61,"col": 4,"docs": " The system cannot find the device specified.\n"},{"file": 50,"line": 2285,"col": 4,"docs": " Your account has time restrictions that keep you from signing in right now.\n"},{"file": 50,"line": 2927,"col": 4,"docs": " The object universal unique identifier (UUID) was not found.\n"},{"file": 50,"line": 1057,"col": 4,"docs": " An attempt to remove a processes DebugPort was made, but a port was not already associated with the process.\n"},{"file": 50,"line": 1231,"col": 4,"docs": " {TDI Event Done} The TDI indication has completed successfully.\n"},{"file": 50,"line": 79,"col": 4,"docs": " The specified disk or diskette cannot be accessed.\n"},{"file": 50,"line": 2516,"col": 4,"docs": " Cannot create a top-level child window.\n"},{"file": 50,"line": 2501,"col": 4,"docs": " Invalid menu handle.\n"},{"file": 50,"line": 1162,"col": 4,"docs": " The application is loading executable code from the module %hs. This is secure, but may be incompatible with previous releases of the operating system. An alternative, %hs, is available. Should the application use the secure module %hs?\n"},{"file": 50,"line": 1171,"col": 4,"docs": " Debugger cannot provide handle.\n"},{"file": 50,"line": 1762,"col": 4,"docs": " The request could not be performed because of an I/O device error.\n"},{"file": 50,"line": 3356,"col": 4,"docs": " The file cannot be accessed by the system.\n"},{"file": 50,"line": 559,"col": 4,"docs": " The wait operation timed out.\n"},{"file": 50,"line": 3089,"col": 4,"docs": " An internal error occurred in a remote procedure call (RPC).\n"},{"file": 50,"line": 823,"col": 4,"docs": " Indicates that the user supplied an invalid descriptor when trying to set up Ldt descriptors.\n"},{"file": 50,"line": 1597,"col": 4,"docs": " System could not allocate the required space in a registry log.\n"},{"file": 50,"line": 3452,"col": 4,"docs": " The specified color space is invalid.\n"},{"file": 50,"line": 709,"col": 4,"docs": " The shutdown operation failed.\n"},{"file": 50,"line": 1471,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error may be caused if the device has been removed or the media is write-protected.\n"},{"file": 50,"line": 850,"col": 4,"docs": " {Missing System File} The required system file %hs is bad or missing.\n"},{"file": 50,"line": 3074,"col": 4,"docs": " The entry is not found.\n"},{"file": 50,"line": 91,"col": 4,"docs": " The system cannot read from the specified device.\n"},{"file": 50,"line": 52,"col": 4,"docs": " The system cannot move the file to a different disk drive.\n"},{"file": 50,"line": 1759,"col": 4,"docs": " Unable to abort the system shutdown because no shutdown was in progress.\n"},{"file": 50,"line": 3422,"col": 4,"docs": " The requested metafile operation is not supported.\n"},{"file": 50,"line": 3113,"col": 4,"docs": " The file containing the character translation table has fewer than 512 bytes.\n"},{"file": 50,"line": 1804,"col": 4,"docs": " A potential deadlock condition has been detected.\n"},{"file": 50,"line": 3563,"col": 4,"docs": " The operation was paused.\n"},{"file": 50,"line": 1900,"col": 4,"docs": " The volume change journal is being deleted.\n"},{"file": 50,"line": 3254,"col": 4,"docs": " No principal name registered.\n"},{"file": 50,"line": 565,"col": 4,"docs": " The copy functions cannot be used.\n"},{"file": 50,"line": 3218,"col": 4,"docs": " The name or security ID (SID) of the domain specified is inconsistent with the trust information for that domain.\n"},{"file": 50,"line": 1888,"col": 4,"docs": " The Volume ID could not be found.\n"},{"file": 50,"line": 2210,"col": 4,"docs": " No encryption key is available. A well-known encryption key was returned.\n"},{"file": 50,"line": 844,"col": 4,"docs": " {Privilege Failed} The I/O permissions for the process could not be changed.\n"},{"file": 50,"line": 3332,"col": 4,"docs": " The object resolver set specified was not found.\n"},{"file": 50,"line": 3038,"col": 4,"docs": " The security context is invalid.\n"},{"file": 50,"line": 3227,"col": 4,"docs": " The specified resource type cannot be found in the image file.\n"},{"file": 50,"line": 523,"col": 4,"docs": " Access Denied. Before opening files in this location, you must first add the web site to your trusted sites list, browse to the web site, and select the option to login automatically.\n"},{"file": 50,"line": 592,"col": 4,"docs": " Only part of a ReadProcessMemory or WriteProcessMemory request was completed.\n"},{"file": 50,"line": 2783,"col": 4,"docs": " The device has been removed.\n"},{"file": 50,"line": 493,"col": 4,"docs": " The segment is locked and cannot be reallocated.\n"},{"file": 50,"line": 526,"col": 4,"docs": " Operation did not complete successfully because the file contains a virus or potentially unwanted software.\n"},{"file": 50,"line": 3458,"col": 4,"docs": " There was an error while deleting the color transform.\n"},{"file": 50,"line": 1366,"col": 4,"docs": " A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.\n"},{"file": 50,"line": 1189,"col": 4,"docs": " Debugger received control break.\n"},{"file": 50,"line": 460,"col": 4,"docs": " The operating system cannot run this application program.\n"},{"file": 50,"line": 2339,"col": 4,"docs": " Cannot open an anonymous level security token.\n"},{"file": 50,"line": 2867,"col": 4,"docs": " The Windows Installer does not permit installation from a Remote Desktop Connection.\n"},{"file": 50,"line": 58,"col": 4,"docs": " The media is write protected.\n"},{"file": 50,"line": 346,"col": 4,"docs": " Not enough resources are available to process this command.\n"},{"file": 50,"line": 2486,"col": 4,"docs": " The target account name is incorrect.\n"},{"file": 50,"line": 2744,"col": 4,"docs": " Installation suspended, incomplete.\n"},{"file": 50,"line": 739,"col": 4,"docs": " There is a process on other end of the pipe.\n"},{"file": 50,"line": 682,"col": 4,"docs": " An attempt was made to send down the command via an invalid path to the target device.\n"},{"file": 50,"line": 1717,"col": 4,"docs": " The beginning of the tape or a partition was encountered.\n"},{"file": 50,"line": 2942,"col": 4,"docs": " The RPC server is not listening.\n"},{"file": 50,"line": 2195,"col": 4,"docs": " A thread involved in this operation appears to be unresponsive.\n"},{"file": 50,"line": 859,"col": 4,"docs": " {Unable to Create Paging File} The creation of the paging file %hs failed (%lx). The requested size was %ld.\n"},{"file": 50,"line": 2750,"col": 4,"docs": " Feature ID not registered.\n"},{"file": 50,"line": 2702,"col": 4,"docs": " The caller made the connection request in the wrong routing compartment.\n"},{"file": 50,"line": 3068,"col": 4,"docs": " The interface was not found.\n"},{"file": 50,"line": 1465,"col": 4,"docs": " {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error may be caused by network connectivity issues. Please try to save this file elsewhere.\n"},{"file": 50,"line": 2119,"col": 4,"docs": " An application-defined callback gave invalid data when called.\n"},{"file": 50,"line": 2243,"col": 4,"docs": " A required privilege is not held by the client.\n"},{"file": 50,"line": 2083,"col": 4,"docs": " The server machine is shutting down.\n"},{"file": 50,"line": 3344,"col": 4,"docs": " The RPC pipe object has already been closed.\n"},{"file": 50,"line": 178,"col": 4,"docs": " No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept.\n"},{"file": 50,"line": 3221,"col": 4,"docs": " The server is in use and cannot be unloaded.\n"},{"file": 50,"line": 1519,"col": 4,"docs": " Access to the specified file handle has been revoked.\n"},{"file": 50,"line": 388,"col": 4,"docs": " The specified path is invalid.\n"},{"file": 50,"line": 1609,"col": 4,"docs": " A stop control has been sent to a service that other running services are dependent on.\n"},{"file": 50,"line": 2041,"col": 4,"docs": " The network address could not be used for the operation requested.\n"},{"file": 50,"line": 1003,"col": 4,"docs": " {DLL Initialization Failed} The application failed to initialize because the window station is shutting down.\n"},{"file": 50,"line": 2423,"col": 4,"docs": " The token is already in use as a primary token.\n"},{"file": 50,"line": 31,"col": 4,"docs": " The environment is incorrect.\n"},{"file": 50,"line": 2074,"col": 4,"docs": " The group policy framework should call the extension even if there are no changes.\n"},{"file": 50,"line": 85,"col": 4,"docs": " The printer is out of paper.\n"},{"file": 50,"line": 2624,"col": 4,"docs": " The window is not a child window.\n"},{"file": 50,"line": 3104,"col": 4,"docs": " A floating-point overflow occurred at the RPC server.\n"},{"file": 50,"line": 1342,"col": 4,"docs": " Page fault was a transition fault.\n"},{"file": 50,"line": 763,"col": 4,"docs": " An invalid or unaligned stack was encountered during an unwind operation.\n"},{"file": 50,"line": 901,"col": 4,"docs": " {Unexpected Failure in DebugActiveProcess} An unexpected failure occurred while processing a DebugActiveProcess API request. You may choose OK to terminate the process, or Cancel to ignore the error.\n"},{"file": 50,"line": 907,"col": 4,"docs": " {Data Not Accepted} The TDI client could not handle the data received during an indication.\n"},{"file": 50,"line": 2831,"col": 4,"docs": " This installation package is not supported by this processor type. Contact your product vendor.\n"},{"file": 50,"line": 1048,"col": 4,"docs": " There is not enough power to complete the requested operation.\n"},{"file": 50,"line": 2963,"col": 4,"docs": " The RPC server is unavailable.\n"},{"file": 50,"line": 985,"col": 4,"docs": " The specified compression format is unsupported.\n"},{"file": 50,"line": 1096,"col": 4,"docs": " The system has failed to hibernate (The error code is %hs). Hibernation will be disabled until the system is restarted.\n"},{"file": 50,"line": 3545,"col": 4,"docs": " The requested operation failed. A system reboot is required to roll back changes made.\n"},{"file": 50,"line": 2738,"col": 4,"docs": " User cancelled installation.\n"},{"file": 50,"line": 1078,"col": 4,"docs": " The device object parameter is either not a valid device object or is not attached to the volume specified by the file name.\n"},{"file": 50,"line": 3461,"col": 4,"docs": " The specified color transform is invalid.\n"},{"file": 50,"line": 955,"col": 4,"docs": " There is insufficient account information to log you on.\n"},{"file": 50,"line": 2026,"col": 4,"docs": " The network connection was aborted by the local system.\n"},{"file": 50,"line": 2068,"col": 4,"docs": " A domain controller with the specified name already exists.\n"},{"file": 50,"line": 3185,"col": 4,"docs": " The specified separator file is invalid.\n"},{"file": 50,"line": 1183,"col": 4,"docs": " Debugger printed exception on control C.\n"},{"file": 50,"line": 376,"col": 4,"docs": " The segment is already discarded and cannot be locked.\n"},{"file": 50,"line": 3080,"col": 4,"docs": " The network address family is invalid.\n"},{"file": 50,"line": 2621,"col": 4,"docs": " All handles to windows in a multiple-window position structure must have the same parent.\n"},{"file": 50,"line": 1009,"col": 4,"docs": " There are no more matches for the current index enumeration.\n"},{"file": 50,"line": 1168,"col": 4,"docs": " Debugger will reply later.\n"},{"file": 50,"line": 4,"col": 4,"docs": " Incorrect function.\n"},{"file": 50,"line": 136,"col": 4,"docs": " A network adapter hardware error occurred.\n"},{"file": 50,"line": 445,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 3491,"col": 4,"docs": " The device is in use by an active process and cannot be disconnected.\n"},{"file": 50,"line": 634,"col": 4,"docs": " Operation is not allowed on a file system internal file.\n"},{"file": 50,"line": 2543,"col": 4,"docs": " Using private DIALOG window words.\n"},{"file": 50,"line": 2204,"col": 4,"docs": " Some mapping between account names and security IDs was not done.\n"},{"file": 50,"line": 1354,"col": 4,"docs": " Page fault was satisfied by reading from a secondary storage device.\n"},{"file": 50,"line": 658,"col": 4,"docs": " The device is unreachable.\n"},{"file": 50,"line": 979,"col": 4,"docs": " The policy of your user account does not allow you to change passwords too frequently. This is done to prevent users from changing back to a familiar, but potentially discovered, password. If you feel your password has been compromised then please contact your administrator immediately to have a new one assigned.\n"},{"file": 50,"line": 289,"col": 4,"docs": " There are no child processes to wait for.\n"},{"file": 50,"line": 2282,"col": 4,"docs": " Account restrictions are preventing this user from signing in. For example: blank passwords aren't allowed, sign-in times are limited, or a policy restriction has been enforced.\n"},{"file": 50,"line": 628,"col": 4,"docs": " Duplicate privileges were specified for the token.\n"},{"file": 50,"line": 541,"col": 4,"docs": " The pipe is being closed.\n"},{"file": 50,"line": 1570,"col": 4,"docs": " The configuration registry key is invalid.\n"},{"file": 50,"line": 1381,"col": 4,"docs": " The specified process is part of a job.\n"},{"file": 50,"line": 640,"col": 4,"docs": " The token representing the data is invalid.\n"},{"file": 50,"line": 721,"col": 4,"docs": " The thread is not in background processing mode.\n"},{"file": 50,"line": 1357,"col": 4,"docs": " Cached page was locked during operation.\n"},{"file": 50,"line": 1933,"col": 4,"docs": " Unable to open the network connection profile.\n"},{"file": 50,"line": 2759,"col": 4,"docs": " Handle is in an invalid state.\n"},{"file": 50,"line": 25,"col": 4,"docs": " Not enough storage is available to process this command.\n"},{"file": 50,"line": 2183,"col": 4,"docs": " The service notification client is lagging too far behind the current state of services in the machine.\n"},{"file": 50,"line": 3017,"col": 4,"docs": " The maximum number of calls is too small.\n"},{"file": 50,"line": 1144,"col": 4,"docs": " The create operation stopped after reaching a symbolic link.\n"},{"file": 50,"line": 19,"col": 4,"docs": " The handle is invalid.\n"},{"file": 50,"line": 499,"col": 4,"docs": " Cannot nest calls to LoadModule.\n"},{"file": 50,"line": 3299,"col": 4,"docs": " The specified time is invalid.\n"},{"file": 50,"line": 2453,"col": 4,"docs": " Logon failure: the user has not been granted the requested logon type at this computer.\n"},{"file": 50,"line": 871,"col": 4,"docs": " An event pair synchronization operation was performed using the thread specific client/server event pair object, but no event pair object was associated with the thread.\n"},{"file": 50,"line": 1627,"col": 4,"docs": " The account name is invalid or does not exist, or the password is invalid for the account name specified.\n"},{"file": 50,"line": 2837,"col": 4,"docs": " This update package could not be opened. Verify that the update package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer update package.\n"},{"file": 50,"line": 1042,"col": 4,"docs": " {Fatal System Error} The system image %s is not properly signed. The file has been replaced with the signed file. The system has been shut down.\n"},{"file": 50,"line": 2966,"col": 4,"docs": " The RPC server is too busy to complete this operation.\n"},{"file": 50,"line": 2267,"col": 4,"docs": " This operation is disallowed as it could result in an administration account being disabled, deleted or unable to log on.\n"},{"file": 50,"line": 1120,"col": 4,"docs": " A IRQ translator failed to translate resources.\n"},{"file": 50,"line": 1915,"col": 4,"docs": " The system shutdown cannot be initiated because there are other users logged on to the computer.\n"},{"file": 50,"line": 442,"col": 4,"docs": " %1 is not a valid Win32 application.\n"},{"file": 50,"line": 3047,"col": 4,"docs": " The server endpoint cannot perform the operation.\n"},{"file": 50,"line": 3296,"col": 4,"docs": " The object universal unique identifier (UUID) is the nil UUID.\n"},{"file": 50,"line": 1102,"col": 4,"docs": " The requested operation could not be completed due to a file system limitation.\n"},{"file": 50,"line": 1339,"col": 4,"docs": " {Connect Failure on Primary Transport} An attempt was made to connect to the remote server %hs on the primary transport, but the connection failed. The computer WAS able to connect on a secondary transport.\n"},{"file": 50,"line": 3407,"col": 4,"docs": " Authentication failed because NTLM authentication has been disabled.\n"},{"file": 50,"line": 3521,"col": 4,"docs": " The requested operation is not allowed when there are jobs queued to the printer.\n"},{"file": 50,"line": 2002,"col": 4,"docs": " An address has not yet been associated with the network endpoint.\n"},{"file": 50,"line": 199,"col": 4,"docs": " The specified network password is not correct.\n"},{"file": 50,"line": 1975,"col": 4,"docs": " Multiple connections to a server or shared resource by the same user, using more than one user name, are not allowed. Disconnect all previous connections to the server or shared resource and try again.\n"},{"file": 50,"line": 1921,"col": 4,"docs": " The device is not currently connected but it is a remembered connection.\n"},{"file": 50,"line": 430,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 406,"col": 4,"docs": " A lock request was not outstanding for the supplied cancel region.\n"},{"file": 50,"line": 379,"col": 4,"docs": " The segment is already unlocked.\n"},{"file": 50,"line": 3257,"col": 4,"docs": " The error specified is not a valid Windows RPC error code.\n"},{"file": 50,"line": 928,"col": 4,"docs": " The request must be handled by the stack overflow code.\n"},{"file": 50,"line": 2918,"col": 4,"docs": " The network address is invalid.\n"},{"file": 50,"line": 2255,"col": 4,"docs": " The specified group already exists.\n"},{"file": 50,"line": 3044,"col": 4,"docs": " The entry is invalid.\n"},{"file": 50,"line": 304,"col": 4,"docs": " A JOIN or SUBST command cannot be used for a drive that contains previously joined drives.\n"},{"file": 50,"line": 1951,"col": 4,"docs": " The format of the specified event name is invalid.\n"},{"file": 50,"line": 2050,"col": 4,"docs": " The operation being requested was not performed because the user has not been authenticated.\n"},{"file": 50,"line": 358,"col": 4,"docs": " The number of specified semaphore events for DosMuxSemWait is not correct.\n"},{"file": 50,"line": 718,"col": 4,"docs": " The thread is already in background processing mode.\n"},{"file": 50,"line": 2426,"col": 4,"docs": " The specified local group does not exist.\n"},{"file": 50,"line": 2294,"col": 4,"docs": " This user can't sign in because this account is currently disabled.\n"},{"file": 50,"line": 535,"col": 4,"docs": " The pipe state is invalid.\n"},{"file": 50,"line": 586,"col": 4,"docs": " Attempt to release mutex not owned by caller.\n"},{"file": 50,"line": 991,"col": 4,"docs": " The specified Plug and Play registry device path is invalid.\n"},{"file": 50,"line": 2798,"col": 4,"docs": " Error opening installation log file. Verify that the specified log file location exists and that you can write to it.\n"},{"file": 50,"line": 3110,"col": 4,"docs": " Unable to open the character translation table file.\n"},{"file": 50,"line": 1105,"col": 4,"docs": " An assertion failure has occurred.\n"},{"file": 50,"line": 631,"col": 4,"docs": " No ranges for the specified operation were able to be processed.\n"},{"file": 50,"line": 1405,"col": 4,"docs": " An exception occurred in a user mode callback and the kernel callback frame should be removed.\n"},{"file": 50,"line": 3077,"col": 4,"docs": " The name service is unavailable.\n"},{"file": 50,"line": 1351,"col": 4,"docs": " Page fault was a demand zero fault.\n"},{"file": 50,"line": 1633,"col": 4,"docs": " Circular service dependency was specified.\n"},{"file": 50,"line": 2540,"col": 4,"docs": " Invalid icon handle.\n"},{"file": 50,"line": 1540,"col": 4,"docs": " Error performing inpage operation.\n"},{"file": 50,"line": 1849,"col": 4,"docs": " The indicated source element has no media.\n"},{"file": 50,"line": 3443,"col": 4,"docs": " The specified tag is already present.\n"},{"file": 50,"line": 244,"col": 4,"docs": " The file name is too long.\n"},{"file": 50,"line": 3008,"col": 4,"docs": " No network address is available to use to construct a universal unique identifier (UUID).\n"},{"file": 50,"line": 1618,"col": 4,"docs": " A thread could not be created for the service.\n"},{"file": 50,"line": 2492,"col": 4,"docs": " There is a time and/or date difference between the client and server.\n"},{"file": 50,"line": 2741,"col": 4,"docs": " Fatal error during installation.\n"},{"file": 50,"line": 2180,"col": 4,"docs": " Either the target process, or the target thread's containing process, is a protected process.\n"},{"file": 50,"line": 1852,"col": 4,"docs": " The indicated destination element already contains media.\n"},{"file": 50,"line": 3281,"col": 4,"docs": " An invalid operation was attempted on an RPC pipe object.\n"},{"file": 50,"line": 3551,"col": 4,"docs": " The specified printer driver was not found on the system and needs to be downloaded.\n"},{"file": 50,"line": 2924,"col": 4,"docs": " The timeout value is invalid.\n"},{"file": 50,"line": 583,"col": 4,"docs": " The mounted file system does not support extended attributes.\n"},{"file": 50,"line": 3158,"col": 4,"docs": " The network logon failed.\n"},{"file": 50,"line": 454,"col": 4,"docs": " The operating system is not presently configured to run this application.\n"},{"file": 50,"line": 2909,"col": 4,"docs": " The RPC protocol sequence is invalid.\n"},{"file": 50,"line": 2870,"col": 4,"docs": " Uninstallation of the update package is not supported.\n"},{"file": 50,"line": 1669,"col": 4,"docs": " The specified service database lock is invalid.\n"},{"file": 50,"line": 1462,"col": 4,"docs": " A valid hibernation file has been invalidated and should be abandoned.\n"},{"file": 50,"line": 2885,"col": 4,"docs": " Windows Installer does not permit updating of managed advertised products. At least one feature of the product must be installed before applying the update.\n"},{"file": 50,"line": 1687,"col": 4,"docs": " No attempts to start the service have been made since the last boot.\n"},{"file": 50,"line": 1270,"col": 4,"docs": " The arbiter has deferred arbitration of these resources to its parent.\n"},{"file": 50,"line": 2053,"col": 4,"docs": " The operation being requested was not performed because the user has not logged on to the network. The specified service does not exist.\n"},{"file": 50,"line": 2972,"col": 4,"docs": " There are no remote procedure calls active on this thread.\n"},{"file": 50,"line": 505,"col": 4,"docs": " The image file %1 is signed, unable to modify.\n"},{"file": 50,"line": 2672,"col": 4,"docs": " Hook type not allowed.\n"},{"file": 50,"line": 3233,"col": 4,"docs": " The specified resource language ID cannot be found in the image file.\n"},{"file": 50,"line": 706,"col": 4,"docs": " No action was taken as a system reboot is required.\n"},{"file": 50,"line": 1330,"col": 4,"docs": " A new volume has been mounted by a file system.\n"},{"file": 50,"line": 1117,"col": 4,"docs": " A translator failed to translate resources.\n"},{"file": 50,"line": 2113,"col": 4,"docs": " The system cannot contact a domain controller to service the authentication request. Please try again later.\n"},{"file": 50,"line": 2312,"col": 4,"docs": " The security ID structure is invalid.\n"},{"file": 50,"line": 1924,"col": 4,"docs": " The local device name has a remembered connection to another network resource.\n"},{"file": 50,"line": 2216,"col": 4,"docs": " The revision level is unknown.\n"},{"file": 50,"line": 433,"col": 4,"docs": " The operating system cannot run %1.\n"},{"file": 50,"line": 547,"col": 4,"docs": " More data is available.\n"},{"file": 50,"line": 1846,"col": 4,"docs": " The message can be used only with synchronous operations.\n"},{"file": 50,"line": 904,"col": 4,"docs": " {Fatal System Error} The %hs system process terminated unexpectedly with a status of 0x%08x (0x%08x 0x%08x). The system has been shut down.\n"},{"file": 50,"line": 2807,"col": 4,"docs": " This installation is forbidden by system policy. Contact your system administrator.\n"},{"file": 50,"line": 1522,"col": 4,"docs": " An image file was mapped at a different address from the one specified in the image file but fixups will still be automatically performed on the image.\n"},{"file": 50,"line": 3287,"col": 4,"docs": " HTTP proxy server rejected the connection because the cookie authentication failed.\n"},{"file": 50,"line": 3566,"col": 4,"docs": " Reissue the given operation as a cached IO operation.\n"},{"file": 50,"line": 49,"col": 4,"docs": " The directory cannot be removed.\n"},{"file": 50,"line": 1681,"col": 4,"docs": " The dependency service does not exist or has been marked for deletion.\n"},{"file": 50,"line": 3416,"col": 4,"docs": " The specified driver is invalid.\n"},{"file": 50,"line": 3188,"col": 4,"docs": " The specified priority is invalid.\n"},{"file": 50,"line": 184,"col": 4,"docs": " The file exists.\n"},{"file": 50,"line": 2609,"col": 4,"docs": " The window does not have a system menu.\n"},{"file": 50,"line": 2678,"col": 4,"docs": " This operation returned because the timeout period expired.\n"},{"file": 50,"line": 373,"col": 4,"docs": " The recipient process has refused the signal.\n"},{"file": 50,"line": 1213,"col": 4,"docs": " {Redundant Read} To satisfy a read request, the NT fault-tolerant file system successfully read the requested data from a redundant copy. This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was unable to reassign the failing area of the device.\n"},{"file": 50,"line": 3386,"col": 4,"docs": " The printer driver is not compatible with a policy enabled on your computer that blocks NT 4.0 drivers.\n"},{"file": 50,"line": 2711,"col": 4,"docs": " Unable to finish the requested operation because the specified process is not a GUI process.\n"},{"file": 50,"line": 1495,"col": 4,"docs": " One of the volume corruption logs was cleared by chkdsk and no longer contains real corruptions.\n"},{"file": 50,"line": 2960,"col": 4,"docs": " Not enough resources are available to complete this operation.\n"},{"file": 50,"line": 43,"col": 4,"docs": " Not enough storage is available to complete this operation.\n"},{"file": 50,"line": 46,"col": 4,"docs": " The system cannot find the drive specified.\n"},{"file": 50,"line": 2363,"col": 4,"docs": " The specified domain either does not exist or could not be contacted.\n"},{"file": 50,"line": 478,"col": 4,"docs": " The filename or extension is too long.\n"},{"file": 50,"line": 868,"col": 4,"docs": " {EXCEPTION} A real-mode application issued a floating-point instruction and floating-point hardware is not present.\n"},{"file": 50,"line": 3128,"col": 4,"docs": " A null reference pointer was passed to the stub.\n"},{"file": 50,"line": 1558,"col": 4,"docs": " The volume for a file has been externally altered so that the opened file is no longer valid.\n"},{"file": 50,"line": 2513,"col": 4,"docs": " Invalid handle to a multiple-window position structure.\n"},{"file": 50,"line": 3539,"col": 4,"docs": " The specified printer driver package is currently in use.\n"},{"file": 50,"line": 2122,"col": 4,"docs": " The group policy framework should call the extension in the synchronous foreground policy refresh.\n"},{"file": 50,"line": 2459,"col": 4,"docs": " A member could not be added to or removed from the local group because the member does not exist.\n"},{"file": 50,"line": 217,"col": 4,"docs": " The semaphore is set and cannot be closed.\n"},{"file": 50,"line": 3464,"col": 4,"docs": " The specified transform does not match the bitmap's color space.\n"},{"file": 50,"line": 1198,"col": 4,"docs": " {Thread Suspended} A thread termination occurred while the thread was suspended. The thread was resumed, and termination proceeded.\n"},{"file": 50,"line": 2534,"col": 4,"docs": " Class still has open windows.\n"},{"file": 50,"line": 916,"col": 4,"docs": " {Reply Message Mismatch} An attempt was made to reply to an LPC message, but the thread specified by the client ID in the message was not waiting on that message.\n"},{"file": 50,"line": 1720,"col": 4,"docs": " A tape access reached the end of a set of files.\n"},{"file": 50,"line": 1021,"col": 4,"docs": " {EXCEPTION} Multiple floating point faults.\n"},{"file": 50,"line": 133,"col": 4,"docs": " The network BIOS command limit has been reached.\n"},{"file": 50,"line": 1606,"col": 4,"docs": " A notify change request is being completed and the information is not being returned in the caller's buffer. The caller now needs to enumerate the files to find the changes.\n"},{"file": 50,"line": 2654,"col": 4,"docs": " Insufficient system resources exist to complete the requested service.\n"},{"file": 50,"line": 3482,"col": 4,"docs": " This network connection does not exist.\n"},{"file": 50,"line": 2813,"col": 4,"docs": " Function failed during execution.\n"},{"file": 50,"line": 3023,"col": 4,"docs": " The RPC protocol sequence was not found.\n"},{"file": 50,"line": 1444,"col": 4,"docs": " The Desktop heap encountered an error while allocating session memory. There is more information in the system event log.\n"},{"file": 50,"line": 2900,"col": 4,"docs": " The binding handle is not the correct type.\n"},{"file": 50,"line": 2639,"col": 4,"docs": " The window does not have scroll bars.\n"},{"file": 50,"line": 1552,"col": 4,"docs": " Invalid flags.\n"},{"file": 50,"line": 568,"col": 4,"docs": " The directory name is invalid.\n"},{"file": 50,"line": 1978,"col": 4,"docs": " An attempt was made to establish a session to a network server, but there are already too many sessions established to that server.\n"},{"file": 50,"line": 2765,"col": 4,"docs": " Component qualifier not present.\n"},{"file": 50,"line": 2152,"col": 4,"docs": " An attempt to do an operation on a debug object failed because the object is in the process of being deleted.\n"},{"file": 50,"line": 1999,"col": 4,"docs": " The network transport endpoint already has an address associated with it.\n"},{"file": 50,"line": 1756,"col": 4,"docs": " A system shutdown is in progress.\n"},{"file": 50,"line": 2261,"col": 4,"docs": " Either the specified user account is already a member of the specified group, or the specified group cannot be deleted because it contains a member.\n"},{"file": 50,"line": 2780,"col": 4,"docs": " Record field does not exist.\n"},{"file": 50,"line": 2903,"col": 4,"docs": " The binding handle is invalid.\n"},{"file": 50,"line": 2912,"col": 4,"docs": " The string universal unique identifier (UUID) is invalid.\n"},{"file": 50,"line": 352,"col": 4,"docs": " An attempt was made to join or substitute a drive for which a directory on the drive is the target of a previous substitute.\n"},{"file": 50,"line": 2237,"col": 4,"docs": " A specified logon session does not exist. It may already have been terminated.\n"},{"file": 50,"line": 613,"col": 4,"docs": " The security stream for the given volume is in an inconsistent state. Please run CHKDSK on the volume.\n"},{"file": 50,"line": 3239,"col": 4,"docs": " No interfaces have been registered.\n"},{"file": 50,"line": 3518,"col": 4,"docs": " The specified print monitor is currently in use.\n"},{"file": 50,"line": 886,"col": 4,"docs": " The system BIOS failed to connect a system interrupt to the device or bus for which the device is connected.\n"},{"file": 50,"line": 1516,"col": 4,"docs": " The specified access control entry (ACE) contains an invalid condition.\n"},{"file": 50,"line": 1573,"col": 4,"docs": " The configuration registry key could not be opened.\n"},{"file": 50,"line": 1060,"col": 4,"docs": " This version of Windows is not compatible with the behavior version of directory forest, domain or domain controller.\n"},{"file": 50,"line": 2219,"col": 4,"docs": " Indicates two revision levels are incompatible.\n"},{"file": 50,"line": 2846,"col": 4,"docs": " Another version of this product is already installed. Installation of this version cannot continue. To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel.\n"},{"file": 50,"line": 487,"col": 4,"docs": " The signal being posted is not correct.\n"},{"file": 50,"line": 601,"col": 4,"docs": " The volume is too fragmented to complete this operation.\n"},{"file": 50,"line": 1777,"col": 4,"docs": " No ID address mark was found on the floppy disk.\n"},{"file": 50,"line": 2390,"col": 4,"docs": " A specified authentication package is unknown.\n"},{"file": 50,"line": 2849,"col": 4,"docs": " Invalid command line argument. Consult the Windows Installer SDK for detailed command line help.\n"},{"file": 50,"line": 1243,"col": 4,"docs": " The specified registry key is referenced by a predefined handle.\n"},{"file": 50,"line": 2552,"col": 4,"docs": " Thread does not have a clipboard open.\n"},{"file": 50,"line": 661,"col": 4,"docs": " The target device has insufficient resources to complete the operation.\n"},{"file": 50,"line": 1378,"col": 4,"docs": " The specified process is not part of a job.\n"},{"file": 50,"line": 2062,"col": 4,"docs": " No more local devices.\n"},{"file": 50,"line": 328,"col": 4,"docs": " The system tried to SUBST a drive to a directory on a joined drive.\n"},{"file": 50,"line": 637,"col": 4,"docs": " The physical resources of this disk have been exhausted.\n"},{"file": 50,"line": 1375,"col": 4,"docs": " A process being terminated has no threads to terminate.\n"},{"file": 50,"line": 2726,"col": 4,"docs": " The specified task name is invalid.\n"},{"file": 50,"line": 2252,"col": 4,"docs": " The specified account does not exist.\n"},{"file": 50,"line": 511,"col": 4,"docs": " This file is checked out or locked for editing by another user.\n"},{"file": 50,"line": 409,"col": 4,"docs": " The file system does not support atomic changes to the lock type.\n"},{"file": 50,"line": 3323,"col": 4,"docs": " The referenced account is currently locked out and may not be logged on to.\n"},{"file": 50,"line": 1426,"col": 4,"docs": " The implementation is not capable of performing the request.\n"},{"file": 50,"line": 382,"col": 4,"docs": " The address for the thread ID is not correct.\n"},{"file": 51,"line": 23,"col": 4,"fields": [7363]},{"file": 51,"line": 57,"col": 4,"fields": [7364,7365,7366,7367]},{"file": 51,"line": 10,"col": 4,"fields": [7368,7369,7370,7371,7372,7373,7374,7375,7376,7377,7378]},{"file": 51,"line": 51,"col": 4,"fields": [7379,7380,7381,7382]},{"file": 51,"line": 30,"col": 4,"fields": [7383]},{"file": 51,"line": 2,"col": 4,"fields": [7384,7385,7386,7387]},{"file": 51,"line": 24,"col": 4,"fields": [7388,7389,7390,7391]},{"file": 51,"line": 32,"col": 4,"fields": [7392,7393,7394,7395,7396,7397,7398,7399,7400,7401,7402]},{"file": 51,"line": 3,"col": 4,"fields": [7403,7404,7405,7406,7407]},{"file": 51,"line": 45,"col": 4,"fields": [7408,7409,7410,7411]},{"file": 52,"line": 43,"col": 4,"fields": [7412,7413,7414,7415]},{"file": 52,"line": 196,"col": 4,"fields": [7416,7417,7418,7419,7420]},{"file": 52,"line": 116,"col": 4,"fields": [7421]},{"file": 52,"line": 7,"col": 4,"fields": [7422]},{"file": 52,"line": 72,"col": 4,"fields": []},{"file": 52,"line": 131,"col": 4,"fields": [7423,7424,7425]},{"file": 52,"line": 213,"col": 4,"fields": [7426]},{"file": 52,"line": 76,"col": 4,"fields": [7427,7428]},{"file": 52,"line": 182,"col": 4,"fields": [7429,7430,7431]},{"file": 52,"line": 194,"col": 4,"fields": [7432,7433]},{"file": 52,"line": 184,"col": 4,"fields": [7434]},{"file": 52,"line": 63,"col": 4,"fields": [7435,7436]},{"file": 52,"line": 53,"col": 4,"fields": [7437,7438]},{"file": 52,"line": 100,"col": 4,"fields": [7439,7440,7441,7442]},{"file": 52,"line": 65,"col": 4,"fields": [7443,7444]},{"file": 52,"line": 130,"col": 4,"fields": [7445,7446,7447,7448]},{"file": 52,"line": 212,"col": 4,"fields": [7449]},{"file": 52,"line": 2,"col": 4,"fields": [7450,7451]},{"file": 52,"line": 41,"col": 4,"fields": [7452,7453,7454]},{"file": 52,"line": 133,"col": 4,"fields": [7455,7456,7457]},{"file": 52,"line": 112,"col": 4,"fields": [7458]},{"file": 52,"line": 51,"col": 4,"fields": [7459]},{"file": 52,"line": 156,"col": 4,"fields": [7460,7461,7462,7463,7464]},{"file": 52,"line": 3,"col": 4,"fields": [7465]},{"file": 52,"line": 67,"col": 4,"fields": [7466,7467]},{"file": 52,"line": 190,"col": 4,"fields": []},{"file": 52,"line": 21,"col": 4,"fields": [7468,7469,7470,7471]},{"file": 52,"line": 124,"col": 4,"fields": [7472,7473,7474]},{"file": 52,"line": 204,"col": 4,"fields": [7475,7476,7477,7478,7479]},{"file": 52,"line": 115,"col": 4,"fields": [7480,7481,7482]},{"file": 52,"line": 164,"col": 4,"fields": [7483]},{"file": 52,"line": 80,"col": 4,"fields": [7484]},{"file": 52,"line": 217,"col": 4,"fields": [7485,7486,7487,7488]},{"file": 52,"line": 57,"col": 4,"fields": [7489,7490,7491,7492,7493,7494,7495]},{"file": 52,"line": 186,"col": 4,"fields": []},{"file": 52,"line": 128,"col": 4,"fields": [7496,7497,7498]},{"file": 52,"line": 84,"col": 4,"fields": [7499]},{"file": 52,"line": 210,"col": 4,"fields": [7500]},{"file": 52,"line": 59,"col": 4,"fields": [7501]},{"file": 52,"line": 143,"col": 4,"fields": [7502]},{"file": 52,"line": 82,"col": 4,"fields": [7503,7504,7505]},{"file": 52,"line": 107,"col": 4,"fields": [7506,7507,7508,7509]},{"file": 52,"line": 69,"col": 4,"fields": []},{"file": 52,"line": 119,"col": 4,"fields": [7510,7511]},{"file": 52,"line": 45,"col": 4,"fields": [7512,7513,7514,7515,7516,7517]},{"file": 52,"line": 55,"col": 4,"fields": [7518,7519]},{"file": 52,"line": 109,"col": 4,"fields": []},{"file": 52,"line": 120,"col": 4,"fields": [7520,7521,7522]},{"file": 52,"line": 188,"col": 4,"fields": [7523,7524]},{"file": 52,"line": 117,"col": 4,"fields": [7525,7526,7527,7528]},{"file": 52,"line": 141,"col": 4,"fields": [7529]},{"file": 52,"line": 139,"col": 4,"fields": [7530,7531,7532,7533]},{"file": 52,"line": 70,"col": 4,"fields": []},{"file": 52,"line": 206,"col": 4,"fields": [7534]},{"file": 52,"line": 145,"col": 4,"fields": [7535,7536,7537,7538,7539,7540,7541,7542]},{"file": 52,"line": 5,"col": 4,"fields": [7543,7544]},{"file": 52,"line": 54,"col": 4,"fields": [7545]},{"file": 52,"line": 9,"col": 4,"fields": [7546,7547]},{"file": 52,"line": 93,"col": 4,"fields": [7548,7549,7550,7551]},{"file": 52,"line": 166,"col": 4,"fields": [7552,7553]},{"file": 52,"line": 192,"col": 4,"fields": [7554]},{"file": 52,"line": 208,"col": 4,"fields": [7555,7556]},{"file": 52,"line": 118,"col": 4,"fields": [7557,7558,7559]},{"file": 52,"line": 86,"col": 4,"fields": []},{"file": 52,"line": 126,"col": 4,"fields": [7560,7561,7562]},{"file": 52,"line": 214,"col": 4,"fields": [7563]},{"file": 52,"line": 168,"col": 4,"fields": [7564,7565,7566,7567]},{"file": 52,"line": 215,"col": 4,"fields": [7568]},{"file": 52,"line": 110,"col": 4,"fields": [7569,7570,7571,7572,7573]},{"file": 52,"line": 122,"col": 4,"fields": [7574]},{"file": 52,"line": 113,"col": 4,"fields": [7575]},{"file": 52,"line": 61,"col": 4,"fields": []},{"file": 52,"line": 47,"col": 4,"fields": [7576]},{"file": 52,"line": 74,"col": 4,"fields": [7577,7578,7579]},{"file": 52,"line": 175,"col": 4,"fields": [7580,7581,7582,7583]},{"file": 52,"line": 11,"col": 4,"fields": [7584,7585,7586,7587,7588,7589,7590]},{"file": 52,"line": 78,"col": 4,"fields": [7591,7592]},{"file": 52,"line": 88,"col": 4,"fields": [7593,7594]},{"file": 52,"line": 49,"col": 4,"fields": [7595,7596,7597,7598,7599,7600,7601]},{"file": 52,"line": 28,"col": 4,"fields": [7602,7603,7604,7605,7606,7607,7608,7609,7610,7611]},{"file": 15,"line": 271,"col": 4},{"file": 15,"line": 272,"col": 4},{"file": 15,"line": 273,"col": 4},{"file": 15,"line": 274,"col": 4},{"file": 15,"line": 275,"col": 4},{"file": 15,"line": 276,"col": 4},{"file": 15,"line": 278,"col": 4,"docs": " This error occurs when no global event loop is configured,\n and reading from the file descriptor would block.\n"},{"file": 15,"line": 2766,"col": 4,"docs": " The Operating System returned an undocumented error code.\n This error is in theory not possible, but it would be better\n to handle this error than to invoke undefined behavior.\n"},{"file": 15,"line": 2405,"col": 28},{"file": 15,"line": 430,"col": 4},{"file": 15,"line": 431,"col": 4},{"file": 15,"line": 432,"col": 4},{"file": 15,"line": 433,"col": 4},{"file": 15,"line": 434,"col": 4},{"file": 15,"line": 435,"col": 4},{"file": 15,"line": 436,"col": 4},{"file": 15,"line": 437,"col": 4},{"file": 15,"line": 439,"col": 4,"docs": " This error occurs when no global event loop is configured,\n and reading from the file descriptor would block.\n"},{"file": 13,"line": 16,"col": 28},{"file": 0,"line": 205,"col": 28},{"file": 0,"line": 201,"col": 28},{"file": 0,"line": 336,"col": 28},{"file": 45,"line": 24,"col": 4},{"file": 45,"line": 25,"col": 4},{"file": 45,"line": 27,"col": 4,"docs": " When any of the path components can not be found or the file component can not\n be found. Some operating systems distinguish between path components not found and\n file components not found, but they are collapsed into FileNotFound to gain\n consistency across operating systems.\n"},{"file": 45,"line": 33,"col": 4},{"file": 45,"line": 34,"col": 4},{"file": 45,"line": 35,"col": 4},{"file": 45,"line": 37,"col": 4,"docs": " On Windows, file paths must be valid Unicode.\n"},{"file": 45,"line": 40,"col": 4,"docs": " On Windows, file paths cannot contain these characters:\n '/', '*', '?', '\"', '<', '>', '|'\n"},{"file": 45,"line": 44,"col": 4},{"file": 15,"line": 614,"col": 4},{"file": 15,"line": 615,"col": 4},{"file": 15,"line": 616,"col": 4},{"file": 15,"line": 617,"col": 4},{"file": 15,"line": 623,"col": 4,"docs": " Insufficient kernel memory was available, or\n the named file is a FIFO and per-user hard limit on\n memory allocation for pipes has been reached.\n"},{"file": 15,"line": 628,"col": 4,"docs": " The file is too large to be opened. This error is unreachable\n for 64-bit targets, as well as when opening directories.\n"},{"file": 15,"line": 632,"col": 4,"docs": " The path refers to directory but the `O_DIRECTORY` flag was not provided.\n"},{"file": 15,"line": 635,"col": 4,"docs": " A new path cannot be created because the device has no room for the new file.\n This error is only reachable when the `O_CREAT` flag is provided.\n"},{"file": 15,"line": 639,"col": 4,"docs": " A component used as a directory in the path was not, in fact, a directory, or\n `O_DIRECTORY` was specified and the path was not a directory.\n"},{"file": 15,"line": 645,"col": 4},{"file": 15,"line": 2008,"col": 29},{"file": 23,"line": 695,"col": 24},{"file": 16,"line": 935,"col": 20},{"file": 16,"line": 922,"col": 20},{"file": 16,"line": 881,"col": 20},{"file": 16,"line": 879,"col": 20},{"file": 23,"line": 572,"col": 24},{"file": 23,"line": 558,"col": 36},{"file": 23,"line": 516,"col": 24},{"file": 23,"line": 503,"col": 24},{"file": 11,"line": 59,"col": 48},{"file": 15,"line": 909,"col": 4},{"file": 24,"line": 64,"col": 24},{"file": 24,"line": 131,"col": 28},{"file": 24,"line": 88,"col": 32},{"file": 24,"line": 74,"col": 24},{"file": 15,"line": 1402,"col": 4},{"file": 15,"line": 2359,"col": 4},{"file": 15,"line": 613,"col": 4},{"file": 15,"line": 618,"col": 4},{"file": 15,"line": 620,"col": 4,"docs": " The path exceeded `MAX_PATH_BYTES` bytes.\n"},{"file": 15,"line": 643,"col": 4,"docs": " The path already exists and the `O_CREAT` and `O_EXCL` flags were provided.\n"},{"file": 15,"line": 908,"col": 4},{"file": 16,"line": 1201,"col": 44},{"file": 28,"line": 42,"col": 68},{"file": 15,"line": 1401,"col": 4},{"file": 15,"line": 1403,"col": 4},{"file": 15,"line": 1404,"col": 4},{"file": 15,"line": 1405,"col": 4},{"file": 15,"line": 1406,"col": 4},{"file": 15,"line": 1407,"col": 4},{"file": 45,"line": 305,"col": 4},{"file": 45,"line": 306,"col": 4},{"file": 19,"line": 79,"col": 4},{"file": 19,"line": 80,"col": 4},{"file": 19,"line": 99,"col": 4},{"file": 19,"line": 123,"col": 4},{"file": 45,"line": 537,"col": 35},{"file": 30,"line": 121,"col": 4},{"file": 30,"line": 122,"col": 4},{"file": 30,"line": 124,"col": 4,"docs": " See https://github.com/ziglang/zig/issues/1774\n"},{"file": 45,"line": 609,"col": 47},{"file": 14,"line": 314,"col": 48},{"file": 45,"line": 595,"col": 36},{"file": 45,"line": 573,"col": 37},{"file": 45,"line": 456,"col": 38},{"file": 19,"line": 255,"col": 50},{"file": 19,"line": 257,"col": 62},{"file": 19,"line": 261,"col": 24},{"file": 19,"line": 13,"col": 16},{"file": 19,"line": 46,"col": 57},{"file": 19,"line": 97,"col": 4},{"file": 19,"line": 98,"col": 4},{"file": 19,"line": 121,"col": 4},{"file": 19,"line": 122,"col": 4},{"file": 14,"line": 718,"col": 45},{"file": 45,"line": 630,"col": 4},{"file": 45,"line": 631,"col": 4},{"file": 45,"line": 259,"col": 32},{"file": 19,"line": 24,"col": 16},{"file": 45,"line": 280,"col": 4},{"file": 45,"line": 281,"col": 4},{"file": 45,"line": 282,"col": 4},{"file": 45,"line": 283,"col": 4},{"file": 15,"line": 3175,"col": 4,"docs": " The system is not configured to allow yielding\n"},{"file": 29,"line": 111,"col": 24},{"file": 21,"line": 1109,"col": 4,"docs": " As much as possible was written to the buffer, but it was too small to fit all the printed bytes.\n"},{"file": 15,"line": 2360,"col": 4},{"file": 15,"line": 2361,"col": 4},{"file": 7,"line": 358,"col": 21,"name": "msg"},{"file": 7,"line": 358,"col": 38,"name": "error_return_trace"},{"file": 16,"line": 222,"col": 18,"name": "trace"},{"file": 16,"line": 222,"col": 53,"name": "first_trace_addr"},{"file": 16,"line": 222,"col": 79,"name": "format","comptime": true},{"file": 16,"line": 222,"col": 108,"name": "args","varArgs": true},{"file": 16,"line": 209,"col": 14,"name": "ok"},{"file": 0,"line": 94,"col": 20,"name": "allocator"},{"file": 0,"line": 94,"col": 43,"name": "capacity_sparse"},{"file": 0,"line": 94,"col": 69,"name": "capacity_dense"},{"file": 28,"line": 593,"col": 24,"name": "buffer"},{"file": 28,"line": 619,"col": 23,"name": "allocator"},{"file": 28,"line": 619,"col": 46,"name": "old_mem"},{"file": 28,"line": 619,"col": 61,"name": "old_align"},{"file": 28,"line": 619,"col": 77,"name": "new_size"},{"file": 28,"line": 619,"col": 94,"name": "new_align"},{"file": 28,"line": 604,"col": 21,"name": "allocator"},{"file": 28,"line": 604,"col": 44,"name": "n"},{"file": 28,"line": 604,"col": 54,"name": "alignment"},{"file": 13,"line": 1507,"col": 20,"name": "addr"},{"file": 13,"line": 1507,"col": 33,"name": "alignment"},{"file": 14,"line": 255,"col": 11,"name": "x"},{"file": 14,"line": 255,"col": 19,"name": "y"},{"file": 28,"line": 630,"col": 22,"name": "allocator"},{"file": 28,"line": 630,"col": 45,"name": "old_mem"},{"file": 28,"line": 630,"col": 60,"name": "old_align"},{"file": 28,"line": 630,"col": 76,"name": "new_size"},{"file": 28,"line": 630,"col": 93,"name": "new_align"},{"file": 0,"line": 199,"col": 26,"name": "self"},{"file": 0,"line": 199,"col": 39,"name": "sparse"},{"file": 0,"line": 352,"col": 32,"name": "self"},{"file": 0,"line": 352,"col": 44,"name": "sparse"},{"file": 0,"line": 343,"col": 25,"name": "self"},{"file": 0,"line": 343,"col": 37,"name": "sparse"},{"file": 0,"line": 173,"col": 19,"name": "self"},{"file": 0,"line": 173,"col": 32,"name": "sparse"},{"file": 0,"line": 128,"col": 22,"name": "self"},{"file": 0,"line": 254,"col": 39,"name": "self"},{"file": 0,"line": 254,"col": 52,"name": "sparse"},{"file": 0,"line": 254,"col": 69,"name": "value"},{"file": 0,"line": 231,"col": 32,"name": "self"},{"file": 0,"line": 231,"col": 45,"name": "sparse"},{"file": 0,"line": 231,"col": 62,"name": "value"},{"file": 0,"line": 142,"col": 19,"name": "self"},{"file": 17,"line": 25,"col": 19,"name": "expected"},{"file": 17,"line": 25,"col": 34,"name": "actual"},{"file": 0,"line": 330,"col": 29,"name": "self"},{"file": 0,"line": 330,"col": 42,"name": "sparse"},{"file": 0,"line": 314,"col": 22,"name": "self"},{"file": 0,"line": 314,"col": 35,"name": "sparse"},{"file": 0,"line": 301,"col": 37,"name": "self"},{"file": 0,"line": 301,"col": 50,"name": "sparse"},{"file": 0,"line": 301,"col": 67,"name": "dense_old"},{"file": 0,"line": 301,"col": 87,"name": "dense_new"},{"file": 0,"line": 283,"col": 30,"name": "self"},{"file": 0,"line": 283,"col": 43,"name": "sparse"},{"file": 0,"line": 283,"col": 60,"name": "dense_old"},{"file": 0,"line": 283,"col": 80,"name": "dense_new"},{"file": 0,"line": 147,"col": 29,"name": "self"},{"file": 0,"line": 156,"col": 36,"name": "self"},{"file": 0,"line": 137,"col": 21,"name": "self"},{"file": 0,"line": 164,"col": 33,"name": "self"},{"file": 0,"line": 367,"col": 34,"name": "self"},{"file": 0,"line": 367,"col": 46,"name": "sparse"},{"file": 0,"line": 361,"col": 27,"name": "self"},{"file": 0,"line": 361,"col": 39,"name": "sparse"},{"file": 0,"line": 397,"col": 47,"name": "self"},{"file": 0,"line": 397,"col": 59,"name": "sparse"},{"file": 0,"line": 390,"col": 40,"name": "self"},{"file": 0,"line": 390,"col": 52,"name": "sparse"},{"file": 0,"line": 379,"col": 33,"name": "self"},{"file": 0,"line": 379,"col": 45,"name": "dense"},{"file": 0,"line": 373,"col": 26,"name": "self"},{"file": 0,"line": 373,"col": 38,"name": "dense"},{"file": 0,"line": 409,"col": 46,"name": "self"},{"file": 0,"line": 409,"col": 58,"name": "dense"},{"file": 0,"line": 403,"col": 39,"name": "self"},{"file": 0,"line": 403,"col": 51,"name": "dense"},{"file": 12,"line": 37,"col": 21,"name": "self"},{"file": 12,"line": 37,"col": 34,"name": "format","comptime": true},{"file": 12,"line": 37,"col": 63,"name": "args","varArgs": true},{"file": 16,"line": 183,"col": 22,"name": "stack_trace"},{"file": 16,"line": 91,"col": 29,"name": "start_addr"},{"file": 13,"line": 103,"col": 17,"name": "self"},{"file": 13,"line": 103,"col": 35,"name": "T","comptime": true},{"file": 13,"line": 103,"col": 53,"name": "n"},{"file": 13,"line": 1528,"col": 21,"name": "addr"},{"file": 13,"line": 1528,"col": 34,"name": "alignment"},{"file": 13,"line": 230,"col": 16,"name": "self"},{"file": 13,"line": 230,"col": 34,"name": "memory"},{"file": 16,"line": 213,"col": 13,"name": "format","comptime": true},{"file": 16,"line": 213,"col": 42,"name": "args","varArgs": true},{"file": 32,"line": 338,"col": 21,"name": "file"},{"file": 21,"line": 91,"col": 4,"name": "context"},{"file": 21,"line": 92,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 93,"col": 4,"name": "output"},{"file": 21,"line": 94,"col": 4,"name": "fmt","comptime": true},{"file": 21,"line": 95,"col": 4,"name": "args","varArgs": true},{"file": 23,"line": 662,"col": 12,"name": "self"},{"file": 23,"line": 662,"col": 30,"name": "buffer"},{"file": 16,"line": 836,"col": 25,"name": "allocator"},{"file": 16,"line": 848,"col": 28,"name": "allocator"},{"file": 13,"line": 79,"col": 18,"name": "self"},{"file": 13,"line": 79,"col": 36,"name": "T","comptime": true},{"file": 32,"line": 164,"col": 17,"name": "self"},{"file": 24,"line": 43,"col": 16,"name": "allocator"},{"file": 24,"line": 43,"col": 43,"name": "in_file"},{"file": 24,"line": 55,"col": 22,"name": "self"},{"file": 32,"line": 331,"col": 20,"name": "file"},{"file": 11,"line": 57,"col": 25,"name": "self"},{"file": 11,"line": 57,"col": 38,"name": "buf"},{"file": 11,"line": 45,"col": 24,"name": "self"},{"file": 11,"line": 45,"col": 37,"name": "buffer"},{"file": 13,"line": 349,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 349,"col": 29,"name": "a"},{"file": 13,"line": 349,"col": 43,"name": "b"},{"file": 32,"line": 205,"col": 18,"name": "self"},{"file": 32,"line": 205,"col": 30,"name": "offset"},{"file": 11,"line": 198,"col": 29,"name": "self"},{"file": 11,"line": 198,"col": 42,"name": "T","comptime": true},{"file": 13,"line": 537,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 537,"col": 39,"name": "bytes"},{"file": 24,"line": 94,"col": 26,"name": "self"},{"file": 24,"line": 94,"col": 39,"name": "file_stream"},{"file": 32,"line": 195,"col": 18,"name": "self"},{"file": 32,"line": 195,"col": 30,"name": "offset"},{"file": 24,"line": 122,"col": 22,"name": "self"},{"file": 24,"line": 122,"col": 35,"name": "buffer"},{"file": 24,"line": 184,"col": 24,"name": "self"},{"file": 4,"line": 198,"col": 30,"name": "self"},{"file": 4,"line": 198,"col": 43,"name": "new_capacity"},{"file": 4,"line": 85,"col": 24,"name": "self"},{"file": 13,"line": 148,"col": 19,"name": "self"},{"file": 13,"line": 148,"col": 37,"name": "old_mem"},{"file": 13,"line": 148,"col": 51,"name": "new_n"},{"file": 4,"line": 130,"col": 22,"name": "self"},{"file": 4,"line": 130,"col": 35,"name": "item"},{"file": 4,"line": 209,"col": 22,"name": "self"},{"file": 4,"line": 215,"col": 36,"name": "self"},{"file": 24,"line": 215,"col": 22,"name": "self"},{"file": 24,"line": 215,"col": 35,"name": "name","comptime": true},{"file": 11,"line": 231,"col": 26,"name": "self"},{"file": 11,"line": 231,"col": 39,"name": "T","comptime": true},{"file": 4,"line": 50,"col": 23,"name": "self"},{"file": 11,"line": 173,"col": 24,"name": "self"},{"file": 33,"line": 373,"col": 15,"name": "allocator"},{"file": 33,"line": 373,"col": 38,"name": "paths"},{"file": 33,"line": 389,"col": 22,"name": "allocator"},{"file": 33,"line": 389,"col": 45,"name": "paths"},{"file": 30,"line": 23,"col": 19,"name": "allocator"},{"file": 33,"line": 229,"col": 24,"name": "path"},{"file": 33,"line": 354,"col": 14,"name": "byte"},{"file": 33,"line": 331,"col": 26,"name": "kind"},{"file": 33,"line": 331,"col": 50,"name": "p1"},{"file": 33,"line": 331,"col": 66,"name": "p2"},{"file": 13,"line": 249,"col": 12,"name": "T","comptime": true},{"file": 13,"line": 249,"col": 30,"name": "dest"},{"file": 13,"line": 249,"col": 41,"name": "source"},{"file": 13,"line": 789,"col": 16,"name": "buffer"},{"file": 13,"line": 789,"col": 36,"name": "delimiter_bytes"},{"file": 13,"line": 916,"col": 16,"name": "self"},{"file": 15,"line": 913,"col": 14,"name": "out_buffer"},{"file": 13,"line": 381,"col": 12,"name": "allocator"},{"file": 13,"line": 381,"col": 35,"name": "T","comptime": true},{"file": 13,"line": 381,"col": 53,"name": "m"},{"file": 13,"line": 190,"col": 18,"name": "self"},{"file": 13,"line": 190,"col": 36,"name": "old_mem"},{"file": 13,"line": 190,"col": 50,"name": "new_n"},{"file": 23,"line": 470,"col": 20,"name": "self"},{"file": 23,"line": 470,"col": 32,"name": "coff_ptr"},{"file": 23,"line": 470,"col": 54,"name": "file_name"},{"file": 32,"line": 28,"col": 20,"name": "path"},{"file": 23,"line": 495,"col": 16,"name": "self"},{"file": 23,"line": 495,"col": 28,"name": "allocator"},{"file": 23,"line": 495,"col": 55,"name": "file"},{"file": 32,"line": 215,"col": 21,"name": "self"},{"file": 23,"line": 576,"col": 22,"name": "size"},{"file": 23,"line": 576,"col": 33,"name": "block_size"},{"file": 23,"line": 639,"col": 12,"name": "block_size"},{"file": 23,"line": 639,"col": 29,"name": "file"},{"file": 23,"line": 639,"col": 41,"name": "blocks"},{"file": 11,"line": 31,"col": 20,"name": "self"},{"file": 11,"line": 31,"col": 33,"name": "buffer"},{"file": 23,"line": 484,"col": 21,"name": "self"},{"file": 23,"line": 484,"col": 33,"name": "stream"},{"file": 16,"line": 893,"col": 23,"name": "cap"},{"file": 16,"line": 1002,"col": 23,"name": "stream"},{"file": 16,"line": 1002,"col": 36,"name": "allocator"},{"file": 4,"line": 35,"col": 20,"name": "allocator"},{"file": 4,"line": 101,"col": 28,"name": "self"},{"file": 13,"line": 368,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 368,"col": 33,"name": "ptr"},{"file": 23,"line": 478,"col": 25,"name": "self"},{"file": 23,"line": 478,"col": 37,"name": "id"},{"file": 23,"line": 651,"col": 26,"name": "self"},{"file": 23,"line": 651,"col": 44,"name": "allocator"},{"file": 23,"line": 692,"col": 14,"name": "self"},{"file": 23,"line": 692,"col": 32,"name": "len"},{"file": 16,"line": 257,"col": 4,"name": "stack_trace"},{"file": 16,"line": 258,"col": 4,"name": "out_stream"},{"file": 16,"line": 259,"col": 4,"name": "allocator"},{"file": 16,"line": 260,"col": 4,"name": "debug_info"},{"file": 16,"line": 261,"col": 4,"name": "tty_color"},{"file": 16,"line": 348,"col": 28,"name": "debug_info"},{"file": 16,"line": 348,"col": 52,"name": "out_stream"},{"file": 16,"line": 348,"col": 69,"name": "address"},{"file": 16,"line": 348,"col": 85,"name": "tty_color"},{"file": 16,"line": 358,"col": 31,"name": "di"},{"file": 16,"line": 358,"col": 47,"name": "out_stream"},{"file": 16,"line": 358,"col": 64,"name": "relocated_address"},{"file": 16,"line": 358,"col": 90,"name": "tty_color"},{"file": 16,"line": 569,"col": 15,"name": "tty_color"},{"file": 16,"line": 628,"col": 18,"name": "di"},{"file": 16,"line": 628,"col": 34,"name": "mod"},{"file": 33,"line": 848,"col": 16,"name": "path"},{"file": 13,"line": 364,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 364,"col": 38,"name": "ptr"},{"file": 23,"line": 698,"col": 14,"name": "self"},{"file": 23,"line": 698,"col": 32,"name": "len"},{"file": 16,"line": 1173,"col": 26,"name": "out_stream"},{"file": 16,"line": 1173,"col": 43,"name": "line_info"},{"file": 32,"line": 313,"col": 16,"name": "self"},{"file": 32,"line": 313,"col": 28,"name": "buffer"},{"file": 12,"line": 41,"col": 25,"name": "self"},{"file": 12,"line": 41,"col": 38,"name": "byte"},{"file": 12,"line": 25,"col": 21,"name": "self"},{"file": 12,"line": 25,"col": 34,"name": "bytes"},{"file": 16,"line": 316,"col": 30,"name": "out_stream"},{"file": 16,"line": 316,"col": 47,"name": "debug_info"},{"file": 16,"line": 316,"col": 71,"name": "tty_color"},{"file": 16,"line": 316,"col": 88,"name": "start_addr"},{"file": 16,"line": 327,"col": 4,"name": "out_stream"},{"file": 16,"line": 328,"col": 4,"name": "debug_info"},{"file": 16,"line": 329,"col": 4,"name": "tty_color"},{"file": 16,"line": 330,"col": 4,"name": "start_addr"},{"file": 13,"line": 108,"col": 8,"name": "self"},{"file": 13,"line": 109,"col": 8,"name": "T","comptime": true},{"file": 13,"line": 111,"col": 8,"docs": " null means naturally aligned\n","name": "alignment","comptime": true},{"file": 13,"line": 112,"col": 8,"name": "n"},{"file": 32,"line": 139,"col": 22,"name": "handle"},{"file": 32,"line": 379,"col": 19,"name": "out_stream"},{"file": 32,"line": 379,"col": 40,"name": "bytes"},{"file": 21,"line": 319,"col": 4,"name": "value"},{"file": 21,"line": 320,"col": 4,"name": "fmt","comptime": true},{"file": 21,"line": 321,"col": 4,"name": "options"},{"file": 21,"line": 322,"col": 4,"name": "context"},{"file": 21,"line": 323,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 324,"col": 4,"name": "output"},{"file": 21,"line": 325,"col": 4,"name": "max_depth"},{"file": 28,"line": 346,"col": 16,"name": "child_allocator"},{"file": 28,"line": 169,"col": 15,"name": "allocator"},{"file": 28,"line": 169,"col": 38,"name": "old_mem_unaligned"},{"file": 28,"line": 169,"col": 63,"name": "old_align"},{"file": 28,"line": 169,"col": 79,"name": "new_size"},{"file": 28,"line": 169,"col": 96,"name": "new_align"},{"file": 28,"line": 42,"col": 13,"name": "allocator"},{"file": 28,"line": 42,"col": 36,"name": "n"},{"file": 28,"line": 42,"col": 46,"name": "alignment"},{"file": 28,"line": 129,"col": 14,"name": "allocator"},{"file": 28,"line": 129,"col": 37,"name": "old_mem_unaligned"},{"file": 28,"line": 129,"col": 62,"name": "old_align"},{"file": 28,"line": 129,"col": 78,"name": "new_size"},{"file": 28,"line": 129,"col": 95,"name": "new_align"},{"file": 45,"line": 605,"col": 19,"name": "lpAddress"},{"file": 45,"line": 605,"col": 39,"name": "dwSize"},{"file": 45,"line": 605,"col": 54,"name": "dwFreeType"},{"file": 27,"line": 1216,"col": 20,"name": "out_buffer"},{"file": 32,"line": 49,"col": 21,"name": "path_w"},{"file": 15,"line": 88,"col": 13,"name": "fd"},{"file": 32,"line": 365,"col": 18,"name": "in_stream"},{"file": 32,"line": 365,"col": 38,"name": "buffer"},{"file": 15,"line": 2408,"col": 17,"name": "fd"},{"file": 15,"line": 2408,"col": 27,"name": "offset"},{"file": 15,"line": 2437,"col": 17,"name": "fd"},{"file": 15,"line": 2437,"col": 27,"name": "offset"},{"file": 13,"line": 160,"col": 8,"name": "self"},{"file": 13,"line": 161,"col": 8,"name": "old_mem"},{"file": 13,"line": 162,"col": 8,"name": "new_alignment","comptime": true},{"file": 13,"line": 163,"col": 8,"name": "new_n"},{"file": 4,"line": 79,"col": 21,"name": "self"},{"file": 33,"line": 157,"col": 25,"name": "path"},{"file": 13,"line": 892,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 892,"col": 36,"name": "haystack"},{"file": 13,"line": 892,"col": 57,"name": "needle"},{"file": 33,"line": 361,"col": 22,"name": "s1"},{"file": 33,"line": 361,"col": 38,"name": "s2"},{"file": 13,"line": 939,"col": 19,"name": "self"},{"file": 13,"line": 939,"col": 40,"name": "byte"},{"file": 45,"line": 310,"col": 27,"name": "buffer"},{"file": 13,"line": 202,"col": 8,"name": "self"},{"file": 13,"line": 203,"col": 8,"name": "old_mem"},{"file": 13,"line": 204,"col": 8,"name": "new_alignment","comptime": true},{"file": 13,"line": 205,"col": 8,"name": "new_n"},{"file": 45,"line": 820,"col": 28,"name": "s"},{"file": 45,"line": 824,"col": 36,"name": "s"},{"file": 45,"line": 824,"col": 51,"name": "suffix","comptime": true},{"file": 33,"line": 130,"col": 18,"name": "path"},{"file": 19,"line": 564,"col": 21,"name": "utf16le"},{"file": 19,"line": 564,"col": 37,"name": "utf8"},{"file": 19,"line": 68,"col": 18,"name": "bytes"},{"file": 45,"line": 539,"col": 21,"name": "hFile"},{"file": 23,"line": 716,"col": 14,"name": "in_stream"},{"file": 23,"line": 716,"col": 34,"name": "buffer"},{"file": 13,"line": 358,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 358,"col": 29,"name": "ptr"},{"file": 28,"line": 429,"col": 16,"name": "buffer"},{"file": 30,"line": 130,"col": 22,"name": "allocator"},{"file": 30,"line": 130,"col": 49,"name": "key"},{"file": 32,"line": 170,"col": 17,"name": "self"},{"file": 32,"line": 175,"col": 35,"name": "self"},{"file": 32,"line": 319,"col": 17,"name": "self"},{"file": 32,"line": 319,"col": 29,"name": "bytes"},{"file": 45,"line": 611,"col": 31,"name": "hConsoleOutput"},{"file": 45,"line": 611,"col": 55,"name": "wAttributes"},{"file": 33,"line": 877,"col": 23,"name": "path"},{"file": 15,"line": 287,"col": 12,"name": "fd"},{"file": 15,"line": 287,"col": 22,"name": "buf"},{"file": 14,"line": 314,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 314,"col": 29,"name": "a"},{"file": 14,"line": 314,"col": 35,"name": "b"},{"file": 21,"line": 552,"col": 4,"name": "bytes"},{"file": 21,"line": 553,"col": 4,"name": "fmt","comptime": true},{"file": 21,"line": 554,"col": 4,"name": "options"},{"file": 21,"line": 555,"col": 4,"name": "context"},{"file": 21,"line": 556,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 557,"col": 4,"name": "output"},{"file": 28,"line": 408,"col": 15,"name": "allocator"},{"file": 28,"line": 408,"col": 38,"name": "old_mem"},{"file": 28,"line": 408,"col": 53,"name": "old_align"},{"file": 28,"line": 408,"col": 69,"name": "new_size"},{"file": 28,"line": 408,"col": 86,"name": "new_align"},{"file": 28,"line": 388,"col": 13,"name": "allocator"},{"file": 28,"line": 388,"col": 36,"name": "n"},{"file": 28,"line": 388,"col": 46,"name": "alignment"},{"file": 28,"line": 368,"col": 18,"name": "self"},{"file": 28,"line": 368,"col": 41,"name": "prev_len"},{"file": 28,"line": 368,"col": 58,"name": "minimum_size"},{"file": 5,"line": 77,"col": 23,"name": "list"},{"file": 5,"line": 77,"col": 36,"name": "new_node"},{"file": 28,"line": 419,"col": 14,"name": "allocator"},{"file": 28,"line": 419,"col": 37,"name": "old_mem"},{"file": 28,"line": 419,"col": 52,"name": "old_align"},{"file": 28,"line": 419,"col": 68,"name": "new_size"},{"file": 28,"line": 419,"col": 85,"name": "new_align"},{"file": 45,"line": 597,"col": 20,"name": "addr"},{"file": 45,"line": 597,"col": 35,"name": "size"},{"file": 45,"line": 597,"col": 48,"name": "alloc_type"},{"file": 45,"line": 597,"col": 67,"name": "flProtect"},{"file": 45,"line": 575,"col": 26,"name": "hModule"},{"file": 45,"line": 575,"col": 45,"name": "buf_ptr"},{"file": 45,"line": 575,"col": 62,"name": "buf_len"},{"file": 45,"line": 61,"col": 4,"name": "file_path_w"},{"file": 45,"line": 62,"col": 4,"name": "desired_access"},{"file": 45,"line": 63,"col": 4,"name": "share_mode"},{"file": 45,"line": 64,"col": 4,"name": "lpSecurityAttributes"},{"file": 45,"line": 65,"col": 4,"name": "creation_disposition"},{"file": 45,"line": 66,"col": 4,"name": "flags_and_attrs"},{"file": 45,"line": 67,"col": 4,"name": "hTemplateFile"},{"file": 45,"line": 251,"col": 19,"name": "hObject"},{"file": 45,"line": 459,"col": 30,"name": "handle"},{"file": 45,"line": 459,"col": 46,"name": "offset"},{"file": 45,"line": 474,"col": 32,"name": "handle"},{"file": 45,"line": 474,"col": 48,"name": "offset"},{"file": 45,"line": 857,"col": 23,"name": "err"},{"file": 19,"line": 241,"col": 16,"name": "s"},{"file": 19,"line": 248,"col": 25,"name": "it"},{"file": 19,"line": 8,"col": 35,"name": "c"},{"file": 19,"line": 32,"col": 18,"name": "c"},{"file": 19,"line": 32,"col": 26,"name": "out"},{"file": 19,"line": 82,"col": 19,"name": "bytes"},{"file": 19,"line": 101,"col": 19,"name": "bytes"},{"file": 19,"line": 125,"col": 19,"name": "bytes"},{"file": 28,"line": 455,"col": 15,"name": "allocator"},{"file": 28,"line": 455,"col": 38,"name": "old_mem"},{"file": 28,"line": 455,"col": 53,"name": "old_align"},{"file": 28,"line": 455,"col": 69,"name": "new_size"},{"file": 28,"line": 455,"col": 86,"name": "new_align"},{"file": 28,"line": 440,"col": 13,"name": "allocator"},{"file": 28,"line": 440,"col": 36,"name": "n"},{"file": 28,"line": 440,"col": 46,"name": "alignment"},{"file": 28,"line": 477,"col": 14,"name": "allocator"},{"file": 28,"line": 477,"col": 37,"name": "old_mem"},{"file": 28,"line": 477,"col": 52,"name": "old_align"},{"file": 28,"line": 477,"col": 68,"name": "new_size"},{"file": 28,"line": 477,"col": 85,"name": "new_align"},{"file": 19,"line": 546,"col": 29,"name": "allocator"},{"file": 19,"line": 546,"col": 56,"name": "utf8"},{"file": 19,"line": 178,"col": 16,"name": "s"},{"file": 19,"line": 148,"col": 25,"name": "s"},{"file": 19,"line": 186,"col": 25,"name": "s"},{"file": 19,"line": 202,"col": 20,"name": "s"},{"file": 19,"line": 224,"col": 25,"name": "it"},{"file": 14,"line": 718,"col": 12,"name": "T","comptime": true},{"file": 14,"line": 718,"col": 30,"name": "x"},{"file": 45,"line": 634,"col": 31,"name": "lpName"},{"file": 45,"line": 634,"col": 47,"name": "lpBuffer"},{"file": 45,"line": 634,"col": 65,"name": "nSize"},{"file": 19,"line": 467,"col": 26,"name": "allocator"},{"file": 19,"line": 467,"col": 53,"name": "utf16le"},{"file": 13,"line": 564,"col": 26,"name": "T","comptime": true},{"file": 13,"line": 564,"col": 44,"name": "bytes"},{"file": 4,"line": 184,"col": 22,"name": "self"},{"file": 4,"line": 184,"col": 35,"name": "new_len"},{"file": 15,"line": 1512,"col": 14,"name": "handle"},{"file": 15,"line": 1533,"col": 19,"name": "handle"},{"file": 15,"line": 449,"col": 13,"name": "fd"},{"file": 15,"line": 449,"col": 23,"name": "bytes"},{"file": 45,"line": 261,"col": 16,"name": "in_hFile"},{"file": 45,"line": 261,"col": 34,"name": "buffer"},{"file": 45,"line": 851,"col": 21,"name": "p"},{"file": 45,"line": 851,"col": 34,"name": "s"},{"file": 19,"line": 485,"col": 21,"name": "utf8"},{"file": 19,"line": 485,"col": 33,"name": "utf16le"},{"file": 16,"line": 48,"col": 12,"name": "fmt","comptime": true},{"file": 16,"line": 48,"col": 38,"name": "args","varArgs": true},{"file": 19,"line": 19,"col": 30,"name": "first_byte"},{"file": 19,"line": 214,"col": 30,"name": "it"},{"file": 13,"line": 465,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 465,"col": 33,"name": "haystack"},{"file": 13,"line": 465,"col": 54,"name": "needle"},{"file": 45,"line": 288,"col": 17,"name": "handle"},{"file": 45,"line": 288,"col": 33,"name": "bytes"},{"file": 21,"line": 471,"col": 4,"name": "value"},{"file": 21,"line": 472,"col": 4,"name": "fmt","comptime": true},{"file": 21,"line": 473,"col": 4,"name": "options"},{"file": 21,"line": 474,"col": 4,"name": "context"},{"file": 21,"line": 475,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 476,"col": 4,"name": "output"},{"file": 34,"line": 83,"col": 23,"name": "self"},{"file": 34,"line": 73,"col": 27,"name": "self"},{"file": 13,"line": 483,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 483,"col": 36,"name": "haystack"},{"file": 13,"line": 483,"col": 57,"name": "start_index"},{"file": 13,"line": 483,"col": 77,"name": "needle"},{"file": 21,"line": 493,"col": 4,"name": "value"},{"file": 21,"line": 494,"col": 4,"name": "fmt","comptime": true},{"file": 21,"line": 495,"col": 4,"name": "options"},{"file": 21,"line": 496,"col": 4,"name": "context"},{"file": 21,"line": 497,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 498,"col": 4,"name": "output"},{"file": 36,"line": 28,"col": 17,"name": "iterations"},{"file": 29,"line": 10,"col": 13,"name": "nanoseconds"},{"file": 35,"line": 77,"col": 16,"name": "self"},{"file": 35,"line": 77,"col": 38,"name": "ptr"},{"file": 35,"line": 77,"col": 55,"name": "expected"},{"file": 35,"line": 63,"col": 18,"name": "self"},{"file": 35,"line": 63,"col": 40,"name": "ptr"},{"file": 21,"line": 884,"col": 4,"name": "value"},{"file": 21,"line": 885,"col": 4,"name": "base"},{"file": 21,"line": 886,"col": 4,"name": "uppercase"},{"file": 21,"line": 887,"col": 4,"name": "options"},{"file": 21,"line": 888,"col": 4,"name": "context"},{"file": 21,"line": 889,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 890,"col": 4,"name": "output"},{"file": 36,"line": 49,"col": 21,"name": "self"},{"file": 21,"line": 937,"col": 4,"name": "value"},{"file": 21,"line": 938,"col": 4,"name": "base"},{"file": 21,"line": 939,"col": 4,"name": "uppercase"},{"file": 21,"line": 940,"col": 4,"name": "options"},{"file": 21,"line": 941,"col": 4,"name": "context"},{"file": 21,"line": 942,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 943,"col": 4,"name": "output"},{"file": 6,"line": 32,"col": 19,"name": "self"},{"file": 6,"line": 53,"col": 23,"name": "self"},{"file": 21,"line": 1087,"col": 15,"name": "digit"},{"file": 21,"line": 1087,"col": 26,"name": "uppercase"},{"file": 13,"line": 275,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 275,"col": 29,"name": "dest"},{"file": 13,"line": 275,"col": 40,"name": "value"},{"file": 21,"line": 906,"col": 4,"name": "value"},{"file": 21,"line": 907,"col": 4,"name": "base"},{"file": 21,"line": 908,"col": 4,"name": "uppercase"},{"file": 21,"line": 909,"col": 4,"name": "options"},{"file": 21,"line": 910,"col": 4,"name": "context"},{"file": 21,"line": 911,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 912,"col": 4,"name": "output"},{"file": 10,"line": 522,"col": 16,"name": "key"},{"file": 10,"line": 530,"col": 15,"name": "a"},{"file": 10,"line": 530,"col": 21,"name": "b"},{"file": 10,"line": 536,"col": 21,"name": "K","comptime": true},{"file": 10,"line": 538,"col": 16,"name": "key"},{"file": 37,"line": 136,"col": 16,"name": "seed"},{"file": 46,"line": 166,"col": 16,"name": "hasher"},{"file": 46,"line": 166,"col": 29,"name": "key"},{"file": 37,"line": 162,"col": 17,"name": "self"},{"file": 37,"line": 41,"col": 16,"name": "seed"},{"file": 46,"line": 75,"col": 12,"name": "hasher"},{"file": 46,"line": 75,"col": 25,"name": "key"},{"file": 46,"line": 75,"col": 35,"name": "strat","comptime": true},{"file": 37,"line": 73,"col": 17,"name": "self"},{"file": 37,"line": 73,"col": 41,"name": "b"},{"file": 37,"line": 144,"col": 18,"name": "self"},{"file": 37,"line": 144,"col": 33,"name": "b"},{"file": 13,"line": 1349,"col": 15,"name": "ptr"},{"file": 37,"line": 26,"col": 8,"name": "a"},{"file": 37,"line": 26,"col": 16,"name": "b"},{"file": 37,"line": 26,"col": 24,"name": "seed"},{"file": 37,"line": 11,"col": 14,"name": "bytes","comptime": true},{"file": 37,"line": 11,"col": 34,"name": "data"},{"file": 37,"line": 16,"col": 23,"name": "data"},{"file": 37,"line": 30,"col": 8,"name": "a"},{"file": 37,"line": 30,"col": 16,"name": "b"},{"file": 37,"line": 30,"col": 24,"name": "seed"},{"file": 37,"line": 20,"col": 7,"name": "a"},{"file": 37,"line": 20,"col": 15,"name": "b"},{"file": 37,"line": 62,"col": 18,"name": "self"},{"file": 37,"line": 62,"col": 42,"name": "b"},{"file": 14,"line": 944,"col": 15,"name": "T","comptime": true},{"file": 14,"line": 944,"col": 33,"name": "a"},{"file": 14,"line": 944,"col": 39,"name": "b"},{"file": 37,"line": 48,"col": 13,"name": "self"},{"file": 37,"line": 48,"col": 37,"name": "b"},{"file": 16,"line": 2441,"col": 35,"name": "info"},{"file": 38,"line": 99,"col": 17,"name": "self"},{"file": 38,"line": 99,"col": 34,"name": "name"},{"file": 38,"line": 99,"col": 52,"name": "estimated_total_items"},{"file": 38,"line": 57,"col": 21,"name": "self"},{"file": 38,"line": 57,"col": 34,"name": "name"},{"file": 38,"line": 57,"col": 52,"name": "estimated_total_items"},{"file": 38,"line": 90,"col": 24,"name": "self"},{"file": 38,"line": 125,"col": 19,"name": "self"},{"file": 38,"line": 74,"col": 19,"name": "self"},{"file": 38,"line": 176,"col": 15,"name": "self"},{"file": 38,"line": 176,"col": 32,"name": "format","comptime": true},{"file": 38,"line": 176,"col": 61,"name": "args","varArgs": true},{"file": 21,"line": 1112,"col": 16,"name": "buf"},{"file": 21,"line": 1112,"col": 27,"name": "fmt","comptime": true},{"file": 21,"line": 1112,"col": 53,"name": "args","varArgs": true},{"file": 38,"line": 186,"col": 16,"name": "self"},{"file": 38,"line": 186,"col": 33,"name": "end"},{"file": 38,"line": 186,"col": 46,"name": "format","comptime": true},{"file": 38,"line": 186,"col": 75,"name": "args","varArgs": true},{"file": 29,"line": 154,"col": 16,"name": "self"},{"file": 38,"line": 117,"col": 24,"name": "self"},{"file": 38,"line": 68,"col": 27,"name": "self"},{"file": 21,"line": 1099,"col": 17,"name": "context"},{"file": 21,"line": 1099,"col": 44,"name": "bytes"},{"file": 4,"line": 11,"col": 17,"name": "T","comptime": true},{"file": 5,"line": 14,"col": 24,"name": "T","comptime": true},{"file": 14,"line": 236,"col": 11,"name": "A","comptime": true},{"file": 14,"line": 236,"col": 29,"name": "B","comptime": true},{"file": 41,"line": 261,"col": 15,"name": "T","comptime": true},{"file": 41,"line": 118,"col": 21,"name": "T","comptime": true},{"file": 6,"line": 12,"col": 12,"name": "T","comptime": true},{"file": 4,"line": 15,"col": 24,"name": "T","comptime": true},{"file": 4,"line": 15,"col": 42,"name": "alignment","comptime": true},{"file": 14,"line": 306,"col": 11,"name": "x"},{"file": 14,"line": 306,"col": 19,"name": "y"},{"file": 41,"line": 322,"col": 18,"name": "T","comptime": true},{"file": 41,"line": 116,"col": 10,"name": "id","comptime": true},{"file": 8,"line": 9,"col": 13,"name": "T","comptime": true},{"file": 9,"line": 8,"col": 13,"name": "T","comptime": true},{"file": 10,"line": 32,"col": 15,"name": "K","comptime": true},{"file": 10,"line": 32,"col": 33,"name": "V","comptime": true},{"file": 10,"line": 32,"col": 51,"name": "hash","comptime": true},{"file": 10,"line": 32,"col": 83,"name": "eql","comptime": true},{"file": 10,"line": 520,"col": 24,"name": "K","comptime": true},{"file": 41,"line": 228,"col": 23,"name": "T","comptime": true},{"file": 26,"line": 102,"col": 13,"name": "T","comptime": true},{"file": 14,"line": 891,"col": 14,"name": "T","comptime": true},{"file": 14,"line": 884,"col": 14,"name": "T","comptime": true},{"file": 26,"line": 88,"col": 17,"name": "T","comptime": true},{"file": 11,"line": 14,"col": 16,"name": "ReadError","comptime": true},{"file": 5,"line": 192,"col": 17,"name": "T","comptime": true},{"file": 0,"line": 59,"col": 17,"name": "config","comptime": true},{"file": 12,"line": 13,"col": 17,"name": "WriteError","comptime": true},{"file": 10,"line": 528,"col": 23,"name": "K","comptime": true},{"file": 13,"line": 1330,"col": 21,"name": "P","comptime": true},{"file": 4,"line": 27,"col": 8,"docs": " Use toSlice instead of slicing this directly, because if you don't\n specify the end position of the slice, this will potentially give\n you uninitialized memory.\n","name": "items"},{"file": 4,"line": 28,"col": 8,"name": "len"},{"file": 4,"line": 29,"col": 8,"name": "allocator"},{"file": 24,"line": 257,"col": 4,"name": "header"},{"file": 16,"line": 30,"col": 4,"name": "mod_info"},{"file": 16,"line": 31,"col": 4,"name": "module_name"},{"file": 16,"line": 32,"col": 4,"name": "obj_file_name"},{"file": 16,"line": 34,"col": 4,"name": "populated"},{"file": 16,"line": 35,"col": 4,"name": "symbols"},{"file": 16,"line": 36,"col": 4,"name": "subsect_info"},{"file": 16,"line": 37,"col": 4,"name": "checksum_offset"},{"file": 23,"line": 41,"col": 4,"docs": " COFF Section index, 1-based\n","name": "Section"},{"file": 23,"line": 42,"col": 4,"name": "Padding1"},{"file": 23,"line": 43,"col": 4,"name": "Offset"},{"file": 23,"line": 44,"col": 4,"name": "Size"},{"file": 23,"line": 45,"col": 4,"name": "Characteristics"},{"file": 23,"line": 46,"col": 4,"name": "ModuleIndex"},{"file": 23,"line": 47,"col": 4,"name": "Padding2"},{"file": 23,"line": 48,"col": 4,"name": "DataCrc"},{"file": 23,"line": 49,"col": 4,"name": "RelocCrc"},{"file": 5,"line": 52,"col": 8,"name": "first"},{"file": 6,"line": 14,"col": 8,"name": "state"},{"file": 6,"line": 15,"col": 8,"name": "data"},{"file": 7,"line": 97,"col": 4,"name": "Type"},{"file": 7,"line": 98,"col": 4,"name": "Void"},{"file": 7,"line": 99,"col": 4,"name": "Bool"},{"file": 7,"line": 100,"col": 4,"name": "NoReturn"},{"file": 7,"line": 101,"col": 4,"name": "Int"},{"file": 7,"line": 102,"col": 4,"name": "Float"},{"file": 7,"line": 103,"col": 4,"name": "Pointer"},{"file": 7,"line": 104,"col": 4,"name": "Array"},{"file": 7,"line": 105,"col": 4,"name": "Struct"},{"file": 7,"line": 106,"col": 4,"name": "ComptimeFloat"},{"file": 7,"line": 107,"col": 4,"name": "ComptimeInt"},{"file": 7,"line": 108,"col": 4,"name": "Undefined"},{"file": 7,"line": 109,"col": 4,"name": "Null"},{"file": 7,"line": 110,"col": 4,"name": "Optional"},{"file": 7,"line": 111,"col": 4,"name": "ErrorUnion"},{"file": 7,"line": 112,"col": 4,"name": "ErrorSet"},{"file": 7,"line": 113,"col": 4,"name": "Enum"},{"file": 7,"line": 114,"col": 4,"name": "Union"},{"file": 7,"line": 115,"col": 4,"name": "Fn"},{"file": 7,"line": 116,"col": 4,"name": "BoundFn"},{"file": 7,"line": 117,"col": 4,"name": "ArgTuple"},{"file": 7,"line": 118,"col": 4,"name": "Opaque"},{"file": 7,"line": 119,"col": 4,"name": "Frame"},{"file": 7,"line": 120,"col": 4,"name": "AnyFrame"},{"file": 7,"line": 121,"col": 4,"name": "Vector"},{"file": 7,"line": 122,"col": 4,"name": "EnumLiteral"},{"file": 8,"line": 11,"col": 8,"name": "head"},{"file": 8,"line": 12,"col": 8,"name": "tail"},{"file": 8,"line": 13,"col": 8,"name": "mutex"},{"file": 9,"line": 10,"col": 8,"name": "root"},{"file": 9,"line": 11,"col": 8,"name": "lock"},{"file": 39,"line": 60,"col": 16,"name": "base"},{"file": 39,"line": 61,"col": 16,"name": "completion_key"},{"file": 10,"line": 34,"col": 8,"name": "entries"},{"file": 10,"line": 35,"col": 8,"name": "size"},{"file": 10,"line": 36,"col": 8,"name": "max_distance_from_start_index"},{"file": 10,"line": 37,"col": 8,"name": "allocator"},{"file": 10,"line": 40,"col": 8,"docs": " This is used to detect bugs where a hashtable is edited while an iterator is running.\n","name": "modification_count"},{"file": 16,"line": 1221,"col": 4,"name": "bytes"},{"file": 16,"line": 1222,"col": 4,"name": "sect_debug_info"},{"file": 16,"line": 1223,"col": 4,"name": "sect_debug_line"},{"file": 11,"line": 26,"col": 8,"docs": " Returns the number of bytes read. It may be less than buffer.len.\n If the number of bytes read is 0, it means end of stream.\n End of stream is not an error condition.\n","name": "readFn"},{"file": 5,"line": 211,"col": 8,"name": "first"},{"file": 5,"line": 212,"col": 8,"name": "last"},{"file": 5,"line": 213,"col": 8,"name": "len"},{"file": 0,"line": 72,"col": 8,"docs": " Allocator used for allocating, growing and freeing **dense_to_sparse**, **sparse_to_dense**, and **values**.\n","name": "allocator"},{"file": 0,"line": 75,"col": 8,"docs": " Mapping from dense indices to sparse handles.\n","name": "dense_to_sparse"},{"file": 0,"line": 78,"col": 8,"docs": " Mapping from sparse handles to dense indices (and values).\n","name": "sparse_to_dense"},{"file": 0,"line": 81,"col": 8,"docs": " Optional: A list of **ValueT** that is used with **InternalArrayOfStructs**.\n","name": "values"},{"file": 0,"line": 84,"col": 8,"docs": " Current amount of used handles.\n","name": "dense_count"},{"file": 0,"line": 87,"col": 8,"docs": " Amount of dense indices that can be stored.\n","name": "capacity_dense"},{"file": 0,"line": 90,"col": 8,"docs": " Amount of sparse handles can be used for lookups.\n","name": "capacity_sparse"},{"file": 0,"line": 36,"col": 4,"docs": " The type used for the sparse handle.\n","name": "SparseT"},{"file": 0,"line": 39,"col": 4,"docs": " The type used for dense indices.\n","name": "DenseT"},{"file": 0,"line": 42,"col": 4,"docs": " Optional: The type used for values when using **InternalArrayOfStructs**.\n","name": "ValueT"},{"file": 0,"line": 47,"col": 4,"docs": " If you only have a single array of structs - AOS - letting SparseSet handle it\n with **InternalArrayOfStructs** is convenient. If you want to manage the data\n yourself or if you're using SOA, use **ExternalStructOfArraysSupport**.\n","name": "value_layout"},{"file": 0,"line": 52,"col": 4,"docs": " Set to **ZeroInitialized** to make values created with add() be zero initialized.\n Only valid with **value_layout == .InternalArrayOfStructs**.\n Defaults to **Untouched**.\n","name": "value_init"},{"file": 0,"line": 55,"col": 4,"docs": " Whether or not the amount of dense indices (and values) can grow.\n","name": "allow_resize"},{"file": 12,"line": 23,"col": 8,"name": "writeFn"},{"file": 28,"line": 589,"col": 12,"name": "allocator"},{"file": 28,"line": 590,"col": 12,"name": "end_index"},{"file": 28,"line": 591,"col": 12,"name": "buffer"},{"file": 7,"line": 45,"col": 4,"name": "index"},{"file": 7,"line": 46,"col": 4,"name": "instruction_addresses"},{"file": 32,"line": 13,"col": 4,"docs": " The OS-specific file descriptor or file handle.\n","name": "handle"},{"file": 32,"line": 373,"col": 8,"name": "file"},{"file": 32,"line": 374,"col": 8,"name": "stream"},{"file": 24,"line": 33,"col": 4,"name": "in_file"},{"file": 24,"line": 34,"col": 4,"name": "allocator"},{"file": 24,"line": 36,"col": 4,"name": "coff_header"},{"file": 24,"line": 37,"col": 4,"name": "pe_header"},{"file": 24,"line": 38,"col": 4,"name": "sections"},{"file": 24,"line": 40,"col": 4,"name": "guid"},{"file": 24,"line": 41,"col": 4,"name": "age"},{"file": 32,"line": 359,"col": 8,"name": "file"},{"file": 32,"line": 360,"col": 8,"name": "stream"},{"file": 33,"line": 218,"col": 4,"name": "is_abs"},{"file": 33,"line": 219,"col": 4,"name": "kind"},{"file": 33,"line": 220,"col": 4,"name": "disk_designator"},{"file": 33,"line": 223,"col": 8,"name": "None"},{"file": 33,"line": 224,"col": 8,"name": "Drive"},{"file": 33,"line": 225,"col": 8,"name": "NetworkShare"},{"file": 13,"line": 911,"col": 4,"name": "buffer"},{"file": 13,"line": 912,"col": 4,"name": "delimiter_bytes"},{"file": 13,"line": 913,"col": 4,"name": "index"},{"file": 23,"line": 628,"col": 4,"name": "in_file"},{"file": 23,"line": 629,"col": 4,"name": "pos"},{"file": 23,"line": 630,"col": 4,"name": "blocks"},{"file": 23,"line": 631,"col": 4,"name": "block_size"},{"file": 23,"line": 634,"col": 4,"docs": " Implementation of InStream trait for Pdb.MsfStream\n","name": "stream"},{"file": 23,"line": 103,"col": 4,"name": "Pdb"},{"file": 23,"line": 104,"col": 4,"name": "Tpi"},{"file": 23,"line": 105,"col": 4,"name": "Dbi"},{"file": 23,"line": 106,"col": 4,"name": "Ipi"},{"file": 16,"line": 559,"col": 4,"name": "Red"},{"file": 16,"line": 560,"col": 4,"name": "Green"},{"file": 16,"line": 561,"col": 4,"name": "Cyan"},{"file": 16,"line": 562,"col": 4,"name": "White"},{"file": 16,"line": 563,"col": 4,"name": "Dim"},{"file": 16,"line": 564,"col": 4,"name": "Bold"},{"file": 16,"line": 565,"col": 4,"name": "Reset"},{"file": 16,"line": 1406,"col": 4,"name": "line"},{"file": 16,"line": 1407,"col": 4,"name": "column"},{"file": 16,"line": 1408,"col": 4,"name": "file_name"},{"file": 16,"line": 1409,"col": 4,"name": "allocator"},{"file": 21,"line": 19,"col": 4,"name": "precision"},{"file": 21,"line": 20,"col": 4,"name": "width"},{"file": 21,"line": 21,"col": 4,"name": "alignment"},{"file": 21,"line": 22,"col": 4,"name": "fill"},{"file": 28,"line": 338,"col": 4,"name": "allocator"},{"file": 28,"line": 340,"col": 4,"name": "child_allocator"},{"file": 28,"line": 341,"col": 4,"name": "buffer_list"},{"file": 28,"line": 342,"col": 4,"name": "end_index"},{"file": 28,"line": 425,"col": 4,"name": "allocator"},{"file": 28,"line": 426,"col": 4,"name": "end_index"},{"file": 28,"line": 427,"col": 4,"name": "buffer"},{"file": 19,"line": 238,"col": 4,"name": "bytes"},{"file": 19,"line": 239,"col": 4,"name": "i"},{"file": 19,"line": 176,"col": 4,"name": "bytes"},{"file": 19,"line": 211,"col": 4,"name": "bytes"},{"file": 19,"line": 212,"col": 4,"name": "i"},{"file": 34,"line": 41,"col": 8,"name": "state"},{"file": 34,"line": 42,"col": 8,"name": "parker"},{"file": 35,"line": 56,"col": 4,"name": "waiters"},{"file": 34,"line": 71,"col": 12,"name": "mutex"},{"file": 36,"line": 41,"col": 8,"name": "iteration"},{"file": 37,"line": 131,"col": 4,"name": "state"},{"file": 37,"line": 133,"col": 4,"name": "buf"},{"file": 37,"line": 134,"col": 4,"name": "buf_len"},{"file": 37,"line": 38,"col": 4,"name": "seed"},{"file": 37,"line": 39,"col": 4,"name": "msg_len"},{"file": 38,"line": 43,"col": 8,"name": "context"},{"file": 38,"line": 44,"col": 8,"name": "parent"},{"file": 38,"line": 45,"col": 8,"name": "completed_items"},{"file": 38,"line": 46,"col": 8,"name": "name"},{"file": 38,"line": 47,"col": 8,"name": "recently_updated_child"},{"file": 38,"line": 50,"col": 8,"docs": " This field may be updated freely.\n","name": "estimated_total_items"},{"file": 24,"line": 266,"col": 4,"name": "name"},{"file": 24,"line": 267,"col": 4,"name": "misc"},{"file": 24,"line": 268,"col": 4,"name": "virtual_address"},{"file": 24,"line": 269,"col": 4,"name": "size_of_raw_data"},{"file": 24,"line": 270,"col": 4,"name": "pointer_to_raw_data"},{"file": 24,"line": 271,"col": 4,"name": "pointer_to_relocations"},{"file": 24,"line": 272,"col": 4,"name": "pointer_to_line_numbers"},{"file": 24,"line": 273,"col": 4,"name": "number_of_relocations"},{"file": 24,"line": 274,"col": 4,"name": "number_of_line_numbers"},{"file": 24,"line": 275,"col": 4,"name": "characteristics"},{"file": 23,"line": 53,"col": 4,"name": "Unused1"},{"file": 23,"line": 54,"col": 4,"name": "SectionContr"},{"file": 23,"line": 55,"col": 4,"name": "Flags"},{"file": 23,"line": 56,"col": 4,"name": "ModuleSymStream"},{"file": 23,"line": 57,"col": 4,"name": "SymByteSize"},{"file": 23,"line": 58,"col": 4,"name": "C11ByteSize"},{"file": 23,"line": 59,"col": 4,"name": "C13ByteSize"},{"file": 23,"line": 60,"col": 4,"name": "SourceFileCount"},{"file": 23,"line": 61,"col": 4,"name": "Padding"},{"file": 23,"line": 62,"col": 4,"name": "Unused2"},{"file": 23,"line": 63,"col": 4,"name": "SourceFileNameIndex"},{"file": 23,"line": 64,"col": 4,"name": "PdbFilePathNameIndex"},{"file": 5,"line": 20,"col": 12,"name": "next"},{"file": 5,"line": 21,"col": 12,"name": "data"},{"file": 6,"line": 18,"col": 12,"name": "NotResolved"},{"file": 6,"line": 19,"col": 12,"name": "Resolving"},{"file": 6,"line": 20,"col": 12,"name": "Resolved"},{"file": 7,"line": 183,"col": 8,"name": "layout"},{"file": 7,"line": 184,"col": 8,"name": "fields"},{"file": 7,"line": 185,"col": 8,"name": "decls"},{"file": 7,"line": 160,"col": 8,"name": "len"},{"file": 7,"line": 161,"col": 8,"name": "child"},{"file": 7,"line": 197,"col": 8,"name": "error_set"},{"file": 7,"line": 198,"col": 8,"name": "payload"},{"file": 7,"line": 140,"col": 8,"name": "size"},{"file": 7,"line": 141,"col": 8,"name": "is_const"},{"file": 7,"line": 142,"col": 8,"name": "is_volatile"},{"file": 7,"line": 143,"col": 8,"name": "alignment"},{"file": 7,"line": 144,"col": 8,"name": "child"},{"file": 7,"line": 145,"col": 8,"name": "is_allowzero"},{"file": 7,"line": 215,"col": 8,"name": "name"},{"file": 7,"line": 216,"col": 8,"name": "value"},{"file": 7,"line": 167,"col": 8,"name": "Auto"},{"file": 7,"line": 168,"col": 8,"name": "Extern"},{"file": 7,"line": 169,"col": 8,"name": "Packed"},{"file": 7,"line": 290,"col": 8,"name": "name"},{"file": 7,"line": 291,"col": 8,"name": "is_pub"},{"file": 7,"line": 292,"col": 8,"name": "data"},{"file": 7,"line": 239,"col": 8,"name": "layout"},{"file": 7,"line": 240,"col": 8,"name": "tag_type"},{"file": 7,"line": 241,"col": 8,"name": "fields"},{"file": 7,"line": 242,"col": 8,"name": "decls"},{"file": 7,"line": 191,"col": 8,"name": "child"},{"file": 7,"line": 222,"col": 8,"name": "layout"},{"file": 7,"line": 223,"col": 8,"name": "tag_type"},{"file": 7,"line": 224,"col": 8,"name": "fields"},{"file": 7,"line": 225,"col": 8,"name": "decls"},{"file": 7,"line": 248,"col": 8,"name": "Unspecified"},{"file": 7,"line": 249,"col": 8,"name": "C"},{"file": 7,"line": 250,"col": 8,"name": "Cold"},{"file": 7,"line": 251,"col": 8,"name": "Naked"},{"file": 7,"line": 252,"col": 8,"name": "Stdcall"},{"file": 7,"line": 253,"col": 8,"name": "Async"},{"file": 7,"line": 283,"col": 8,"name": "len"},{"file": 7,"line": 284,"col": 8,"name": "child"},{"file": 7,"line": 134,"col": 8,"name": "bits"},{"file": 7,"line": 231,"col": 8,"name": "name"},{"file": 7,"line": 232,"col": 8,"name": "enum_field"},{"file": 7,"line": 233,"col": 8,"name": "field_type"},{"file": 7,"line": 175,"col": 8,"name": "name"},{"file": 7,"line": 176,"col": 8,"name": "offset"},{"file": 7,"line": 177,"col": 8,"name": "field_type"},{"file": 7,"line": 277,"col": 8,"name": "child"},{"file": 7,"line": 204,"col": 8,"name": "name"},{"file": 7,"line": 205,"col": 8,"name": "value"},{"file": 7,"line": 267,"col": 8,"name": "calling_convention"},{"file": 7,"line": 268,"col": 8,"name": "is_generic"},{"file": 7,"line": 269,"col": 8,"name": "is_var_args"},{"file": 7,"line": 270,"col": 8,"name": "return_type"},{"file": 7,"line": 271,"col": 8,"name": "args"},{"file": 7,"line": 259,"col": 8,"name": "is_generic"},{"file": 7,"line": 260,"col": 8,"name": "is_noalias"},{"file": 7,"line": 261,"col": 8,"name": "arg_type"},{"file": 7,"line": 127,"col": 8,"name": "is_signed"},{"file": 7,"line": 128,"col": 8,"name": "bits"},{"file": 5,"line": 198,"col": 12,"name": "prev"},{"file": 5,"line": 199,"col": 12,"name": "next"},{"file": 5,"line": 200,"col": 12,"name": "data"},{"file": 9,"line": 18,"col": 12,"name": "next"},{"file": 9,"line": 19,"col": 12,"name": "data"},{"file": 39,"line": 30,"col": 8,"name": "id"},{"file": 39,"line": 31,"col": 8,"name": "handle"},{"file": 39,"line": 32,"col": 8,"name": "overlapped"},{"file": 10,"line": 45,"col": 12,"name": "key"},{"file": 10,"line": 46,"col": 12,"name": "value"},{"file": 10,"line": 50,"col": 12,"name": "used"},{"file": 10,"line": 51,"col": 12,"name": "distance_from_start_index"},{"file": 10,"line": 52,"col": 12,"name": "kv"},{"file": 31,"line": 252,"col": 4,"name": "n_strx"},{"file": 31,"line": 253,"col": 4,"name": "n_type"},{"file": 31,"line": 254,"col": 4,"name": "n_sect"},{"file": 31,"line": 255,"col": 4,"name": "n_desc"},{"file": 31,"line": 256,"col": 4,"name": "n_value"},{"file": 0,"line": 20,"col": 4,"docs": " AOS style.\n","name": "InternalArrayOfStructs"},{"file": 0,"line": 23,"col": 4,"docs": " SOA style.\n","name": "ExternalStructOfArraysSupport"},{"file": 0,"line": 28,"col": 4,"docs": " New values added with add() will contain uninitialized/random memory.\n","name": "Untouched"},{"file": 0,"line": 31,"col": 4,"docs": " New values added with add() will be memset to zero.\n","name": "ZeroInitialized"},{"file": 0,"line": 12,"col": 4,"docs": " The fields **dense_to_sparse** and **values** will grow on **add()** and **addValue()**.\n","name": "ResizeAllowed"},{"file": 0,"line": 15,"col": 4,"docs": " Errors will be generated when adding more elements than **capacity_dense**.\n","name": "NoResize"},{"file": 13,"line": 39,"col": 4,"docs": " Realloc is used to modify the size or alignment of an existing allocation,\n as well as to provide the allocator with an opportunity to move an allocation\n to a better location.\n When the size/alignment is greater than the previous allocation, this function\n returns `error.OutOfMemory` when the requested new allocation could not be granted.\n When the size/alignment is less than or equal to the previous allocation,\n this function returns `error.OutOfMemory` when the allocator decides the client\n would be better off keeping the extra alignment/size. Clients will call\n `shrinkFn` when they require the allocator to track a new alignment/size,\n and so this function should only return success when the allocator considers\n the reallocation desirable from the allocator's perspective.\n As an example, `std.ArrayList` tracks a \"capacity\", and therefore can handle\n reallocation failure, even when `new_n` <= `old_mem.len`. A `FixedBufferAllocator`\n would always return `error.OutOfMemory` for `reallocFn` when the size/alignment\n is less than or equal to the old allocation, because it cannot reclaim the memory,\n and thus the `std.ArrayList` would be better off retaining its capacity.\n When `reallocFn` returns,\n `return_value[0..min(old_mem.len, new_byte_count)]` must be the same\n as `old_mem` was when `reallocFn` is called. The bytes of\n `return_value[old_mem.len..]` have undefined values.\n The returned slice must have its pointer aligned at least to `new_alignment` bytes.\n","name": "reallocFn"},{"file": 13,"line": 62,"col": 4,"docs": " This function deallocates memory. It must succeed.\n","name": "shrinkFn"},{"file": 7,"line": 72,"col": 4,"name": "Xchg"},{"file": 7,"line": 73,"col": 4,"name": "Add"},{"file": 7,"line": 74,"col": 4,"name": "Sub"},{"file": 7,"line": 75,"col": 4,"name": "And"},{"file": 7,"line": 76,"col": 4,"name": "Nand"},{"file": 7,"line": 77,"col": 4,"name": "Or"},{"file": 7,"line": 78,"col": 4,"name": "Xor"},{"file": 7,"line": 79,"col": 4,"name": "Max"},{"file": 7,"line": 80,"col": 4,"name": "Min"},{"file": 40,"line": 52,"col": 8,"name": "arm"},{"file": 40,"line": 53,"col": 8,"name": "armeb"},{"file": 40,"line": 54,"col": 8,"name": "aarch64"},{"file": 40,"line": 55,"col": 8,"name": "aarch64_be"},{"file": 40,"line": 56,"col": 8,"name": "aarch64_32"},{"file": 40,"line": 57,"col": 8,"name": "arc"},{"file": 40,"line": 58,"col": 8,"name": "avr"},{"file": 40,"line": 59,"col": 8,"name": "bpfel"},{"file": 40,"line": 60,"col": 8,"name": "bpfeb"},{"file": 40,"line": 61,"col": 8,"name": "hexagon"},{"file": 40,"line": 62,"col": 8,"name": "mips"},{"file": 40,"line": 63,"col": 8,"name": "mipsel"},{"file": 40,"line": 64,"col": 8,"name": "mips64"},{"file": 40,"line": 65,"col": 8,"name": "mips64el"},{"file": 40,"line": 66,"col": 8,"name": "msp430"},{"file": 40,"line": 67,"col": 8,"name": "powerpc"},{"file": 40,"line": 68,"col": 8,"name": "powerpc64"},{"file": 40,"line": 69,"col": 8,"name": "powerpc64le"},{"file": 40,"line": 70,"col": 8,"name": "r600"},{"file": 40,"line": 71,"col": 8,"name": "amdgcn"},{"file": 40,"line": 72,"col": 8,"name": "riscv32"},{"file": 40,"line": 73,"col": 8,"name": "riscv64"},{"file": 40,"line": 74,"col": 8,"name": "sparc"},{"file": 40,"line": 75,"col": 8,"name": "sparcv9"},{"file": 40,"line": 76,"col": 8,"name": "sparcel"},{"file": 40,"line": 77,"col": 8,"name": "s390x"},{"file": 40,"line": 78,"col": 8,"name": "tce"},{"file": 40,"line": 79,"col": 8,"name": "tcele"},{"file": 40,"line": 80,"col": 8,"name": "thumb"},{"file": 40,"line": 81,"col": 8,"name": "thumbeb"},{"file": 40,"line": 82,"col": 8,"name": "i386"},{"file": 40,"line": 83,"col": 8,"name": "x86_64"},{"file": 40,"line": 84,"col": 8,"name": "xcore"},{"file": 40,"line": 85,"col": 8,"name": "nvptx"},{"file": 40,"line": 86,"col": 8,"name": "nvptx64"},{"file": 40,"line": 87,"col": 8,"name": "le32"},{"file": 40,"line": 88,"col": 8,"name": "le64"},{"file": 40,"line": 89,"col": 8,"name": "amdil"},{"file": 40,"line": 90,"col": 8,"name": "amdil64"},{"file": 40,"line": 91,"col": 8,"name": "hsail"},{"file": 40,"line": 92,"col": 8,"name": "hsail64"},{"file": 40,"line": 93,"col": 8,"name": "spir"},{"file": 40,"line": 94,"col": 8,"name": "spir64"},{"file": 40,"line": 95,"col": 8,"name": "kalimba"},{"file": 40,"line": 96,"col": 8,"name": "shave"},{"file": 40,"line": 97,"col": 8,"name": "lanai"},{"file": 40,"line": 98,"col": 8,"name": "wasm32"},{"file": 40,"line": 99,"col": 8,"name": "wasm64"},{"file": 40,"line": 100,"col": 8,"name": "renderscript32"},{"file": 40,"line": 101,"col": 8,"name": "renderscript64"},{"file": 7,"line": 336,"col": 4,"name": "Big"},{"file": 7,"line": 337,"col": 4,"name": "Little"},{"file": 7,"line": 86,"col": 4,"name": "Debug"},{"file": 7,"line": 87,"col": 4,"name": "ReleaseSafe"},{"file": 7,"line": 88,"col": 4,"name": "ReleaseFast"},{"file": 7,"line": 89,"col": 4,"name": "ReleaseSmall"},{"file": 40,"line": 12,"col": 8,"name": "freestanding"},{"file": 40,"line": 13,"col": 8,"name": "ananas"},{"file": 40,"line": 14,"col": 8,"name": "cloudabi"},{"file": 40,"line": 15,"col": 8,"name": "dragonfly"},{"file": 40,"line": 16,"col": 8,"name": "freebsd"},{"file": 40,"line": 17,"col": 8,"name": "fuchsia"},{"file": 40,"line": 18,"col": 8,"name": "ios"},{"file": 40,"line": 19,"col": 8,"name": "kfreebsd"},{"file": 40,"line": 20,"col": 8,"name": "linux"},{"file": 40,"line": 21,"col": 8,"name": "lv2"},{"file": 40,"line": 22,"col": 8,"name": "macosx"},{"file": 40,"line": 23,"col": 8,"name": "netbsd"},{"file": 40,"line": 24,"col": 8,"name": "openbsd"},{"file": 40,"line": 25,"col": 8,"name": "solaris"},{"file": 40,"line": 26,"col": 8,"name": "windows"},{"file": 40,"line": 27,"col": 8,"name": "haiku"},{"file": 40,"line": 28,"col": 8,"name": "minix"},{"file": 40,"line": 29,"col": 8,"name": "rtems"},{"file": 40,"line": 30,"col": 8,"name": "nacl"},{"file": 40,"line": 31,"col": 8,"name": "cnk"},{"file": 40,"line": 32,"col": 8,"name": "aix"},{"file": 40,"line": 33,"col": 8,"name": "cuda"},{"file": 40,"line": 34,"col": 8,"name": "nvcl"},{"file": 40,"line": 35,"col": 8,"name": "amdhsa"},{"file": 40,"line": 36,"col": 8,"name": "ps4"},{"file": 40,"line": 37,"col": 8,"name": "elfiamcu"},{"file": 40,"line": 38,"col": 8,"name": "tvos"},{"file": 40,"line": 39,"col": 8,"name": "watchos"},{"file": 40,"line": 40,"col": 8,"name": "mesa3d"},{"file": 40,"line": 41,"col": 8,"name": "contiki"},{"file": 40,"line": 42,"col": 8,"name": "amdpal"},{"file": 40,"line": 43,"col": 8,"name": "hermit"},{"file": 40,"line": 44,"col": 8,"name": "hurd"},{"file": 40,"line": 45,"col": 8,"name": "wasi"},{"file": 40,"line": 46,"col": 8,"name": "emscripten"},{"file": 40,"line": 47,"col": 8,"name": "zen"},{"file": 40,"line": 48,"col": 8,"name": "uefi"},{"file": 7,"line": 61,"col": 4,"name": "Unordered"},{"file": 7,"line": 62,"col": 4,"name": "Monotonic"},{"file": 7,"line": 63,"col": 4,"name": "Acquire"},{"file": 7,"line": 64,"col": 4,"name": "Release"},{"file": 7,"line": 65,"col": 4,"name": "AcqRel"},{"file": 7,"line": 66,"col": 4,"name": "SeqCst"},{"file": 7,"line": 52,"col": 4,"name": "Internal"},{"file": 7,"line": 53,"col": 4,"name": "Strong"},{"file": 7,"line": 54,"col": 4,"name": "Weak"},{"file": 7,"line": 55,"col": 4,"name": "LinkOnce"},{"file": 1,"line": 18,"col": 0,"name": "name"},{"file": 1,"line": 19,"col": 0,"name": "func"},{"file": 42,"line": 9,"col": 4,"name": "data"},{"file": 38,"line": 12,"col": 4,"docs": " `null` if the current node (and its children) should\n not print on update()\n","name": "terminal"},{"file": 38,"line": 14,"col": 4,"name": "root"},{"file": 38,"line": 18,"col": 4,"docs": " Keeps track of how much time has passed since the beginning.\n Used to compare with `initial_delay_ms` and `refresh_rate_ms`.\n","name": "timer"},{"file": 38,"line": 22,"col": 4,"docs": " When the previous refresh was written to the terminal.\n Used to compare with `refresh_rate_ms`.\n","name": "prev_refresh_timestamp"},{"file": 38,"line": 26,"col": 4,"docs": " This buffer represents the maximum number of bytes written to the terminal\n with each refresh.\n","name": "output_buffer"},{"file": 38,"line": 29,"col": 4,"docs": " How many nanoseconds between writing updates to the terminal.\n","name": "refresh_rate_ns"},{"file": 38,"line": 32,"col": 4,"docs": " How many nanoseconds to keep the output hidden\n","name": "initial_delay_ns"},{"file": 38,"line": 34,"col": 4,"name": "done"},{"file": 38,"line": 38,"col": 4,"docs": " Keeps track of how many columns in the terminal have been output, so that\n we can move the cursor back later.\n","name": "columns_written"},{"file": 40,"line": 8,"col": 4,"name": "Native"},{"file": 40,"line": 9,"col": 4,"name": "Cross"},{"file": 36,"line": 7,"col": 4,"name": "lock"},{"file": 16,"line": 1274,"col": 8,"name": "pdb"},{"file": 16,"line": 1275,"col": 8,"name": "coff"},{"file": 16,"line": 1276,"col": 8,"name": "sect_contribs"},{"file": 16,"line": 1277,"col": 8,"name": "modules"},{"file": 24,"line": 226,"col": 4,"name": "machine"},{"file": 24,"line": 227,"col": 4,"name": "number_of_sections"},{"file": 24,"line": 228,"col": 4,"name": "timedate_stamp"},{"file": 24,"line": 229,"col": 4,"name": "pointer_to_symbol_table"},{"file": 24,"line": 230,"col": 4,"name": "number_of_symbols"},{"file": 24,"line": 231,"col": 4,"name": "size_of_optional_header"},{"file": 24,"line": 232,"col": 4,"name": "characteristics"},{"file": 24,"line": 241,"col": 4,"name": "magic"},{"file": 24,"line": 242,"col": 4,"name": "data_directory"},{"file": 24,"line": 246,"col": 4,"name": "characteristiccs"},{"file": 24,"line": 247,"col": 4,"name": "time_date_stamp"},{"file": 24,"line": 248,"col": 4,"name": "major_version"},{"file": 24,"line": 249,"col": 4,"name": "minor_version"},{"file": 24,"line": 250,"col": 4,"name": "type"},{"file": 24,"line": 251,"col": 4,"name": "size_of_data"},{"file": 24,"line": 252,"col": 4,"name": "address_of_raw_data"},{"file": 24,"line": 253,"col": 4,"name": "pointer_to_raw_data"},{"file": 23,"line": 462,"col": 4,"name": "in_file"},{"file": 23,"line": 463,"col": 4,"name": "allocator"},{"file": 23,"line": 464,"col": 4,"name": "coff"},{"file": 23,"line": 465,"col": 4,"name": "string_table"},{"file": 23,"line": 466,"col": 4,"name": "dbi"},{"file": 23,"line": 468,"col": 4,"name": "msf"},{"file": 23,"line": 492,"col": 4,"name": "directory"},{"file": 23,"line": 493,"col": 4,"name": "streams"},{"file": 23,"line": 585,"col": 4,"name": "FileMagic"},{"file": 23,"line": 591,"col": 4,"docs": " The block size of the internal file system. Valid values are 512, 1024,\n 2048, and 4096 bytes. Certain aspects of the MSF file layout vary depending\n on the block sizes. For the purposes of LLVM, we handle only block sizes of\n 4KiB, and all further discussion assumes a block size of 4KiB.\n","name": "BlockSize"},{"file": 23,"line": 597,"col": 4,"docs": " The index of a block within the file, at which begins a bitfield representing\n the set of all blocks within the file which are “free” (i.e. the data within\n that block is not used). See The Free Block Map for more information. Important:\n FreeBlockMapBlock can only be 1 or 2!\n","name": "FreeBlockMapBlock"},{"file": 23,"line": 601,"col": 4,"docs": " The total number of blocks in the file. NumBlocks * BlockSize should equal the\n size of the file on disk.\n","name": "NumBlocks"},{"file": 23,"line": 606,"col": 4,"docs": " The size of the stream directory, in bytes. The stream directory contains\n information about each stream’s size and the set of blocks that it occupies.\n It will be described in more detail later.\n","name": "NumDirectoryBytes"},{"file": 23,"line": 608,"col": 4,"name": "Unknown"},{"file": 23,"line": 624,"col": 4,"docs": " The index of a block within the MSF file. At this block is an array of\n ulittle32_t’s listing the blocks that the stream directory resides on.\n For large MSF files, the stream directory (which describes the block\n layout of each stream) may not fit entirely on a single block. As a\n result, this extra layer of indirection is introduced, whereby this\n block contains the list of blocks that the stream directory occupies,\n and the stream directory itself can be stitched together accordingly.\n The number of ulittle32_t’s in this array is given by\n ceil(NumDirectoryBytes / BlockSize).\n","name": "BlockMapAddr"},{"file": 16,"line": 890,"col": 12,"name": "Size"},{"file": 16,"line": 891,"col": 12,"name": "Capacity"},{"file": 23,"line": 17,"col": 4,"name": "VersionSignature"},{"file": 23,"line": 18,"col": 4,"name": "VersionHeader"},{"file": 23,"line": 19,"col": 4,"name": "Age"},{"file": 23,"line": 20,"col": 4,"name": "GlobalStreamIndex"},{"file": 23,"line": 21,"col": 4,"name": "BuildNumber"},{"file": 23,"line": 22,"col": 4,"name": "PublicStreamIndex"},{"file": 23,"line": 23,"col": 4,"name": "PdbDllVersion"},{"file": 23,"line": 24,"col": 4,"name": "SymRecordStream"},{"file": 23,"line": 25,"col": 4,"name": "PdbDllRbld"},{"file": 23,"line": 26,"col": 4,"name": "ModInfoSize"},{"file": 23,"line": 27,"col": 4,"name": "SectionContributionSize"},{"file": 23,"line": 28,"col": 4,"name": "SectionMapSize"},{"file": 23,"line": 29,"col": 4,"name": "SourceInfoSize"},{"file": 23,"line": 30,"col": 4,"name": "TypeServerSize"},{"file": 23,"line": 31,"col": 4,"name": "MFCTypeServerIndex"},{"file": 23,"line": 32,"col": 4,"name": "OptionalDbgHeaderSize"},{"file": 23,"line": 33,"col": 4,"name": "ECSubstreamSize"},{"file": 23,"line": 34,"col": 4,"name": "Flags"},{"file": 23,"line": 35,"col": 4,"name": "Machine"},{"file": 23,"line": 36,"col": 4,"name": "Padding"},{"file": 47,"line": 783,"col": 4,"name": "Reserved1"},{"file": 47,"line": 784,"col": 4,"name": "BeingDebugged"},{"file": 47,"line": 785,"col": 4,"name": "Reserved2"},{"file": 47,"line": 786,"col": 4,"name": "Reserved3"},{"file": 47,"line": 787,"col": 4,"name": "Ldr"},{"file": 47,"line": 788,"col": 4,"name": "ProcessParameters"},{"file": 47,"line": 789,"col": 4,"name": "Reserved4"},{"file": 47,"line": 790,"col": 4,"name": "AtlThunkSListPtr"},{"file": 47,"line": 791,"col": 4,"name": "Reserved5"},{"file": 47,"line": 792,"col": 4,"name": "Reserved6"},{"file": 47,"line": 793,"col": 4,"name": "Reserved7"},{"file": 47,"line": 794,"col": 4,"name": "Reserved8"},{"file": 47,"line": 795,"col": 4,"name": "AtlThunkSListPtr32"},{"file": 47,"line": 796,"col": 4,"name": "Reserved9"},{"file": 47,"line": 797,"col": 4,"name": "Reserved10"},{"file": 47,"line": 798,"col": 4,"name": "PostProcessInitRoutine"},{"file": 47,"line": 799,"col": 4,"name": "Reserved11"},{"file": 47,"line": 800,"col": 4,"name": "Reserved12"},{"file": 47,"line": 801,"col": 4,"name": "SessionId"},{"file": 34,"line": 45,"col": 12,"name": "Unlocked"},{"file": 34,"line": 46,"col": 12,"name": "Sleeping"},{"file": 34,"line": 47,"col": 12,"name": "Locked"},{"file": 47,"line": 752,"col": 4,"name": "ExceptionRecord"},{"file": 47,"line": 753,"col": 4,"name": "ContextRecord"},{"file": 29,"line": 103,"col": 4,"docs": "if we used resolution's value when performing the\n  performance counter calc on windows/darwin, it would\n  be less precise\n","name": "frequency"},{"file": 29,"line": 108,"col": 4,"name": "resolution"},{"file": 29,"line": 109,"col": 4,"name": "start_time"},{"file": 21,"line": 1096,"col": 4,"name": "remaining"},{"file": 24,"line": 262,"col": 8,"name": "physical_address"},{"file": 24,"line": 263,"col": 8,"name": "virtual_size"},{"file": 7,"line": 150,"col": 12,"name": "One"},{"file": 7,"line": 151,"col": 12,"name": "Many"},{"file": 7,"line": 152,"col": 12,"name": "Slice"},{"file": 7,"line": 153,"col": 12,"name": "C"},{"file": 7,"line": 297,"col": 12,"name": "Type"},{"file": 7,"line": 298,"col": 12,"name": "Var"},{"file": 7,"line": 299,"col": 12,"name": "Fn"},{"file": 39,"line": 47,"col": 12,"name": "Basic"},{"file": 39,"line": 48,"col": 12,"name": "Stop"},{"file": 39,"line": 49,"col": 12,"name": "EventFd"},{"file": 47,"line": 215,"col": 4,"name": "Internal"},{"file": 47,"line": 216,"col": 4,"name": "InternalHigh"},{"file": 47,"line": 217,"col": 4,"name": "Offset"},{"file": 47,"line": 218,"col": 4,"name": "OffsetHigh"},{"file": 47,"line": 219,"col": 4,"name": "hEvent"},{"file": 40,"line": 104,"col": 12,"name": "v8_5a"},{"file": 40,"line": 105,"col": 12,"name": "v8_4a"},{"file": 40,"line": 106,"col": 12,"name": "v8_3a"},{"file": 40,"line": 107,"col": 12,"name": "v8_2a"},{"file": 40,"line": 108,"col": 12,"name": "v8_1a"},{"file": 40,"line": 109,"col": 12,"name": "v8"},{"file": 40,"line": 110,"col": 12,"name": "v8r"},{"file": 40,"line": 111,"col": 12,"name": "v8m_baseline"},{"file": 40,"line": 112,"col": 12,"name": "v8m_mainline"},{"file": 40,"line": 113,"col": 12,"name": "v8_1m_mainline"},{"file": 40,"line": 114,"col": 12,"name": "v7"},{"file": 40,"line": 115,"col": 12,"name": "v7em"},{"file": 40,"line": 116,"col": 12,"name": "v7m"},{"file": 40,"line": 117,"col": 12,"name": "v7s"},{"file": 40,"line": 118,"col": 12,"name": "v7k"},{"file": 40,"line": 119,"col": 12,"name": "v7ve"},{"file": 40,"line": 120,"col": 12,"name": "v6"},{"file": 40,"line": 121,"col": 12,"name": "v6m"},{"file": 40,"line": 122,"col": 12,"name": "v6k"},{"file": 40,"line": 123,"col": 12,"name": "v6t2"},{"file": 40,"line": 124,"col": 12,"name": "v5"},{"file": 40,"line": 125,"col": 12,"name": "v5te"},{"file": 40,"line": 126,"col": 12,"name": "v4t"},{"file": 40,"line": 140,"col": 12,"name": "v5"},{"file": 40,"line": 141,"col": 12,"name": "v4"},{"file": 40,"line": 142,"col": 12,"name": "v3"},{"file": 40,"line": 129,"col": 12,"name": "v8_5a"},{"file": 40,"line": 130,"col": 12,"name": "v8_4a"},{"file": 40,"line": 131,"col": 12,"name": "v8_3a"},{"file": 40,"line": 132,"col": 12,"name": "v8_2a"},{"file": 40,"line": 133,"col": 12,"name": "v8_1a"},{"file": 40,"line": 134,"col": 12,"name": "v8"},{"file": 40,"line": 135,"col": 12,"name": "v8r"},{"file": 40,"line": 136,"col": 12,"name": "v8m_baseline"},{"file": 40,"line": 137,"col": 12,"name": "v8m_mainline"},{"file": 42,"line": 43,"col": 12,"name": "handle"},{"file": 42,"line": 44,"col": 12,"name": "alloc_start"},{"file": 42,"line": 45,"col": 12,"name": "heap_handle"},{"file": 16,"line": 1206,"col": 4,"name": "nlist"},{"file": 16,"line": 1207,"col": 4,"name": "ofile"},{"file": 16,"line": 1208,"col": 4,"name": "reloc"},{"file": 39,"line": 15,"col": 4,"name": "allocator"},{"file": 39,"line": 16,"col": 4,"name": "next_tick_queue"},{"file": 39,"line": 17,"col": 4,"name": "os_data"},{"file": 39,"line": 18,"col": 4,"name": "final_resume_node"},{"file": 39,"line": 19,"col": 4,"name": "pending_event_count"},{"file": 39,"line": 20,"col": 4,"name": "extra_threads"},{"file": 39,"line": 24,"col": 4,"name": "available_eventfd_resume_nodes"},{"file": 39,"line": 25,"col": 4,"name": "eventfd_resume_nodes"},{"file": 20,"line": 20,"col": 4,"docs": " I/O operates normally, waiting for the operating system syscalls to complete.\n","name": "blocking"},{"file": 20,"line": 23,"col": 4,"docs": " I/O functions are generated async and rely on a global event loop. Event-based I/O.\n","name": "evented"},{"file": 21,"line": 13,"col": 4,"name": "Left"},{"file": 21,"line": 14,"col": 4,"name": "Center"},{"file": 21,"line": 15,"col": 4,"name": "Right"},{"file": 23,"line": 423,"col": 4,"name": "None"},{"file": 23,"line": 424,"col": 4,"name": "Symbols"},{"file": 23,"line": 425,"col": 4,"name": "Lines"},{"file": 23,"line": 426,"col": 4,"name": "StringTable"},{"file": 23,"line": 427,"col": 4,"name": "FileChecksums"},{"file": 23,"line": 428,"col": 4,"name": "FrameData"},{"file": 23,"line": 429,"col": 4,"name": "InlineeLines"},{"file": 23,"line": 430,"col": 4,"name": "CrossScopeImports"},{"file": 23,"line": 431,"col": 4,"name": "CrossScopeExports"},{"file": 23,"line": 434,"col": 4,"name": "ILLines"},{"file": 23,"line": 435,"col": 4,"name": "FuncMDTokenMap"},{"file": 23,"line": 436,"col": 4,"name": "TypeMDTokenMap"},{"file": 23,"line": 437,"col": 4,"name": "MergedAssemblyInput"},{"file": 23,"line": 439,"col": 4,"name": "CoffSymbolRVA"},{"file": 23,"line": 357,"col": 4,"docs": " Code offset of line contribution.\n","name": "RelocOffset"},{"file": 23,"line": 360,"col": 4,"docs": " Code segment of line contribution.\n","name": "RelocSegment"},{"file": 23,"line": 361,"col": 4,"name": "Flags"},{"file": 23,"line": 364,"col": 4,"docs": " Code size of this line contribution.\n","name": "CodeSize"},{"file": 23,"line": 382,"col": 4,"docs": " Offset of FileChecksum entry in File\n checksums buffer.  The checksum entry then\n contains another offset into the string\n table of the actual name.\n","name": "NameIndex"},{"file": 23,"line": 383,"col": 4,"name": "NumLines"},{"file": 23,"line": 386,"col": 4,"docs": " code size of block, in bytes\n","name": "BlockSize"},{"file": 23,"line": 452,"col": 4,"docs": " PDBStringTableSignature\n","name": "Signature"},{"file": 23,"line": 455,"col": 4,"docs": " 1 or 2\n","name": "HashVersion"},{"file": 23,"line": 458,"col": 4,"docs": " Number of bytes of names buffer.\n","name": "ByteSize"},{"file": 23,"line": 406,"col": 4,"name": "StartColumn"},{"file": 23,"line": 407,"col": 4,"name": "EndColumn"},{"file": 23,"line": 391,"col": 4,"docs": " Offset to start of code bytes for line number\n","name": "Offset"},{"file": 23,"line": 392,"col": 4,"name": "Flags"},{"file": 23,"line": 444,"col": 4,"docs": " codeview::DebugSubsectionKind enum\n","name": "Kind"},{"file": 23,"line": 447,"col": 4,"docs": " number of bytes occupied by this record.\n","name": "Length"},{"file": 23,"line": 328,"col": 4,"name": "HasFP"},{"file": 23,"line": 329,"col": 4,"name": "HasIRET"},{"file": 23,"line": 330,"col": 4,"name": "HasFRET"},{"file": 23,"line": 331,"col": 4,"name": "IsNoReturn"},{"file": 23,"line": 332,"col": 4,"name": "IsUnreachable"},{"file": 23,"line": 333,"col": 4,"name": "HasCustomCallingConv"},{"file": 23,"line": 334,"col": 4,"name": "IsNoInline"},{"file": 23,"line": 335,"col": 4,"name": "HasOptimizedDebugInfo"},{"file": 23,"line": 345,"col": 4,"docs": " Record length, starting from &RecordKind.\n","name": "RecordLen"},{"file": 23,"line": 348,"col": 4,"docs": " Record kind enum (SymRecordKind or TypeRecordKind)\n","name": "RecordKind"},{"file": 23,"line": 112,"col": 4,"name": "S_COMPILE"},{"file": 23,"line": 113,"col": 4,"name": "S_REGISTER_16t"},{"file": 23,"line": 114,"col": 4,"name": "S_CONSTANT_16t"},{"file": 23,"line": 115,"col": 4,"name": "S_UDT_16t"},{"file": 23,"line": 116,"col": 4,"name": "S_SSEARCH"},{"file": 23,"line": 117,"col": 4,"name": "S_SKIP"},{"file": 23,"line": 118,"col": 4,"name": "S_CVRESERVE"},{"file": 23,"line": 119,"col": 4,"name": "S_OBJNAME_ST"},{"file": 23,"line": 120,"col": 4,"name": "S_ENDARG"},{"file": 23,"line": 121,"col": 4,"name": "S_COBOLUDT_16t"},{"file": 23,"line": 122,"col": 4,"name": "S_MANYREG_16t"},{"file": 23,"line": 123,"col": 4,"name": "S_RETURN"},{"file": 23,"line": 124,"col": 4,"name": "S_ENTRYTHIS"},{"file": 23,"line": 125,"col": 4,"name": "S_BPREL16"},{"file": 23,"line": 126,"col": 4,"name": "S_LDATA16"},{"file": 23,"line": 127,"col": 4,"name": "S_GDATA16"},{"file": 23,"line": 128,"col": 4,"name": "S_PUB16"},{"file": 23,"line": 129,"col": 4,"name": "S_LPROC16"},{"file": 23,"line": 130,"col": 4,"name": "S_GPROC16"},{"file": 23,"line": 131,"col": 4,"name": "S_THUNK16"},{"file": 23,"line": 132,"col": 4,"name": "S_BLOCK16"},{"file": 23,"line": 133,"col": 4,"name": "S_WITH16"},{"file": 23,"line": 134,"col": 4,"name": "S_LABEL16"},{"file": 23,"line": 135,"col": 4,"name": "S_CEXMODEL16"},{"file": 23,"line": 136,"col": 4,"name": "S_VFTABLE16"},{"file": 23,"line": 137,"col": 4,"name": "S_REGREL16"},{"file": 23,"line": 138,"col": 4,"name": "S_BPREL32_16t"},{"file": 23,"line": 139,"col": 4,"name": "S_LDATA32_16t"},{"file": 23,"line": 140,"col": 4,"name": "S_GDATA32_16t"},{"file": 23,"line": 141,"col": 4,"name": "S_PUB32_16t"},{"file": 23,"line": 142,"col": 4,"name": "S_LPROC32_16t"},{"file": 23,"line": 143,"col": 4,"name": "S_GPROC32_16t"},{"file": 23,"line": 144,"col": 4,"name": "S_THUNK32_ST"},{"file": 23,"line": 145,"col": 4,"name": "S_BLOCK32_ST"},{"file": 23,"line": 146,"col": 4,"name": "S_WITH32_ST"},{"file": 23,"line": 147,"col": 4,"name": "S_LABEL32_ST"},{"file": 23,"line": 148,"col": 4,"name": "S_CEXMODEL32"},{"file": 23,"line": 149,"col": 4,"name": "S_VFTABLE32_16t"},{"file": 23,"line": 150,"col": 4,"name": "S_REGREL32_16t"},{"file": 23,"line": 151,"col": 4,"name": "S_LTHREAD32_16t"},{"file": 23,"line": 152,"col": 4,"name": "S_GTHREAD32_16t"},{"file": 23,"line": 153,"col": 4,"name": "S_SLINK32"},{"file": 23,"line": 154,"col": 4,"name": "S_LPROCMIPS_16t"},{"file": 23,"line": 155,"col": 4,"name": "S_GPROCMIPS_16t"},{"file": 23,"line": 156,"col": 4,"name": "S_PROCREF_ST"},{"file": 23,"line": 157,"col": 4,"name": "S_DATAREF_ST"},{"file": 23,"line": 158,"col": 4,"name": "S_ALIGN"},{"file": 23,"line": 159,"col": 4,"name": "S_LPROCREF_ST"},{"file": 23,"line": 160,"col": 4,"name": "S_OEM"},{"file": 23,"line": 161,"col": 4,"name": "S_TI16_MAX"},{"file": 23,"line": 162,"col": 4,"name": "S_REGISTER_ST"},{"file": 23,"line": 163,"col": 4,"name": "S_CONSTANT_ST"},{"file": 23,"line": 164,"col": 4,"name": "S_UDT_ST"},{"file": 23,"line": 165,"col": 4,"name": "S_COBOLUDT_ST"},{"file": 23,"line": 166,"col": 4,"name": "S_MANYREG_ST"},{"file": 23,"line": 167,"col": 4,"name": "S_BPREL32_ST"},{"file": 23,"line": 168,"col": 4,"name": "S_LDATA32_ST"},{"file": 23,"line": 169,"col": 4,"name": "S_GDATA32_ST"},{"file": 23,"line": 170,"col": 4,"name": "S_PUB32_ST"},{"file": 23,"line": 171,"col": 4,"name": "S_LPROC32_ST"},{"file": 23,"line": 172,"col": 4,"name": "S_GPROC32_ST"},{"file": 23,"line": 173,"col": 4,"name": "S_VFTABLE32"},{"file": 23,"line": 174,"col": 4,"name": "S_REGREL32_ST"},{"file": 23,"line": 175,"col": 4,"name": "S_LTHREAD32_ST"},{"file": 23,"line": 176,"col": 4,"name": "S_GTHREAD32_ST"},{"file": 23,"line": 177,"col": 4,"name": "S_LPROCMIPS_ST"},{"file": 23,"line": 178,"col": 4,"name": "S_GPROCMIPS_ST"},{"file": 23,"line": 179,"col": 4,"name": "S_COMPILE2_ST"},{"file": 23,"line": 180,"col": 4,"name": "S_MANYREG2_ST"},{"file": 23,"line": 181,"col": 4,"name": "S_LPROCIA64_ST"},{"file": 23,"line": 182,"col": 4,"name": "S_GPROCIA64_ST"},{"file": 23,"line": 183,"col": 4,"name": "S_LOCALSLOT_ST"},{"file": 23,"line": 184,"col": 4,"name": "S_PARAMSLOT_ST"},{"file": 23,"line": 185,"col": 4,"name": "S_ANNOTATION"},{"file": 23,"line": 186,"col": 4,"name": "S_GMANPROC_ST"},{"file": 23,"line": 187,"col": 4,"name": "S_LMANPROC_ST"},{"file": 23,"line": 188,"col": 4,"name": "S_RESERVED1"},{"file": 23,"line": 189,"col": 4,"name": "S_RESERVED2"},{"file": 23,"line": 190,"col": 4,"name": "S_RESERVED3"},{"file": 23,"line": 191,"col": 4,"name": "S_RESERVED4"},{"file": 23,"line": 192,"col": 4,"name": "S_LMANDATA_ST"},{"file": 23,"line": 193,"col": 4,"name": "S_GMANDATA_ST"},{"file": 23,"line": 194,"col": 4,"name": "S_MANFRAMEREL_ST"},{"file": 23,"line": 195,"col": 4,"name": "S_MANREGISTER_ST"},{"file": 23,"line": 196,"col": 4,"name": "S_MANSLOT_ST"},{"file": 23,"line": 197,"col": 4,"name": "S_MANMANYREG_ST"},{"file": 23,"line": 198,"col": 4,"name": "S_MANREGREL_ST"},{"file": 23,"line": 199,"col": 4,"name": "S_MANMANYREG2_ST"},{"file": 23,"line": 200,"col": 4,"name": "S_MANTYPREF"},{"file": 23,"line": 201,"col": 4,"name": "S_UNAMESPACE_ST"},{"file": 23,"line": 202,"col": 4,"name": "S_ST_MAX"},{"file": 23,"line": 203,"col": 4,"name": "S_WITH32"},{"file": 23,"line": 204,"col": 4,"name": "S_MANYREG"},{"file": 23,"line": 205,"col": 4,"name": "S_LPROCMIPS"},{"file": 23,"line": 206,"col": 4,"name": "S_GPROCMIPS"},{"file": 23,"line": 207,"col": 4,"name": "S_MANYREG2"},{"file": 23,"line": 208,"col": 4,"name": "S_LPROCIA64"},{"file": 23,"line": 209,"col": 4,"name": "S_GPROCIA64"},{"file": 23,"line": 210,"col": 4,"name": "S_LOCALSLOT"},{"file": 23,"line": 211,"col": 4,"name": "S_PARAMSLOT"},{"file": 23,"line": 212,"col": 4,"name": "S_MANFRAMEREL"},{"file": 23,"line": 213,"col": 4,"name": "S_MANREGISTER"},{"file": 23,"line": 214,"col": 4,"name": "S_MANSLOT"},{"file": 23,"line": 215,"col": 4,"name": "S_MANMANYREG"},{"file": 23,"line": 216,"col": 4,"name": "S_MANREGREL"},{"file": 23,"line": 217,"col": 4,"name": "S_MANMANYREG2"},{"file": 23,"line": 218,"col": 4,"name": "S_UNAMESPACE"},{"file": 23,"line": 219,"col": 4,"name": "S_DATAREF"},{"file": 23,"line": 220,"col": 4,"name": "S_ANNOTATIONREF"},{"file": 23,"line": 221,"col": 4,"name": "S_TOKENREF"},{"file": 23,"line": 222,"col": 4,"name": "S_GMANPROC"},{"file": 23,"line": 223,"col": 4,"name": "S_LMANPROC"},{"file": 23,"line": 224,"col": 4,"name": "S_ATTR_FRAMEREL"},{"file": 23,"line": 225,"col": 4,"name": "S_ATTR_REGISTER"},{"file": 23,"line": 226,"col": 4,"name": "S_ATTR_REGREL"},{"file": 23,"line": 227,"col": 4,"name": "S_ATTR_MANYREG"},{"file": 23,"line": 228,"col": 4,"name": "S_SEPCODE"},{"file": 23,"line": 229,"col": 4,"name": "S_LOCAL_2005"},{"file": 23,"line": 230,"col": 4,"name": "S_DEFRANGE_2005"},{"file": 23,"line": 231,"col": 4,"name": "S_DEFRANGE2_2005"},{"file": 23,"line": 232,"col": 4,"name": "S_DISCARDED"},{"file": 23,"line": 233,"col": 4,"name": "S_LPROCMIPS_ID"},{"file": 23,"line": 234,"col": 4,"name": "S_GPROCMIPS_ID"},{"file": 23,"line": 235,"col": 4,"name": "S_LPROCIA64_ID"},{"file": 23,"line": 236,"col": 4,"name": "S_GPROCIA64_ID"},{"file": 23,"line": 237,"col": 4,"name": "S_DEFRANGE_HLSL"},{"file": 23,"line": 238,"col": 4,"name": "S_GDATA_HLSL"},{"file": 23,"line": 239,"col": 4,"name": "S_LDATA_HLSL"},{"file": 23,"line": 240,"col": 4,"name": "S_LOCAL_DPC_GROUPSHARED"},{"file": 23,"line": 241,"col": 4,"name": "S_DEFRANGE_DPC_PTR_TAG"},{"file": 23,"line": 242,"col": 4,"name": "S_DPC_SYM_TAG_MAP"},{"file": 23,"line": 243,"col": 4,"name": "S_ARMSWITCHTABLE"},{"file": 23,"line": 244,"col": 4,"name": "S_POGODATA"},{"file": 23,"line": 245,"col": 4,"name": "S_INLINESITE2"},{"file": 23,"line": 246,"col": 4,"name": "S_MOD_TYPEREF"},{"file": 23,"line": 247,"col": 4,"name": "S_REF_MINIPDB"},{"file": 23,"line": 248,"col": 4,"name": "S_PDBMAP"},{"file": 23,"line": 249,"col": 4,"name": "S_GDATA_HLSL32"},{"file": 23,"line": 250,"col": 4,"name": "S_LDATA_HLSL32"},{"file": 23,"line": 251,"col": 4,"name": "S_GDATA_HLSL32_EX"},{"file": 23,"line": 252,"col": 4,"name": "S_LDATA_HLSL32_EX"},{"file": 23,"line": 253,"col": 4,"name": "S_FASTLINK"},{"file": 23,"line": 254,"col": 4,"name": "S_INLINEES"},{"file": 23,"line": 255,"col": 4,"name": "S_END"},{"file": 23,"line": 256,"col": 4,"name": "S_INLINESITE_END"},{"file": 23,"line": 257,"col": 4,"name": "S_PROC_ID_END"},{"file": 23,"line": 258,"col": 4,"name": "S_THUNK32"},{"file": 23,"line": 259,"col": 4,"name": "S_TRAMPOLINE"},{"file": 23,"line": 260,"col": 4,"name": "S_SECTION"},{"file": 23,"line": 261,"col": 4,"name": "S_COFFGROUP"},{"file": 23,"line": 262,"col": 4,"name": "S_EXPORT"},{"file": 23,"line": 263,"col": 4,"name": "S_LPROC32"},{"file": 23,"line": 264,"col": 4,"name": "S_GPROC32"},{"file": 23,"line": 265,"col": 4,"name": "S_LPROC32_ID"},{"file": 23,"line": 266,"col": 4,"name": "S_GPROC32_ID"},{"file": 23,"line": 267,"col": 4,"name": "S_LPROC32_DPC"},{"file": 23,"line": 268,"col": 4,"name": "S_LPROC32_DPC_ID"},{"file": 23,"line": 269,"col": 4,"name": "S_REGISTER"},{"file": 23,"line": 270,"col": 4,"name": "S_PUB32"},{"file": 23,"line": 271,"col": 4,"name": "S_PROCREF"},{"file": 23,"line": 272,"col": 4,"name": "S_LPROCREF"},{"file": 23,"line": 273,"col": 4,"name": "S_ENVBLOCK"},{"file": 23,"line": 274,"col": 4,"name": "S_INLINESITE"},{"file": 23,"line": 275,"col": 4,"name": "S_LOCAL"},{"file": 23,"line": 276,"col": 4,"name": "S_DEFRANGE"},{"file": 23,"line": 277,"col": 4,"name": "S_DEFRANGE_SUBFIELD"},{"file": 23,"line": 278,"col": 4,"name": "S_DEFRANGE_REGISTER"},{"file": 23,"line": 279,"col": 4,"name": "S_DEFRANGE_FRAMEPOINTER_REL"},{"file": 23,"line": 280,"col": 4,"name": "S_DEFRANGE_SUBFIELD_REGISTER"},{"file": 23,"line": 281,"col": 4,"name": "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE"},{"file": 23,"line": 282,"col": 4,"name": "S_DEFRANGE_REGISTER_REL"},{"file": 23,"line": 283,"col": 4,"name": "S_BLOCK32"},{"file": 23,"line": 284,"col": 4,"name": "S_LABEL32"},{"file": 23,"line": 285,"col": 4,"name": "S_OBJNAME"},{"file": 23,"line": 286,"col": 4,"name": "S_COMPILE2"},{"file": 23,"line": 287,"col": 4,"name": "S_COMPILE3"},{"file": 23,"line": 288,"col": 4,"name": "S_FRAMEPROC"},{"file": 23,"line": 289,"col": 4,"name": "S_CALLSITEINFO"},{"file": 23,"line": 290,"col": 4,"name": "S_FILESTATIC"},{"file": 23,"line": 291,"col": 4,"name": "S_HEAPALLOCSITE"},{"file": 23,"line": 292,"col": 4,"name": "S_FRAMECOOKIE"},{"file": 23,"line": 293,"col": 4,"name": "S_CALLEES"},{"file": 23,"line": 294,"col": 4,"name": "S_CALLERS"},{"file": 23,"line": 295,"col": 4,"name": "S_UDT"},{"file": 23,"line": 296,"col": 4,"name": "S_COBOLUDT"},{"file": 23,"line": 297,"col": 4,"name": "S_BUILDINFO"},{"file": 23,"line": 298,"col": 4,"name": "S_BPREL32"},{"file": 23,"line": 299,"col": 4,"name": "S_REGREL32"},{"file": 23,"line": 300,"col": 4,"name": "S_CONSTANT"},{"file": 23,"line": 301,"col": 4,"name": "S_MANCONSTANT"},{"file": 23,"line": 302,"col": 4,"name": "S_LDATA32"},{"file": 23,"line": 303,"col": 4,"name": "S_GDATA32"},{"file": 23,"line": 304,"col": 4,"name": "S_LMANDATA"},{"file": 23,"line": 305,"col": 4,"name": "S_GMANDATA"},{"file": 23,"line": 306,"col": 4,"name": "S_LTHREAD32"},{"file": 23,"line": 307,"col": 4,"name": "S_GTHREAD32"},{"file": 23,"line": 313,"col": 4,"name": "Parent"},{"file": 23,"line": 314,"col": 4,"name": "End"},{"file": 23,"line": 315,"col": 4,"name": "Next"},{"file": 23,"line": 316,"col": 4,"name": "CodeSize"},{"file": 23,"line": 317,"col": 4,"name": "DbgStart"},{"file": 23,"line": 318,"col": 4,"name": "DbgEnd"},{"file": 23,"line": 319,"col": 4,"name": "FunctionType"},{"file": 23,"line": 320,"col": 4,"name": "CodeOffset"},{"file": 23,"line": 321,"col": 4,"name": "Segment"},{"file": 23,"line": 322,"col": 4,"name": "Flags"},{"file": 23,"line": 413,"col": 4,"docs": " Byte offset of filename in global string table.\n","name": "FileNameOffset"},{"file": 23,"line": 416,"col": 4,"docs": " Number of bytes of checksum.\n","name": "ChecksumSize"},{"file": 23,"line": 419,"col": 4,"docs": " FileChecksumKind\n","name": "ChecksumKind"},{"file": 23,"line": 339,"col": 4,"name": "Ver60"},{"file": 23,"line": 340,"col": 4,"name": "V2"},{"file": 23,"line": 369,"col": 4,"docs": " CV_LINES_HAVE_COLUMNS\n","name": "LF_HaveColumns"},{"file": 23,"line": 370,"col": 4,"name": "unused"},{"file": 40,"line": 150,"col": 8,"name": "none"},{"file": 40,"line": 151,"col": 8,"name": "gnu"},{"file": 40,"line": 152,"col": 8,"name": "gnuabin32"},{"file": 40,"line": 153,"col": 8,"name": "gnuabi64"},{"file": 40,"line": 154,"col": 8,"name": "gnueabi"},{"file": 40,"line": 155,"col": 8,"name": "gnueabihf"},{"file": 40,"line": 156,"col": 8,"name": "gnux32"},{"file": 40,"line": 157,"col": 8,"name": "code16"},{"file": 40,"line": 158,"col": 8,"name": "eabi"},{"file": 40,"line": 159,"col": 8,"name": "eabihf"},{"file": 40,"line": 160,"col": 8,"name": "elfv1"},{"file": 40,"line": 161,"col": 8,"name": "elfv2"},{"file": 40,"line": 162,"col": 8,"name": "android"},{"file": 40,"line": 163,"col": 8,"name": "musl"},{"file": 40,"line": 164,"col": 8,"name": "musleabi"},{"file": 40,"line": 165,"col": 8,"name": "musleabihf"},{"file": 40,"line": 166,"col": 8,"name": "msvc"},{"file": 40,"line": 167,"col": 8,"name": "itanium"},{"file": 40,"line": 168,"col": 8,"name": "cygnus"},{"file": 40,"line": 169,"col": 8,"name": "coreclr"},{"file": 40,"line": 170,"col": 8,"name": "simulator"},{"file": 40,"line": 171,"col": 8,"name": "macabi"},{"file": 40,"line": 194,"col": 8,"name": "arch"},{"file": 40,"line": 195,"col": 8,"name": "os"},{"file": 40,"line": 196,"col": 8,"name": "abi"},{"file": 31,"line": 207,"col": 4,"docs": " name of this section\n","name": "sectname"},{"file": 31,"line": 210,"col": 4,"docs": " segment this section goes in\n","name": "segname"},{"file": 31,"line": 213,"col": 4,"docs": " memory address of this section\n","name": "addr"},{"file": 31,"line": 216,"col": 4,"docs": " size in bytes of this section\n","name": "size"},{"file": 31,"line": 219,"col": 4,"docs": " file offset of this section\n","name": "offset"},{"file": 31,"line": 222,"col": 4,"docs": " section alignment (power of 2)\n","name": "align"},{"file": 31,"line": 225,"col": 4,"docs": " file offset of relocation entries\n","name": "reloff"},{"file": 31,"line": 228,"col": 4,"docs": " number of relocation entries\n","name": "nreloc"},{"file": 31,"line": 231,"col": 4,"docs": " flags (section type and attributes\n","name": "flags"},{"file": 31,"line": 234,"col": 4,"docs": " reserved (for offset or index)\n","name": "reserved1"},{"file": 31,"line": 237,"col": 4,"docs": " reserved (for count or sizeof)\n","name": "reserved2"},{"file": 31,"line": 240,"col": 4,"docs": " reserved\n","name": "reserved3"},{"file": 31,"line": 11,"col": 4,"name": "magic"},{"file": 31,"line": 12,"col": 4,"name": "cputype"},{"file": 31,"line": 13,"col": 4,"name": "cpusubtype"},{"file": 31,"line": 14,"col": 4,"name": "filetype"},{"file": 31,"line": 15,"col": 4,"name": "ncmds"},{"file": 31,"line": 16,"col": 4,"name": "sizeofcmds"},{"file": 31,"line": 17,"col": 4,"name": "flags"},{"file": 31,"line": 18,"col": 4,"name": "reserved"},{"file": 24,"line": 237,"col": 8,"name": "virtual_address"},{"file": 24,"line": 238,"col": 8,"name": "size"},{"file": 16,"line": 910,"col": 12,"name": "first"},{"file": 16,"line": 911,"col": 12,"name": "second"},{"file": 47,"line": 286,"col": 4,"name": "nLength"},{"file": 47,"line": 287,"col": 4,"name": "lpSecurityDescriptor"},{"file": 47,"line": 288,"col": 4,"name": "bInheritHandle"},{"file": 7,"line": 304,"col": 16,"name": "fn_type"},{"file": 7,"line": 305,"col": 16,"name": "inline_type"},{"file": 7,"line": 306,"col": 16,"name": "calling_convention"},{"file": 7,"line": 307,"col": 16,"name": "is_var_args"},{"file": 7,"line": 308,"col": 16,"name": "is_extern"},{"file": 7,"line": 309,"col": 16,"name": "is_export"},{"file": 7,"line": 310,"col": 16,"name": "lib_name"},{"file": 7,"line": 311,"col": 16,"name": "return_type"},{"file": 7,"line": 312,"col": 16,"name": "arg_names"},{"file": 47,"line": 842,"col": 4,"name": "Flags"},{"file": 47,"line": 843,"col": 4,"name": "Length"},{"file": 47,"line": 844,"col": 4,"name": "TimeStamp"},{"file": 47,"line": 845,"col": 4,"name": "DosPath"},{"file": 47,"line": 805,"col": 4,"name": "Reserved1"},{"file": 47,"line": 806,"col": 4,"name": "Reserved2"},{"file": 47,"line": 807,"col": 4,"name": "InMemoryOrderModuleList"},{"file": 47,"line": 743,"col": 4,"name": "ExceptionCode"},{"file": 47,"line": 744,"col": 4,"name": "ExceptionFlags"},{"file": 47,"line": 745,"col": 4,"name": "ExceptionRecord"},{"file": 47,"line": 746,"col": 4,"name": "ExceptionAddress"},{"file": 47,"line": 747,"col": 4,"name": "NumberParameters"},{"file": 47,"line": 748,"col": 4,"name": "ExceptionInformation"},{"file": 47,"line": 777,"col": 4,"name": "Length"},{"file": 47,"line": 778,"col": 4,"name": "MaximumLength"},{"file": 47,"line": 779,"col": 4,"name": "Buffer"},{"file": 47,"line": 604,"col": 4,"name": "X"},{"file": 47,"line": 605,"col": 4,"name": "Y"},{"file": 47,"line": 675,"col": 4,"name": "Flink"},{"file": 47,"line": 676,"col": 4,"name": "Blink"},{"file": 47,"line": 871,"col": 4,"name": "DosPath"},{"file": 47,"line": 872,"col": 4,"name": "Handle"},{"file": 47,"line": 811,"col": 4,"name": "AllocationSize"},{"file": 47,"line": 812,"col": 4,"name": "Size"},{"file": 47,"line": 813,"col": 4,"name": "Flags"},{"file": 47,"line": 814,"col": 4,"name": "DebugFlags"},{"file": 47,"line": 815,"col": 4,"name": "ConsoleHandle"},{"file": 47,"line": 816,"col": 4,"name": "ConsoleFlags"},{"file": 47,"line": 817,"col": 4,"name": "hStdInput"},{"file": 47,"line": 818,"col": 4,"name": "hStdOutput"},{"file": 47,"line": 819,"col": 4,"name": "hStdError"},{"file": 47,"line": 820,"col": 4,"name": "CurrentDirectory"},{"file": 47,"line": 821,"col": 4,"name": "DllPath"},{"file": 47,"line": 822,"col": 4,"name": "ImagePathName"},{"file": 47,"line": 823,"col": 4,"name": "CommandLine"},{"file": 47,"line": 824,"col": 4,"name": "Environment"},{"file": 47,"line": 825,"col": 4,"name": "dwX"},{"file": 47,"line": 826,"col": 4,"name": "dwY"},{"file": 47,"line": 827,"col": 4,"name": "dwXSize"},{"file": 47,"line": 828,"col": 4,"name": "dwYSize"},{"file": 47,"line": 829,"col": 4,"name": "dwXCountChars"},{"file": 47,"line": 830,"col": 4,"name": "dwYCountChars"},{"file": 47,"line": 831,"col": 4,"name": "dwFillAttribute"},{"file": 47,"line": 832,"col": 4,"name": "dwFlags"},{"file": 47,"line": 833,"col": 4,"name": "dwShowWindow"},{"file": 47,"line": 834,"col": 4,"name": "WindowTitle"},{"file": 47,"line": 835,"col": 4,"name": "Desktop"},{"file": 47,"line": 836,"col": 4,"name": "ShellInfo"},{"file": 47,"line": 837,"col": 4,"name": "RuntimeInfo"},{"file": 47,"line": 838,"col": 4,"name": "DLCurrentDirectory"},{"file": 47,"line": 662,"col": 4,"name": "dwSize"},{"file": 47,"line": 663,"col": 4,"name": "dwCursorPosition"},{"file": 47,"line": 664,"col": 4,"name": "wAttributes"},{"file": 47,"line": 665,"col": 4,"name": "srWindow"},{"file": 47,"line": 666,"col": 4,"name": "dwMaximumWindowSize"},{"file": 47,"line": 263,"col": 4,"name": "FileNameLength"},{"file": 47,"line": 264,"col": 4,"name": "FileName"},{"file": 47,"line": 597,"col": 4,"name": "Left"},{"file": 47,"line": 598,"col": 4,"name": "Top"},{"file": 47,"line": 599,"col": 4,"name": "Right"},{"file": 47,"line": 600,"col": 4,"name": "Bottom"},{"file": 39,"line": 899,"col": 12,"name": "io_port"},{"file": 39,"line": 900,"col": 12,"name": "extra_thread_count"},{"file": 23,"line": 397,"col": 8,"docs": " Start line number\n","name": "Start"},{"file": 23,"line": 400,"col": 8,"docs": " Delta of lines to the end of the expression. Still unclear.\n","name": "End"},{"file": 23,"line": 401,"col": 8,"name": "IsStatement"},{"file": 46,"line": 9,"col": 4,"docs": " Do not follow pointers, only hash their value.\n","name": "Shallow"},{"file": 46,"line": 14,"col": 4,"docs": " Follow pointers, hash the pointee content.\n Only dereferences one level, ie. it is changed into .Shallow when a\n pointer type is encountered.\n","name": "Deep"},{"file": 46,"line": 19,"col": 4,"docs": " Follow pointers, hash the pointee content.\n Dereferences all pointers encountered.\n Assumes no cycle.\n","name": "DeepRecursive"},{"file": 7,"line": 317,"col": 20,"name": "Auto"},{"file": 7,"line": 318,"col": 20,"name": "Always"},{"file": 7,"line": 319,"col": 20,"name": "Never"},{"file": 4,"line": 73,"col": 19,"name": "self"},{"file": 4,"line": 73,"col": 32,"name": "i"},{"file": 4,"line": 73,"col": 42,"name": "item"},{"file": 4,"line": 67,"col": 26,"name": "self"},{"file": 4,"line": 67,"col": 38,"name": "i"},{"file": 4,"line": 67,"col": 48,"name": "item"},{"file": 4,"line": 137,"col": 36,"name": "self"},{"file": 4,"line": 137,"col": 49,"name": "item"},{"file": 4,"line": 169,"col": 33,"name": "self"},{"file": 4,"line": 169,"col": 46,"name": "i"},{"file": 4,"line": 61,"col": 18,"name": "self"},{"file": 4,"line": 61,"col": 30,"name": "i"},{"file": 4,"line": 157,"col": 26,"name": "self"},{"file": 4,"line": 157,"col": 39,"name": "i"},{"file": 4,"line": 253,"col": 24,"name": "self"},{"file": 4,"line": 224,"col": 19,"name": "self"},{"file": 4,"line": 56,"col": 28,"name": "self"},{"file": 4,"line": 176,"col": 27,"name": "self"},{"file": 4,"line": 176,"col": 40,"name": "items"},{"file": 4,"line": 120,"col": 27,"name": "self"},{"file": 4,"line": 120,"col": 40,"name": "n"},{"file": 4,"line": 120,"col": 50,"name": "items"},{"file": 4,"line": 92,"col": 30,"name": "allocator"},{"file": 4,"line": 92,"col": 53,"name": "slice"},{"file": 4,"line": 44,"col": 22,"name": "self"},{"file": 4,"line": 110,"col": 22,"name": "self"},{"file": 4,"line": 110,"col": 35,"name": "n"},{"file": 4,"line": 110,"col": 45,"name": "item"},{"file": 4,"line": 190,"col": 22,"name": "self"},{"file": 4,"line": 190,"col": 35,"name": "new_len"},{"file": 4,"line": 144,"col": 29,"name": "self"},{"file": 4,"line": 144,"col": 42,"name": "i"},{"file": 4,"line": 230,"col": 25,"name": "self"},{"file": 5,"line": 136,"col": 26,"name": "list"},{"file": 5,"line": 136,"col": 39,"name": "data"},{"file": 5,"line": 136,"col": 48,"name": "allocator"},{"file": 5,"line": 124,"col": 27,"name": "list"},{"file": 5,"line": 124,"col": 40,"name": "node"},{"file": 5,"line": 124,"col": 53,"name": "allocator"},{"file": 5,"line": 69,"col": 27,"name": "list"},{"file": 5,"line": 69,"col": 40,"name": "node"},{"file": 5,"line": 69,"col": 53,"name": "new_node"},{"file": 5,"line": 86,"col": 22,"name": "list"},{"file": 5,"line": 86,"col": 35,"name": "node"},{"file": 5,"line": 115,"col": 28,"name": "list"},{"file": 5,"line": 115,"col": 41,"name": "allocator"},{"file": 5,"line": 102,"col": 24,"name": "list"},{"file": 8,"line": 105,"col": 20,"name": "self"},{"file": 8,"line": 113,"col": 28,"name": "self"},{"file": 8,"line": 113,"col": 41,"name": "Error","comptime": true},{"file": 8,"line": 113,"col": 63,"name": "stream"},{"file": 8,"line": 26,"col": 19,"name": "self"},{"file": 8,"line": 26,"col": 32,"name": "node"},{"file": 8,"line": 59,"col": 21,"name": "self"},{"file": 8,"line": 59,"col": 34,"name": "node"},{"file": 8,"line": 42,"col": 19,"name": "self"},{"file": 8,"line": 76,"col": 22,"name": "self"},{"file": 8,"line": 76,"col": 35,"name": "node"},{"file": 8,"line": 99,"col": 23,"name": "self"},{"file": 9,"line": 49,"col": 19,"name": "self"},{"file": 9,"line": 31,"col": 25,"name": "self"},{"file": 9,"line": 31,"col": 38,"name": "node"},{"file": 9,"line": 36,"col": 20,"name": "self"},{"file": 9,"line": 36,"col": 33,"name": "node"},{"file": 9,"line": 64,"col": 23,"name": "self"},{"file": 10,"line": 279,"col": 21,"name": "self"},{"file": 10,"line": 165,"col": 30,"name": "self"},{"file": 10,"line": 165,"col": 43,"name": "expected_count"},{"file": 10,"line": 127,"col": 24,"name": "self"},{"file": 10,"line": 127,"col": 37,"name": "key"},{"file": 10,"line": 203,"col": 28,"name": "self"},{"file": 10,"line": 203,"col": 41,"name": "key"},{"file": 10,"line": 203,"col": 49,"name": "value"},{"file": 10,"line": 270,"col": 24,"name": "hm"},{"file": 10,"line": 216,"col": 19,"name": "hm"},{"file": 10,"line": 216,"col": 36,"name": "key"},{"file": 10,"line": 108,"col": 21,"name": "hm"},{"file": 10,"line": 207,"col": 33,"name": "self"},{"file": 10,"line": 207,"col": 46,"name": "key"},{"file": 10,"line": 207,"col": 54,"name": "value"},{"file": 10,"line": 104,"col": 22,"name": "hm"},{"file": 10,"line": 146,"col": 29,"name": "self"},{"file": 10,"line": 146,"col": 42,"name": "key"},{"file": 10,"line": 146,"col": 50,"name": "value"},{"file": 10,"line": 223,"col": 24,"name": "hm"},{"file": 10,"line": 223,"col": 41,"name": "key"},{"file": 10,"line": 197,"col": 19,"name": "self"},{"file": 10,"line": 197,"col": 32,"name": "key"},{"file": 10,"line": 197,"col": 40,"name": "value"},{"file": 10,"line": 94,"col": 20,"name": "allocator"},{"file": 10,"line": 117,"col": 21,"name": "self"},{"file": 10,"line": 227,"col": 24,"name": "hm"},{"file": 10,"line": 227,"col": 41,"name": "key"},{"file": 10,"line": 232,"col": 22,"name": "hm"},{"file": 10,"line": 232,"col": 33,"name": "key"},{"file": 10,"line": 266,"col": 35,"name": "hm"},{"file": 10,"line": 266,"col": 46,"name": "key"},{"file": 10,"line": 154,"col": 29,"name": "expected_count"},{"file": 10,"line": 299,"col": 24,"name": "hm"},{"file": 10,"line": 299,"col": 35,"name": "capacity"},{"file": 10,"line": 403,"col": 22,"name": "hm"},{"file": 10,"line": 403,"col": 32,"name": "key"},{"file": 10,"line": 289,"col": 24,"name": "self"},{"file": 10,"line": 308,"col": 38,"name": "hm"},{"file": 10,"line": 407,"col": 26,"name": "hm"},{"file": 10,"line": 407,"col": 36,"name": "i"},{"file": 10,"line": 321,"col": 23,"name": "self"},{"file": 10,"line": 321,"col": 36,"name": "orig_key"},{"file": 10,"line": 173,"col": 31,"name": "self"},{"file": 10,"line": 173,"col": 44,"name": "new_capacity"},{"file": 10,"line": 388,"col": 23,"name": "hm"},{"file": 10,"line": 388,"col": 33,"name": "key"},{"file": 11,"line": 204,"col": 26,"name": "self"},{"file": 11,"line": 204,"col": 39,"name": "T","comptime": true},{"file": 11,"line": 224,"col": 25,"name": "self"},{"file": 11,"line": 224,"col": 38,"name": "num_bytes"},{"file": 11,"line": 89,"col": 28,"name": "self"},{"file": 11,"line": 89,"col": 41,"name": "allocator"},{"file": 11,"line": 89,"col": 68,"name": "max_size"},{"file": 11,"line": 101,"col": 40,"name": "self"},{"file": 11,"line": 101,"col": 53,"name": "buffer"},{"file": 11,"line": 101,"col": 70,"name": "delimiter"},{"file": 11,"line": 101,"col": 85,"name": "max_size"},{"file": 11,"line": 192,"col": 30,"name": "self"},{"file": 11,"line": 192,"col": 43,"name": "T","comptime": true},{"file": 11,"line": 185,"col": 29,"name": "self"},{"file": 11,"line": 185,"col": 42,"name": "T","comptime": true},{"file": 11,"line": 180,"col": 30,"name": "self"},{"file": 11,"line": 216,"col": 26,"name": "self"},{"file": 11,"line": 216,"col": 39,"name": "ReturnType","comptime": true},{"file": 11,"line": 216,"col": 66,"name": "endian"},{"file": 11,"line": 216,"col": 90,"name": "size"},{"file": 11,"line": 162,"col": 39,"name": "self"},{"file": 11,"line": 162,"col": 52,"name": "delimiter"},{"file": 11,"line": 137,"col": 39,"name": "self"},{"file": 11,"line": 137,"col": 52,"name": "buf"},{"file": 11,"line": 137,"col": 63,"name": "delimiter"},{"file": 11,"line": 123,"col": 39,"name": "self"},{"file": 11,"line": 123,"col": 52,"name": "allocator"},{"file": 11,"line": 123,"col": 79,"name": "delimiter"},{"file": 11,"line": 123,"col": 94,"name": "max_size"},{"file": 11,"line": 65,"col": 29,"name": "self"},{"file": 11,"line": 65,"col": 42,"name": "buffer"},{"file": 11,"line": 65,"col": 59,"name": "max_size"},{"file": 11,"line": 210,"col": 23,"name": "self"},{"file": 11,"line": 210,"col": 36,"name": "T","comptime": true},{"file": 11,"line": 210,"col": 54,"name": "endian"},{"file": 5,"line": 295,"col": 22,"name": "list"},{"file": 5,"line": 295,"col": 35,"name": "new_node"},{"file": 5,"line": 397,"col": 26,"name": "list"},{"file": 5,"line": 397,"col": 39,"name": "data"},{"file": 5,"line": 397,"col": 48,"name": "allocator"},{"file": 5,"line": 385,"col": 27,"name": "list"},{"file": 5,"line": 385,"col": 40,"name": "node"},{"file": 5,"line": 385,"col": 53,"name": "allocator"},{"file": 5,"line": 309,"col": 23,"name": "list"},{"file": 5,"line": 309,"col": 36,"name": "new_node"},{"file": 5,"line": 353,"col": 19,"name": "list"},{"file": 5,"line": 232,"col": 27,"name": "list"},{"file": 5,"line": 232,"col": 40,"name": "node"},{"file": 5,"line": 232,"col": 53,"name": "new_node"},{"file": 5,"line": 253,"col": 28,"name": "list"},{"file": 5,"line": 253,"col": 41,"name": "node"},{"file": 5,"line": 253,"col": 54,"name": "new_node"},{"file": 5,"line": 274,"col": 30,"name": "list1"},{"file": 5,"line": 274,"col": 44,"name": "list2"},{"file": 5,"line": 328,"col": 22,"name": "list"},{"file": 5,"line": 328,"col": 35,"name": "node"},{"file": 5,"line": 363,"col": 24,"name": "list"},{"file": 5,"line": 376,"col": 28,"name": "list"},{"file": 5,"line": 376,"col": 41,"name": "allocator"},{"file": 12,"line": 68,"col": 30,"name": "self"},{"file": 12,"line": 68,"col": 43,"name": "T","comptime": true},{"file": 12,"line": 68,"col": 61,"name": "value"},{"file": 12,"line": 80,"col": 24,"name": "self"},{"file": 12,"line": 80,"col": 37,"name": "T","comptime": true},{"file": 12,"line": 80,"col": 55,"name": "value"},{"file": 12,"line": 80,"col": 65,"name": "endian"},{"file": 12,"line": 55,"col": 30,"name": "self"},{"file": 12,"line": 55,"col": 43,"name": "T","comptime": true},{"file": 12,"line": 55,"col": 61,"name": "value"},{"file": 12,"line": 62,"col": 31,"name": "self"},{"file": 12,"line": 62,"col": 44,"name": "T","comptime": true},{"file": 12,"line": 62,"col": 62,"name": "value"},{"file": 12,"line": 46,"col": 31,"name": "self"},{"file": 12,"line": 46,"col": 44,"name": "byte"},{"file": 12,"line": 46,"col": 54,"name": "n"},{"file": 12,"line": 74,"col": 27,"name": "self"},{"file": 12,"line": 74,"col": 40,"name": "T","comptime": true},{"file": 12,"line": 74,"col": 58,"name": "value"},{"file": 6,"line": 6,"col": 16,"name": "T","comptime": true},{"file": 32,"line": 345,"col": 26,"name": "file"},{"file": 32,"line": 224,"col": 16,"name": "self"},{"file": 32,"line": 247,"col": 16,"name": "self"},{"file": 32,"line": 38,"col": 21,"name": "path"},{"file": 32,"line": 107,"col": 30,"name": "path"},{"file": 32,"line": 107,"col": 48,"name": "file_mode"},{"file": 32,"line": 63,"col": 21,"name": "path"},{"file": 32,"line": 200,"col": 23,"name": "self"},{"file": 32,"line": 200,"col": 35,"name": "offset"},{"file": 32,"line": 211,"col": 18,"name": "self"},{"file": 32,"line": 323,"col": 24,"name": "self"},{"file": 32,"line": 323,"col": 36,"name": "iovecs"},{"file": 32,"line": 91,"col": 26,"name": "path_w"},{"file": 32,"line": 91,"col": 48,"name": "file_mode"},{"file": 32,"line": 80,"col": 26,"name": "path"},{"file": 32,"line": 80,"col": 45,"name": "file_mode"},{"file": 32,"line": 70,"col": 25,"name": "path"},{"file": 32,"line": 70,"col": 43,"name": "file_mode"},{"file": 32,"line": 126,"col": 31,"name": "path_w"},{"file": 32,"line": 126,"col": 53,"name": "file_mode"},{"file": 32,"line": 148,"col": 18,"name": "path"},{"file": 32,"line": 287,"col": 8,"name": "self"},{"file": 32,"line": 289,"col": 8,"docs": " access timestamp in nanoseconds\n","name": "atime"},{"file": 32,"line": 291,"col": 8,"docs": " last modification timestamp in nanoseconds\n","name": "mtime"},{"file": 32,"line": 158,"col": 19,"name": "path"},{"file": 32,"line": 153,"col": 19,"name": "path"},{"file": 32,"line": 116,"col": 31,"name": "path"},{"file": 32,"line": 116,"col": 50,"name": "file_mode"},{"file": 13,"line": 932,"col": 16,"name": "self"},{"file": 23,"line": 704,"col": 15,"name": "self"},{"file": 23,"line": 708,"col": 18,"name": "self"},{"file": 16,"line": 1411,"col": 14,"name": "self"},{"file": 28,"line": 358,"col": 18,"name": "self"},{"file": 28,"line": 481,"col": 17,"name": "self"},{"file": 19,"line": 191,"col": 24,"name": "s","comptime": true},{"file": 34,"line": 66,"col": 22,"name": "self"},{"file": 35,"line": 61,"col": 18,"name": "self"},{"file": 37,"line": 170,"col": 16,"name": "seed"},{"file": 37,"line": 170,"col": 27,"name": "input"},{"file": 37,"line": 119,"col": 16,"name": "seed"},{"file": 37,"line": 119,"col": 27,"name": "input"},{"file": 5,"line": 45,"col": 30,"name": "node"},{"file": 5,"line": 34,"col": 31,"name": "node"},{"file": 5,"line": 34,"col": 44,"name": "new_node"},{"file": 5,"line": 23,"col": 24,"name": "data"},{"file": 8,"line": 222,"col": 13,"name": "ctx"},{"file": 8,"line": 240,"col": 13,"name": "ctx"},{"file": 5,"line": 202,"col": 24,"name": "data"},{"file": 9,"line": 149,"col": 13,"name": "ctx"},{"file": 9,"line": 166,"col": 13,"name": "ctx"},{"file": 10,"line": 546,"col": 20,"name": "K","comptime": true},{"file": 10,"line": 28,"col": 18,"name": "s"},{"file": 10,"line": 554,"col": 26,"name": "K","comptime": true},{"file": 10,"line": 554,"col": 44,"name": "strategy","comptime": true},{"file": 10,"line": 15,"col": 19,"name": "K","comptime": true},{"file": 10,"line": 15,"col": 37,"name": "V","comptime": true},{"file": 10,"line": 24,"col": 17,"name": "a"},{"file": 10,"line": 24,"col": 32,"name": "b"},{"file": 10,"line": 20,"col": 21,"name": "V","comptime": true},{"file": 13,"line": 87,"col": 19,"name": "self"},{"file": 13,"line": 87,"col": 37,"name": "ptr"},{"file": 13,"line": 1484,"col": 19,"name": "ptr"},{"file": 13,"line": 1484,"col": 29,"name": "start","comptime": true},{"file": 13,"line": 1484,"col": 52,"name": "length","comptime": true},{"file": 13,"line": 1228,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 1228,"col": 33,"name": "items"},{"file": 13,"line": 706,"col": 24,"name": "T","comptime": true},{"file": 13,"line": 706,"col": 42,"name": "buffer"},{"file": 13,"line": 706,"col": 56,"name": "value"},{"file": 13,"line": 1389,"col": 15,"name": "value"},{"file": 13,"line": 1257,"col": 14,"name": "T","comptime": true},{"file": 13,"line": 1257,"col": 32,"name": "items"},{"file": 13,"line": 1257,"col": 44,"name": "amount"},{"file": 13,"line": 1464,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 1464,"col": 38,"name": "bytes"},{"file": 13,"line": 658,"col": 23,"name": "T","comptime": true},{"file": 13,"line": 658,"col": 41,"name": "buf"},{"file": 13,"line": 658,"col": 78,"name": "value"},{"file": 13,"line": 851,"col": 16,"name": "buffer"},{"file": 13,"line": 851,"col": 36,"name": "delimiter"},{"file": 13,"line": 1209,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 1209,"col": 29,"name": "slice"},{"file": 13,"line": 432,"col": 24,"name": "T","comptime": true},{"file": 13,"line": 432,"col": 42,"name": "slice"},{"file": 13,"line": 432,"col": 60,"name": "start_index"},{"file": 13,"line": 432,"col": 80,"name": "value"},{"file": 13,"line": 675,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 675,"col": 34,"name": "buffer"},{"file": 13,"line": 675,"col": 74,"name": "value"},{"file": 13,"line": 675,"col": 84,"name": "endian"},{"file": 13,"line": 1221,"col": 12,"name": "T","comptime": true},{"file": 13,"line": 1221,"col": 30,"name": "a"},{"file": 13,"line": 1221,"col": 37,"name": "b"},{"file": 13,"line": 423,"col": 25,"name": "T","comptime": true},{"file": 13,"line": 423,"col": 43,"name": "slice"},{"file": 13,"line": 423,"col": 61,"name": "value"},{"file": 13,"line": 689,"col": 27,"name": "T","comptime": true},{"file": 13,"line": 689,"col": 45,"name": "buffer"},{"file": 13,"line": 689,"col": 59,"name": "value"},{"file": 13,"line": 1197,"col": 11,"name": "T","comptime": true},{"file": 13,"line": 1197,"col": 29,"name": "slice"},{"file": 13,"line": 455,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 455,"col": 39,"name": "slice"},{"file": 13,"line": 455,"col": 57,"name": "start_index"},{"file": 13,"line": 455,"col": 77,"name": "values"},{"file": 13,"line": 388,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 388,"col": 34,"name": "slice"},{"file": 13,"line": 388,"col": 52,"name": "values_to_strip"},{"file": 13,"line": 514,"col": 18,"name": "ReturnType","comptime": true},{"file": 13,"line": 514,"col": 45,"name": "bytes"},{"file": 13,"line": 514,"col": 64,"name": "endian"},{"file": 13,"line": 1538,"col": 17,"name": "addr"},{"file": 13,"line": 1538,"col": 30,"name": "alignment"},{"file": 13,"line": 736,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 736,"col": 39,"name": "buffer"},{"file": 13,"line": 736,"col": 53,"name": "value"},{"file": 13,"line": 736,"col": 63,"name": "endian"},{"file": 13,"line": 977,"col": 12,"name": "allocator"},{"file": 13,"line": 977,"col": 35,"name": "separator"},{"file": 13,"line": 977,"col": 58,"name": "slices"},{"file": 13,"line": 1012,"col": 14,"name": "allocator"},{"file": 13,"line": 1012,"col": 37,"name": "T","comptime": true},{"file": 13,"line": 1012,"col": 55,"name": "slices"},{"file": 13,"line": 1421,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 1421,"col": 38,"name": "bytes"},{"file": 13,"line": 1299,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 1299,"col": 34,"name": "x"},{"file": 13,"line": 1299,"col": 40,"name": "endianness_of_x"},{"file": 13,"line": 1315,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 1315,"col": 40,"name": "x"},{"file": 13,"line": 603,"col": 20,"name": "T","comptime": true},{"file": 13,"line": 603,"col": 38,"name": "bytes"},{"file": 13,"line": 603,"col": 57,"name": "endian"},{"file": 13,"line": 1307,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 1307,"col": 34,"name": "x"},{"file": 13,"line": 1307,"col": 40,"name": "desired_endianness"},{"file": 13,"line": 444,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 444,"col": 40,"name": "slice"},{"file": 13,"line": 444,"col": 58,"name": "values"},{"file": 13,"line": 1283,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 1283,"col": 40,"name": "x"},{"file": 13,"line": 1291,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 1291,"col": 37,"name": "x"},{"file": 13,"line": 418,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 418,"col": 39,"name": "slice"},{"file": 13,"line": 418,"col": 57,"name": "value"},{"file": 13,"line": 1323,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 1323,"col": 37,"name": "x"},{"file": 13,"line": 650,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 650,"col": 40,"name": "buf"},{"file": 13,"line": 650,"col": 73,"name": "value"},{"file": 13,"line": 298,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 298,"col": 33,"name": "lhs"},{"file": 13,"line": 298,"col": 49,"name": "rhs"},{"file": 13,"line": 440,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 440,"col": 36,"name": "slice"},{"file": 13,"line": 440,"col": 54,"name": "values"},{"file": 13,"line": 332,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 332,"col": 34,"name": "lhs"},{"file": 13,"line": 332,"col": 50,"name": "rhs"},{"file": 13,"line": 901,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 901,"col": 34,"name": "haystack"},{"file": 13,"line": 901,"col": 55,"name": "needle"},{"file": 13,"line": 402,"col": 12,"name": "T","comptime": true},{"file": 13,"line": 402,"col": 30,"name": "slice"},{"file": 13,"line": 402,"col": 48,"name": "values_to_strip"},{"file": 13,"line": 545,"col": 22,"name": "T","comptime": true},{"file": 13,"line": 545,"col": 40,"name": "bytes"},{"file": 13,"line": 395,"col": 17,"name": "T","comptime": true},{"file": 13,"line": 395,"col": 35,"name": "slice"},{"file": 13,"line": 395,"col": 53,"name": "values_to_strip"},{"file": 13,"line": 280,"col": 18,"name": "T","comptime": true},{"file": 13,"line": 280,"col": 36,"name": "s"},{"file": 13,"line": 472,"col": 19,"name": "T","comptime": true},{"file": 13,"line": 472,"col": 37,"name": "haystack"},{"file": 13,"line": 472,"col": 58,"name": "needle"},{"file": 13,"line": 575,"col": 27,"name": "T","comptime": true},{"file": 13,"line": 575,"col": 45,"name": "bytes"},{"file": 13,"line": 262,"col": 21,"name": "T","comptime": true},{"file": 13,"line": 262,"col": 39,"name": "dest"},{"file": 13,"line": 262,"col": 50,"name": "source"},{"file": 13,"line": 373,"col": 16,"name": "T","comptime": true},{"file": 13,"line": 373,"col": 34,"name": "slice"},{"file": 13,"line": 373,"col": 52,"name": "scalar"},{"file": 13,"line": 592,"col": 15,"name": "T","comptime": true},{"file": 13,"line": 592,"col": 33,"name": "bytes"},{"file": 13,"line": 592,"col": 78,"name": "endian"},{"file": 13,"line": 1407,"col": 26,"name": "T","comptime": true},{"file": 13,"line": 1407,"col": 44,"name": "B","comptime": true},{"file": 13,"line": 1477,"col": 25,"name": "T","comptime": true},{"file": 13,"line": 1477,"col": 43,"name": "length","comptime": true},{"file": 14,"line": 394,"col": 12,"name": "T","comptime": true},{"file": 14,"line": 394,"col": 30,"name": "x"},{"file": 14,"line": 394,"col": 36,"name": "r"},{"file": 14,"line": 664,"col": 15,"name": "x"},{"file": 14,"line": 570,"col": 16,"name": "T","comptime": true},{"file": 14,"line": 570,"col": 34,"name": "numerator"},{"file": 14,"line": 570,"col": 48,"name": "denominator"},{"file": 14,"line": 796,"col": 22,"name": "T","comptime": true},{"file": 14,"line": 796,"col": 40,"name": "value"},{"file": 14,"line": 366,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 366,"col": 29,"name": "a"},{"file": 14,"line": 366,"col": 35,"name": "shift_amt"},{"file": 14,"line": 430,"col": 15,"name": "T","comptime": true},{"file": 14,"line": 842,"col": 16,"name": "T","comptime": true},{"file": 14,"line": 842,"col": 34,"name": "x"},{"file": 14,"line": 319,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 319,"col": 29,"name": "a"},{"file": 14,"line": 319,"col": 35,"name": "b"},{"file": 14,"line": 868,"col": 17,"name": "T","comptime": true},{"file": 14,"line": 868,"col": 35,"name": "value"},{"file": 14,"line": 616,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 616,"col": 29,"name": "numerator"},{"file": 14,"line": 616,"col": 43,"name": "denominator"},{"file": 14,"line": 751,"col": 20,"name": "v"},{"file": 14,"line": 847,"col": 21,"name": "T","comptime": true},{"file": 14,"line": 847,"col": 39,"name": "x"},{"file": 14,"line": 784,"col": 29,"name": "T","comptime": true},{"file": 14,"line": 784,"col": 47,"name": "value"},{"file": 14,"line": 333,"col": 16,"name": "T","comptime": true},{"file": 14,"line": 333,"col": 34,"name": "a"},{"file": 14,"line": 333,"col": 40,"name": "shift_amt"},{"file": 14,"line": 639,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 639,"col": 29,"name": "numerator"},{"file": 14,"line": 639,"col": 43,"name": "denominator"},{"file": 14,"line": 324,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 324,"col": 29,"name": "a"},{"file": 14,"line": 324,"col": 35,"name": "b"},{"file": 14,"line": 208,"col": 25,"name": "T","comptime": true},{"file": 14,"line": 756,"col": 23,"name": "T","comptime": true},{"file": 14,"line": 756,"col": 41,"name": "value"},{"file": 14,"line": 441,"col": 23,"name": "from","comptime": true},{"file": 14,"line": 441,"col": 52,"name": "to","comptime": true},{"file": 14,"line": 413,"col": 12,"name": "T","comptime": true},{"file": 14,"line": 413,"col": 30,"name": "x"},{"file": 14,"line": 413,"col": 36,"name": "r"},{"file": 14,"line": 329,"col": 14,"name": "x"},{"file": 14,"line": 743,"col": 17,"name": "alignment","comptime": true},{"file": 14,"line": 743,"col": 42,"name": "ptr"},{"file": 14,"line": 591,"col": 16,"name": "T","comptime": true},{"file": 14,"line": 591,"col": 34,"name": "numerator"},{"file": 14,"line": 591,"col": 48,"name": "denominator"},{"file": 14,"line": 695,"col": 18,"name": "x"},{"file": 14,"line": 105,"col": 17,"name": "value"},{"file": 14,"line": 340,"col": 11,"name": "T","comptime": true},{"file": 14,"line": 340,"col": 29,"name": "a"},{"file": 14,"line": 340,"col": 35,"name": "shift_amt"},{"file": 14,"line": 99,"col": 16,"name": "T","comptime": true},{"file": 14,"line": 99,"col": 34,"name": "x"},{"file": 14,"line": 99,"col": 40,"name": "y"},{"file": 14,"line": 99,"col": 46,"name": "epsilon"},{"file": 14,"line": 221,"col": 25,"name": "T","comptime": true},{"file": 14,"line": 516,"col": 14,"name": "x"},{"file": 14,"line": 549,"col": 16,"name": "T","comptime": true},{"file": 14,"line": 549,"col": 34,"name": "numerator"},{"file": 14,"line": 549,"col": 48,"name": "denominator"},{"file": 42,"line": 74,"col": 16,"name": "self"},{"file": 42,"line": 70,"col": 18,"name": "self"},{"file": 42,"line": 143,"col": 17,"name": "context"},{"file": 42,"line": 143,"col": 31,"name": "startFn","comptime": true},{"file": 15,"line": 2465,"col": 17,"name": "fd"},{"file": 15,"line": 2465,"col": 27,"name": "offset"},{"file": 15,"line": 3067,"col": 12,"name": "fds"},{"file": 15,"line": 3067,"col": 27,"name": "timeout"},{"file": 15,"line": 1775,"col": 21,"name": "flags"},{"file": 15,"line": 786,"col": 16,"name": "file"},{"file": 15,"line": 786,"col": 35,"name": "child_argv"},{"file": 15,"line": 786,"col": 70,"name": "envp"},{"file": 15,"line": 2881,"col": 4,"name": "op"},{"file": 15,"line": 2882,"col": 4,"name": "dname"},{"file": 15,"line": 2883,"col": 4,"name": "class"},{"file": 15,"line": 2884,"col": 4,"name": "ty"},{"file": 15,"line": 2885,"col": 4,"name": "data"},{"file": 15,"line": 2886,"col": 4,"name": "newrr"},{"file": 15,"line": 2887,"col": 4,"name": "buf"},{"file": 15,"line": 1412,"col": 16,"name": "file_path"},{"file": 15,"line": 1412,"col": 39,"name": "out_buffer"},{"file": 15,"line": 994,"col": 17,"name": "target_path"},{"file": 15,"line": 994,"col": 42,"name": "newdirfd"},{"file": 15,"line": 994,"col": 58,"name": "sym_link_path"},{"file": 15,"line": 2148,"col": 24,"name": "inotify_fd"},{"file": 15,"line": 2148,"col": 41,"name": "wd"},{"file": 15,"line": 2853,"col": 19,"name": "name_buffer"},{"file": 15,"line": 1959,"col": 23,"name": "sockfd"},{"file": 15,"line": 3055,"col": 4,"docs": " The file descriptor of the sending socket.\n","name": "sockfd"},{"file": 15,"line": 3056,"col": 4,"name": "buf"},{"file": 15,"line": 3057,"col": 4,"name": "flags"},{"file": 15,"line": 1054,"col": 15,"name": "file_path"},{"file": 15,"line": 650,"col": 12,"name": "file_path"},{"file": 15,"line": 650,"col": 35,"name": "flags"},{"file": 15,"line": 650,"col": 47,"name": "perm"},{"file": 15,"line": 1250,"col": 15,"name": "old_path"},{"file": 15,"line": 1250,"col": 39,"name": "new_path"},{"file": 15,"line": 1814,"col": 17,"name": "epfd"},{"file": 15,"line": 1814,"col": 28,"name": "op"},{"file": 15,"line": 1814,"col": 37,"name": "fd"},{"file": 15,"line": 1814,"col": 46,"name": "event"},{"file": 15,"line": 2365,"col": 4,"name": "name"},{"file": 15,"line": 2366,"col": 4,"name": "oldp"},{"file": 15,"line": 2367,"col": 4,"name": "oldlenp"},{"file": 15,"line": 2368,"col": 4,"name": "newp"},{"file": 15,"line": 2369,"col": 4,"name": "newlen"},{"file": 15,"line": 699,"col": 15,"name": "dir_fd"},{"file": 15,"line": 699,"col": 29,"name": "file_path"},{"file": 15,"line": 699,"col": 53,"name": "flags"},{"file": 15,"line": 699,"col": 65,"name": "mode"},{"file": 15,"line": 1929,"col": 15,"name": "sockfd"},{"file": 15,"line": 1929,"col": 29,"name": "sock_addr"},{"file": 15,"line": 1929,"col": 57,"name": "len"},{"file": 15,"line": 2125,"col": 25,"name": "inotify_fd"},{"file": 15,"line": 2125,"col": 42,"name": "pathname"},{"file": 15,"line": 2125,"col": 64,"name": "mask"},{"file": 15,"line": 2648,"col": 4,"name": "T","comptime": true},{"file": 15,"line": 2649,"col": 4,"name": "callback"},{"file": 15,"line": 2650,"col": 4,"name": "data"},{"file": 15,"line": 1094,"col": 17,"name": "dirfd"},{"file": 15,"line": 1094,"col": 30,"name": "file_path_c"},{"file": 15,"line": 1094,"col": 56,"name": "flags"},{"file": 15,"line": 202,"col": 13,"name": "sig"},{"file": 15,"line": 2838,"col": 16,"name": "fd"},{"file": 15,"line": 2838,"col": 26,"name": "times"},{"file": 15,"line": 658,"col": 13,"name": "file_path"},{"file": 15,"line": 658,"col": 37,"name": "flags"},{"file": 15,"line": 658,"col": 49,"name": "perm"},{"file": 15,"line": 954,"col": 15,"name": "target_path"},{"file": 15,"line": 954,"col": 40,"name": "sym_link_path"},{"file": 15,"line": 880,"col": 14,"name": "key"},{"file": 15,"line": 1491,"col": 14,"name": "gid"},{"file": 15,"line": 1370,"col": 13,"name": "dir_path"},{"file": 15,"line": 1000,"col": 18,"name": "target_path"},{"file": 15,"line": 1000,"col": 44,"name": "newdirfd"},{"file": 15,"line": 1000,"col": 60,"name": "sym_link_path"},{"file": 15,"line": 729,"col": 12,"name": "old_fd"},{"file": 15,"line": 729,"col": 26,"name": "new_fd"},{"file": 15,"line": 2068,"col": 4,"name": "kq"},{"file": 15,"line": 2069,"col": 4,"name": "changelist"},{"file": 15,"line": 2070,"col": 4,"name": "eventlist"},{"file": 15,"line": 2071,"col": 4,"name": "timeout"},{"file": 15,"line": 234,"col": 12,"name": "pid"},{"file": 15,"line": 234,"col": 24,"name": "sig"},{"file": 15,"line": 1481,"col": 16,"name": "ruid"},{"file": 15,"line": 1481,"col": 27,"name": "euid"},{"file": 15,"line": 2736,"col": 25,"name": "pid"},{"file": 15,"line": 1501,"col": 16,"name": "rgid"},{"file": 15,"line": 1501,"col": 27,"name": "egid"},{"file": 15,"line": 1273,"col": 13,"name": "dir_path"},{"file": 15,"line": 1273,"col": 35,"name": "mode"},{"file": 15,"line": 1874,"col": 19,"name": "sockfd"},{"file": 15,"line": 1874,"col": 33,"name": "addr"},{"file": 15,"line": 1874,"col": 50,"name": "addrlen"},{"file": 15,"line": 3127,"col": 4,"name": "msg"},{"file": 15,"line": 3128,"col": 4,"name": "comp_dn"},{"file": 15,"line": 3129,"col": 4,"name": "exp_dn"},{"file": 15,"line": 2995,"col": 4,"docs": " The file descriptor of the sending socket.\n","name": "sockfd"},{"file": 15,"line": 2997,"col": 4,"docs": " Message to send.\n","name": "buf"},{"file": 15,"line": 2998,"col": 4,"name": "flags"},{"file": 15,"line": 2999,"col": 4,"name": "dest_addr"},{"file": 15,"line": 3000,"col": 4,"name": "addrlen"},{"file": 15,"line": 2315,"col": 15,"name": "path"},{"file": 15,"line": 2315,"col": 35,"name": "mode"},{"file": 15,"line": 1084,"col": 16,"name": "dirfd"},{"file": 15,"line": 1084,"col": 29,"name": "file_path"},{"file": 15,"line": 1084,"col": 52,"name": "flags"},{"file": 15,"line": 2254,"col": 14,"name": "memory"},{"file": 15,"line": 846,"col": 33,"name": "allocator"},{"file": 15,"line": 846,"col": 60,"name": "env_map"},{"file": 15,"line": 1423,"col": 17,"name": "file_path"},{"file": 15,"line": 1423,"col": 41,"name": "out_buffer"},{"file": 15,"line": 2104,"col": 21,"name": "flags"},{"file": 15,"line": 1444,"col": 19,"name": "dirfd"},{"file": 15,"line": 1444,"col": 32,"name": "file_path"},{"file": 15,"line": 1444,"col": 56,"name": "out_buffer"},{"file": 15,"line": 1043,"col": 14,"name": "file_path"},{"file": 15,"line": 899,"col": 15,"name": "key"},{"file": 15,"line": 2172,"col": 16,"name": "memory"},{"file": 15,"line": 2172,"col": 51,"name": "protection"},{"file": 15,"line": 1580,"col": 14,"name": "domain"},{"file": 15,"line": 1580,"col": 27,"name": "socket_type"},{"file": 15,"line": 1580,"col": 45,"name": "protocol"},{"file": 15,"line": 2288,"col": 15,"name": "path"},{"file": 15,"line": 2288,"col": 34,"name": "mode"},{"file": 15,"line": 245,"col": 12,"name": "status"},{"file": 15,"line": 2346,"col": 13,"name": "flags"},{"file": 15,"line": 116,"col": 17,"name": "buffer"},{"file": 15,"line": 2382,"col": 4,"name": "name"},{"file": 15,"line": 2383,"col": 4,"name": "oldp"},{"file": 15,"line": 2384,"col": 4,"name": "oldlenp"},{"file": 15,"line": 2385,"col": 4,"name": "newp"},{"file": 15,"line": 2386,"col": 4,"name": "newlen"},{"file": 15,"line": 1668,"col": 14,"name": "sockfd"},{"file": 15,"line": 1668,"col": 27,"name": "backlog"},{"file": 15,"line": 2217,"col": 4,"name": "ptr"},{"file": 15,"line": 2218,"col": 4,"name": "length"},{"file": 15,"line": 2219,"col": 4,"name": "prot"},{"file": 15,"line": 2220,"col": 4,"name": "flags"},{"file": 15,"line": 2221,"col": 4,"name": "fd"},{"file": 15,"line": 2222,"col": 4,"name": "offset"},{"file": 15,"line": 2623,"col": 17,"name": "seconds"},{"file": 15,"line": 2623,"col": 31,"name": "nanoseconds"},{"file": 15,"line": 759,"col": 15,"name": "path"},{"file": 15,"line": 759,"col": 34,"name": "child_argv"},{"file": 15,"line": 759,"col": 69,"name": "envp"},{"file": 15,"line": 333,"col": 13,"name": "fd"},{"file": 15,"line": 333,"col": 23,"name": "iov"},{"file": 15,"line": 1471,"col": 14,"name": "uid"},{"file": 15,"line": 1381,"col": 14,"name": "dir_path"},{"file": 15,"line": 2397,"col": 20,"name": "tv"},{"file": 15,"line": 2397,"col": 35,"name": "tz"},{"file": 15,"line": 2010,"col": 13,"name": "fd"},{"file": 15,"line": 2790,"col": 19,"name": "ss"},{"file": 15,"line": 2790,"col": 34,"name": "old_ss"},{"file": 15,"line": 1323,"col": 13,"name": "dir_path"},{"file": 15,"line": 691,"col": 14,"name": "dir_fd"},{"file": 15,"line": 691,"col": 28,"name": "file_path"},{"file": 15,"line": 691,"col": 51,"name": "flags"},{"file": 15,"line": 691,"col": 63,"name": "mode"},{"file": 15,"line": 2277,"col": 14,"name": "path"},{"file": 15,"line": 2277,"col": 32,"name": "mode"},{"file": 15,"line": 1284,"col": 14,"name": "dir_path"},{"file": 15,"line": 1284,"col": 37,"name": "mode"},{"file": 15,"line": 2805,"col": 17,"name": "sig"},{"file": 15,"line": 2805,"col": 26,"name": "act"},{"file": 15,"line": 2805,"col": 49,"name": "oact"},{"file": 15,"line": 2131,"col": 26,"name": "inotify_fd"},{"file": 15,"line": 2131,"col": 43,"name": "pathname"},{"file": 15,"line": 2131,"col": 66,"name": "mask"},{"file": 15,"line": 508,"col": 14,"name": "fd"},{"file": 15,"line": 508,"col": 24,"name": "iov"},{"file": 15,"line": 2554,"col": 16,"name": "pathname"},{"file": 15,"line": 2554,"col": 38,"name": "out_buffer"},{"file": 15,"line": 1993,"col": 15,"name": "pid"},{"file": 15,"line": 1993,"col": 25,"name": "flags"},{"file": 15,"line": 1632,"col": 12,"name": "sockfd"},{"file": 15,"line": 1632,"col": 26,"name": "addr"},{"file": 15,"line": 1632,"col": 49,"name": "len"},{"file": 15,"line": 968,"col": 16,"name": "target_path"},{"file": 15,"line": 968,"col": 42,"name": "sym_link_path"},{"file": 15,"line": 3095,"col": 4,"name": "sockfd"},{"file": 15,"line": 3096,"col": 4,"name": "buf"},{"file": 15,"line": 3097,"col": 4,"name": "flags"},{"file": 15,"line": 3098,"col": 4,"name": "src_addr"},{"file": 15,"line": 3099,"col": 4,"name": "addrlen"},{"file": 15,"line": 1855,"col": 15,"name": "initval"},{"file": 15,"line": 1855,"col": 29,"name": "flags"},{"file": 15,"line": 2493,"col": 21,"name": "fd"},{"file": 15,"line": 1834,"col": 18,"name": "epfd"},{"file": 15,"line": 1834,"col": 29,"name": "events"},{"file": 15,"line": 1834,"col": 52,"name": "timeout"},{"file": 15,"line": 818,"col": 4,"name": "allocator"},{"file": 15,"line": 819,"col": 4,"name": "argv_slice"},{"file": 15,"line": 820,"col": 4,"name": "env_map"},{"file": 15,"line": 2716,"col": 21,"name": "clk_id"},{"file": 15,"line": 2716,"col": 34,"name": "tp"},{"file": 15,"line": 2564,"col": 17,"name": "pathname"},{"file": 15,"line": 2564,"col": 40,"name": "out_buffer"},{"file": 15,"line": 869,"col": 31,"name": "allocator"},{"file": 15,"line": 869,"col": 58,"name": "envp_buf"},{"file": 15,"line": 2774,"col": 23,"name": "err"},{"file": 15,"line": 1334,"col": 14,"name": "dir_path"},{"file": 15,"line": 361,"col": 14,"name": "fd"},{"file": 15,"line": 361,"col": 24,"name": "iov"},{"file": 15,"line": 361,"col": 44,"name": "offset"},{"file": 15,"line": 1709,"col": 4,"docs": " This argument is a socket that has been created with `socket`, bound to a local address\n with `bind`, and is listening for connections after a `listen`.\n","name": "sockfd"},{"file": 15,"line": 1714,"col": 4,"docs": " This argument is a pointer to a sockaddr structure.  This structure is filled in with  the\n address  of  the  peer  socket, as known to the communications layer.  The exact format of the\n address returned addr is determined by the socket's address  family  (see  `socket`  and  the\n respective  protocol  man  pages).\n","name": "addr"},{"file": 15,"line": 1721,"col": 4,"docs": " This argument is a value-result argument: the caller must initialize it to contain  the\n size (in bytes) of the structure pointed to by addr; on return it will contain the actual size\n of the peer address.\n\n The returned address is truncated if the buffer provided is too small; in this  case,  `addr_size`\n will return a value greater than was supplied to the call.\n","name": "addr_size"},{"file": 15,"line": 1729,"col": 4,"docs": " If  flags  is  0, then `accept4` is the same as `accept`.  The following values can be bitwise\n ORed in flags to obtain different behavior:\n * `SOCK_NONBLOCK` - Set the `O_NONBLOCK` file status flag on the open file description (see `open`)\n   referred  to by the new file descriptor.  Using this flag saves extra calls to `fcntl` to achieve\n   the same result.\n * `SOCK_CLOEXEC`  - Set the close-on-exec (`FD_CLOEXEC`) flag on the new file descriptor.   See  the\n   description  of the `O_CLOEXEC` flag in `open` for reasons why this may be useful.\n","name": "flags"},{"file": 15,"line": 538,"col": 15,"name": "fd"},{"file": 15,"line": 538,"col": 25,"name": "iov"},{"file": 15,"line": 538,"col": 51,"name": "offset"},{"file": 15,"line": 1218,"col": 15,"name": "old_path"},{"file": 15,"line": 1218,"col": 38,"name": "new_path"},{"file": 15,"line": 1205,"col": 14,"name": "old_path"},{"file": 15,"line": 1205,"col": 36,"name": "new_path"},{"file": 15,"line": 2725,"col": 20,"name": "clk_id"},{"file": 15,"line": 2725,"col": 33,"name": "res"},{"file": 15,"line": 2595,"col": 17,"name": "pathname"},{"file": 15,"line": 2595,"col": 41,"name": "out_buffer"},{"file": 15,"line": 1123,"col": 17,"name": "dirfd"},{"file": 15,"line": 1123,"col": 30,"name": "sub_path_w"},{"file": 15,"line": 1123,"col": 56,"name": "flags"},{"file": 15,"line": 2750,"col": 19,"name": "file_path"},{"file": 15,"line": 158,"col": 28,"name": "buf"},{"file": 16,"line": 139,"col": 25,"name": "first_address"},{"file": 16,"line": 139,"col": 48,"name": "stack_trace"},{"file": 16,"line": 110,"col": 30,"name": "bp"},{"file": 16,"line": 110,"col": 41,"name": "ip"},{"file": 16,"line": 2452,"col": 28,"name": "prefix"},{"file": 16,"line": 775,"col": 33,"name": "debug_info"},{"file": 16,"line": 775,"col": 57,"name": "out_stream"},{"file": 16,"line": 775,"col": 74,"name": "address"},{"file": 16,"line": 775,"col": 90,"name": "tty_color"},{"file": 16,"line": 1031,"col": 26,"name": "di"},{"file": 16,"line": 1031,"col": 42,"name": "allocator"},{"file": 16,"line": 736,"col": 4,"name": "debug_info"},{"file": 16,"line": 737,"col": 4,"name": "out_stream"},{"file": 16,"line": 738,"col": 4,"name": "address"},{"file": 16,"line": 739,"col": 4,"name": "tty_color"},{"file": 16,"line": 740,"col": 4,"name": "printLineFromFile","comptime": true},{"file": 16,"line": 1040,"col": 4,"name": "allocator"},{"file": 16,"line": 1041,"col": 4,"name": "elf_seekable_stream"},{"file": 16,"line": 1042,"col": 4,"name": "elf_in_stream"},{"file": 16,"line": 1512,"col": 18,"name": "allocator"},{"file": 16,"line": 1512,"col": 45,"name": "in_stream"},{"file": 16,"line": 1512,"col": 61,"name": "size"},{"file": 16,"line": 1664,"col": 18,"name": "di"},{"file": 16,"line": 1664,"col": 34,"name": "abbrev_offset"},{"file": 16,"line": 2285,"col": 14,"name": "ptr"},{"file": 16,"line": 2285,"col": 33,"name": "T","comptime": true},{"file": 16,"line": 2285,"col": 51,"name": "endian"},{"file": 16,"line": 1562,"col": 32,"name": "in_stream"},{"file": 16,"line": 1495,"col": 17,"name": "allocator"},{"file": 16,"line": 1495,"col": 44,"name": "in_stream"},{"file": 16,"line": 1096,"col": 26,"name": "allocator"},{"file": 16,"line": 2299,"col": 21,"name": "ptr"},{"file": 16,"line": 2303,"col": 24,"name": "ptr"},{"file": 16,"line": 2303,"col": 43,"name": "is_64"},{"file": 16,"line": 1525,"col": 23,"name": "allocator"},{"file": 16,"line": 1525,"col": 50,"name": "in_stream"},{"file": 16,"line": 1525,"col": 66,"name": "size"},{"file": 16,"line": 1637,"col": 20,"name": "di"},{"file": 16,"line": 2188,"col": 23,"name": "di"},{"file": 16,"line": 1685,"col": 12,"name": "di"},{"file": 16,"line": 1685,"col": 28,"name": "abbrev_table"},{"file": 16,"line": 1685,"col": 62,"name": "is_64"},{"file": 16,"line": 1530,"col": 26,"name": "allocator"},{"file": 16,"line": 1530,"col": 53,"name": "in_stream"},{"file": 16,"line": 1530,"col": 69,"name": "signed"},{"file": 16,"line": 1530,"col": 83,"name": "size","comptime": true},{"file": 16,"line": 2074,"col": 22,"name": "di"},{"file": 16,"line": 2074,"col": 38,"name": "address"},{"file": 16,"line": 1519,"col": 26,"name": "allocator"},{"file": 16,"line": 1519,"col": 53,"name": "in_stream"},{"file": 16,"line": 1519,"col": 69,"name": "size"},{"file": 16,"line": 780,"col": 4,"name": "out_stream"},{"file": 16,"line": 781,"col": 4,"name": "line_info"},{"file": 16,"line": 782,"col": 4,"name": "address"},{"file": 16,"line": 783,"col": 4,"name": "symbol_name"},{"file": 16,"line": 784,"col": 4,"name": "compile_unit_name"},{"file": 16,"line": 785,"col": 4,"name": "tty_color"},{"file": 16,"line": 786,"col": 4,"name": "printLineFromFile","comptime": true},{"file": 16,"line": 1574,"col": 21,"name": "allocator"},{"file": 16,"line": 1574,"col": 48,"name": "in_stream"},{"file": 16,"line": 1574,"col": 64,"name": "size"},{"file": 16,"line": 1064,"col": 26,"name": "allocator"},{"file": 16,"line": 2253,"col": 19,"name": "di"},{"file": 16,"line": 2253,"col": 35,"name": "target_address"},{"file": 16,"line": 2326,"col": 21,"name": "E","comptime": true},{"file": 16,"line": 2326,"col": 39,"name": "in_stream"},{"file": 16,"line": 2326,"col": 67,"name": "is_64"},{"file": 16,"line": 1705,"col": 26,"name": "di"},{"file": 16,"line": 1705,"col": 42,"name": "symbol"},{"file": 16,"line": 1705,"col": 63,"name": "target_address"},{"file": 16,"line": 2086,"col": 20,"name": "di"},{"file": 16,"line": 2320,"col": 17,"name": "ptr"},{"file": 16,"line": 2293,"col": 15,"name": "ptr"},{"file": 16,"line": 1019,"col": 27,"name": "elf_file"},{"file": 16,"line": 1019,"col": 47,"name": "name"},{"file": 16,"line": 1557,"col": 33,"name": "in_stream"},{"file": 16,"line": 1557,"col": 49,"name": "is_64"},{"file": 16,"line": 674,"col": 22,"name": "symbols"},{"file": 16,"line": 674,"col": 52,"name": "address"},{"file": 16,"line": 1505,"col": 13,"name": "di"},{"file": 16,"line": 1505,"col": 29,"name": "offset"},{"file": 16,"line": 2403,"col": 30,"name": "sig"},{"file": 16,"line": 2403,"col": 40,"name": "info"},{"file": 16,"line": 2403,"col": 67,"name": "ctx_ptr"},{"file": 16,"line": 692,"col": 29,"name": "di"},{"file": 16,"line": 692,"col": 45,"name": "out_stream"},{"file": 16,"line": 692,"col": 62,"name": "address"},{"file": 16,"line": 692,"col": 78,"name": "tty_color"},{"file": 16,"line": 1678,"col": 23,"name": "abbrev_table"},{"file": 16,"line": 1678,"col": 57,"name": "abbrev_code"},{"file": 16,"line": 1903,"col": 26,"name": "di"},{"file": 16,"line": 1903,"col": 42,"name": "compile_unit"},{"file": 16,"line": 1903,"col": 69,"name": "target_address"},{"file": 16,"line": 1588,"col": 18,"name": "allocator"},{"file": 16,"line": 1588,"col": 45,"name": "in_stream"},{"file": 16,"line": 1588,"col": 61,"name": "form_id"},{"file": 16,"line": 1588,"col": 75,"name": "is_64"},{"file": 17,"line": 129,"col": 25,"name": "T","comptime": true},{"file": 17,"line": 129,"col": 43,"name": "expected"},{"file": 17,"line": 129,"col": 64,"name": "actual"},{"file": 17,"line": 147,"col": 14,"name": "ok"},{"file": 17,"line": 6,"col": 19,"name": "expected_error"},{"file": 17,"line": 6,"col": 45,"name": "actual_error_union"},{"file": 19,"line": 459,"col": 14,"name": "bytes"},{"file": 19,"line": 451,"col": 13,"name": "bytes"},{"file": 19,"line": 451,"col": 32,"name": "expected_err"},{"file": 19,"line": 307,"col": 19,"name": "codePoint"},{"file": 19,"line": 307,"col": 35,"name": "array"},{"file": 19,"line": 307,"col": 48,"name": "expectedErr"},{"file": 19,"line": 455,"col": 13,"name": "bytes"},{"file": 19,"line": 455,"col": 32,"name": "expected_codepoint"},{"file": 20,"line": 91,"col": 24,"name": "Error","comptime": true},{"file": 20,"line": 1074,"col": 18,"name": "endian","comptime": true},{"file": 20,"line": 1074,"col": 51,"name": "packing","comptime": true},{"file": 20,"line": 1074,"col": 78,"name": "Error","comptime": true},{"file": 20,"line": 641,"col": 20,"name": "endian"},{"file": 20,"line": 641,"col": 44,"name": "Error","comptime": true},{"file": 20,"line": 564,"col": 25,"name": "Error","comptime": true},{"file": 20,"line": 301,"col": 19,"name": "endian"},{"file": 20,"line": 301,"col": 43,"name": "Error","comptime": true},{"file": 20,"line": 817,"col": 20,"name": "stream"},{"file": 20,"line": 817,"col": 33,"name": "buf"},{"file": 20,"line": 206,"col": 18,"name": "buffer_size","comptime": true},{"file": 20,"line": 206,"col": 47,"name": "InStreamError","comptime": true},{"file": 20,"line": 568,"col": 31,"name": "buffer_size","comptime": true},{"file": 20,"line": 568,"col": 60,"name": "OutStreamError","comptime": true},{"file": 20,"line": 896,"col": 20,"name": "endian","comptime": true},{"file": 20,"line": 896,"col": 53,"name": "packing","comptime": true},{"file": 20,"line": 896,"col": 80,"name": "Error","comptime": true},{"file": 20,"line": 810,"col": 16,"name": "buf"},{"file": 20,"line": 858,"col": 25,"name": "stream"},{"file": 20,"line": 858,"col": 38,"name": "slice"},{"file": 20,"line": 95,"col": 30,"name": "buffer_size","comptime": true},{"file": 20,"line": 95,"col": 59,"name": "Error","comptime": true},{"file": 20,"line": 72,"col": 21,"name": "allocator"},{"file": 20,"line": 72,"col": 48,"name": "path"},{"file": 20,"line": 64,"col": 17,"name": "path"},{"file": 20,"line": 64,"col": 35,"name": "data"},{"file": 20,"line": 851,"col": 21,"name": "slice"},{"file": 20,"line": 528,"col": 25,"name": "OutStreamError","comptime": true},{"file": 20,"line": 78,"col": 28,"name": "allocator"},{"file": 20,"line": 78,"col": 55,"name": "path"},{"file": 20,"line": 78,"col": 73,"name": "A","comptime": true},{"file": 21,"line": 1074,"col": 19,"name": "c"},{"file": 21,"line": 1074,"col": 26,"name": "radix"},{"file": 21,"line": 1578,"col": 20,"name": "byte"},{"file": 21,"line": 574,"col": 4,"name": "c"},{"file": 21,"line": 575,"col": 4,"name": "options"},{"file": 21,"line": 576,"col": 4,"name": "context"},{"file": 21,"line": 577,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 578,"col": 4,"name": "output"},{"file": 21,"line": 699,"col": 4,"name": "value"},{"file": 21,"line": 700,"col": 4,"name": "options"},{"file": 21,"line": 701,"col": 4,"name": "context"},{"file": 21,"line": 702,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 703,"col": 4,"name": "output"},{"file": 21,"line": 1552,"col": 12,"name": "buf"},{"file": 21,"line": 604,"col": 4,"name": "value"},{"file": 21,"line": 605,"col": 4,"name": "options"},{"file": 21,"line": 606,"col": 4,"name": "context"},{"file": 21,"line": 607,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 608,"col": 4,"name": "output"},{"file": 21,"line": 844,"col": 4,"name": "value"},{"file": 21,"line": 845,"col": 4,"name": "options"},{"file": 21,"line": 846,"col": 4,"name": "radix","comptime": true},{"file": 21,"line": 847,"col": 4,"name": "context"},{"file": 21,"line": 848,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 849,"col": 4,"name": "output"},{"file": 21,"line": 1120,"col": 18,"name": "allocator"},{"file": 21,"line": 1120,"col": 45,"name": "fmt","comptime": true},{"file": 21,"line": 1120,"col": 71,"name": "args","varArgs": true},{"file": 21,"line": 998,"col": 16,"name": "T","comptime": true},{"file": 21,"line": 998,"col": 34,"name": "buf"},{"file": 21,"line": 998,"col": 51,"name": "radix"},{"file": 21,"line": 981,"col": 20,"name": "out_buf"},{"file": 21,"line": 981,"col": 35,"name": "value"},{"file": 21,"line": 981,"col": 47,"name": "base"},{"file": 21,"line": 981,"col": 57,"name": "uppercase"},{"file": 21,"line": 981,"col": 74,"name": "options"},{"file": 21,"line": 1585,"col": 18,"name": "out"},{"file": 21,"line": 1585,"col": 29,"name": "input"},{"file": 21,"line": 584,"col": 4,"name": "buf"},{"file": 21,"line": 585,"col": 4,"name": "options"},{"file": 21,"line": 586,"col": 4,"name": "context"},{"file": 21,"line": 587,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 588,"col": 4,"name": "output"},{"file": 21,"line": 1028,"col": 21,"name": "T","comptime": true},{"file": 21,"line": 1028,"col": 39,"name": "buf"},{"file": 21,"line": 1028,"col": 56,"name": "radix"},{"file": 21,"line": 1129,"col": 13,"name": "size"},{"file": 21,"line": 1129,"col": 27,"name": "bytes"},{"file": 21,"line": 25,"col": 11,"name": "used_pos_args","comptime": true},{"file": 21,"line": 25,"col": 41,"name": "maybe_pos_arg","comptime": true},{"file": 21,"line": 25,"col": 80,"name": "next_arg","comptime": true},{"file": 21,"line": 535,"col": 4,"name": "value"},{"file": 21,"line": 536,"col": 4,"name": "fmt","comptime": true},{"file": 21,"line": 537,"col": 4,"name": "options"},{"file": 21,"line": 538,"col": 4,"name": "context"},{"file": 21,"line": 539,"col": 4,"name": "Errors","comptime": true},{"file": 21,"line": 540,"col": 4,"name": "output"},{"file": 21,"line": 36,"col": 15,"name": "fmt","comptime": true},{"file": 21,"line": 1539,"col": 11,"name": "expected"},{"file": 21,"line": 1539,"col": 33,"name": "template","comptime": true},{"file": 21,"line": 1539,"col": 64,"name": "args","varArgs": true},{"file": 21,"line": 1151,"col": 22,"name": "buf"},{"file": 21,"line": 1151,"col": 33,"name": "value"},{"file": 21,"line": 1151,"col": 45,"name": "base"},{"file": 21,"line": 1151,"col": 55,"name": "uppercase"},{"file": 21,"line": 1151,"col": 72,"name": "options"},{"file": 21,"line": 993,"col": 21,"name": "context"},{"file": 21,"line": 993,"col": 45,"name": "bytes"},{"file": 26,"line": 393,"col": 11,"name": "a"},{"file": 26,"line": 393,"col": 19,"name": "b"},{"file": 26,"line": 74,"col": 16,"name": "T","comptime": true},{"file": 26,"line": 161,"col": 20,"name": "T","comptime": true},{"file": 26,"line": 547,"col": 18,"name": "T","comptime": true},{"file": 26,"line": 547,"col": 36,"name": "name","comptime": true},{"file": 26,"line": 556,"col": 19,"name": "T","comptime": true},{"file": 26,"line": 278,"col": 17,"name": "T","comptime": true},{"file": 26,"line": 278,"col": 35,"name": "field_name","comptime": true},{"file": 26,"line": 341,"col": 17,"name": "u"},{"file": 26,"line": 197,"col": 23,"name": "T","comptime": true},{"file": 26,"line": 197,"col": 41,"name": "decl_name","comptime": true},{"file": 26,"line": 318,"col": 15,"name": "T","comptime": true},{"file": 26,"line": 118,"col": 23,"name": "T","comptime": true},{"file": 26,"line": 12,"col": 15,"name": "v"},{"file": 26,"line": 534,"col": 17,"name": "Tag","comptime": true},{"file": 26,"line": 534,"col": 37,"name": "tag_int"},{"file": 26,"line": 366,"col": 22,"name": "U","comptime": true},{"file": 26,"line": 366,"col": 40,"name": "tag"},{"file": 26,"line": 55,"col": 20,"name": "T","comptime": true},{"file": 26,"line": 55,"col": 38,"name": "str"},{"file": 26,"line": 233,"col": 14,"name": "T","comptime": true},{"file": 27,"line": 289,"col": 16,"name": "allocator"},{"file": 27,"line": 289,"col": 39,"name": "full_path"},{"file": 27,"line": 1136,"col": 16,"name": "pathname"},{"file": 27,"line": 1136,"col": 38,"name": "buffer"},{"file": 27,"line": 333,"col": 18,"name": "dir_path"},{"file": 27,"line": 1112,"col": 16,"name": "allocator"},{"file": 27,"line": 1112,"col": 39,"name": "dir_path"},{"file": 27,"line": 1181,"col": 19,"name": "out_buffer"},{"file": 27,"line": 87,"col": 22,"name": "source_path"},{"file": 27,"line": 87,"col": 47,"name": "dest_path"},{"file": 27,"line": 87,"col": 70,"name": "mode"},{"file": 27,"line": 323,"col": 17,"name": "dir_path"},{"file": 27,"line": 156,"col": 16,"name": "source_path"},{"file": 27,"line": 156,"col": 41,"name": "dest_path"},{"file": 27,"line": 179,"col": 20,"name": "source_path"},{"file": 27,"line": 179,"col": 45,"name": "dest_path"},{"file": 27,"line": 179,"col": 68,"name": "mode"},{"file": 27,"line": 1247,"col": 21,"name": "allocator"},{"file": 27,"line": 1247,"col": 44,"name": "pathname"},{"file": 27,"line": 342,"col": 18,"name": "full_path"},{"file": 27,"line": 270,"col": 15,"name": "dir_path"},{"file": 27,"line": 1222,"col": 27,"name": "allocator"},{"file": 27,"line": 280,"col": 16,"name": "dir_path"},{"file": 27,"line": 77,"col": 18,"name": "source_path"},{"file": 27,"line": 77,"col": 43,"name": "dest_path"},{"file": 27,"line": 1229,"col": 22,"name": "out_buffer"},{"file": 27,"line": 328,"col": 18,"name": "dir_path"},{"file": 27,"line": 275,"col": 16,"name": "dir_path"},{"file": 27,"line": 43,"col": 21,"name": "allocator"},{"file": 27,"line": 43,"col": 44,"name": "existing_path"},{"file": 27,"line": 43,"col": 71,"name": "new_path"},{"file": 27,"line": 1141,"col": 17,"name": "pathname_c"},{"file": 27,"line": 1141,"col": 42,"name": "buffer"},{"file": 28,"line": 637,"col": 21,"name": "size","comptime": true},{"file": 28,"line": 637,"col": 43,"name": "fallback_allocator"},{"file": 28,"line": 649,"col": 30,"name": "size","comptime": true},{"file": 28,"line": 865,"col": 24,"name": "allocator"},{"file": 28,"line": 865,"col": 51,"name": "alignment","comptime": true},{"file": 28,"line": 918,"col": 30,"name": "allocator"},{"file": 28,"line": 488,"col": 39},{"file": 28,"line": 837,"col": 17,"name": "allocator"},{"file": 28,"line": 27,"col": 11,"name": "self"},{"file": 28,"line": 27,"col": 29,"name": "old_mem"},{"file": 28,"line": 27,"col": 44,"name": "old_align"},{"file": 28,"line": 27,"col": 60,"name": "new_size"},{"file": 28,"line": 27,"col": 77,"name": "new_align"},{"file": 28,"line": 20,"col": 12,"name": "self"},{"file": 28,"line": 20,"col": 30,"name": "old_mem"},{"file": 28,"line": 20,"col": 45,"name": "old_align"},{"file": 28,"line": 20,"col": 61,"name": "new_size"},{"file": 28,"line": 20,"col": 78,"name": "new_align"},{"file": 28,"line": 889,"col": 31,"name": "allocator"},{"file": 28,"line": 489,"col": 39},{"file": 28,"line": 489,"col": 44},{"file": 40,"line": 418,"col": 22,"name": "self"},{"file": 40,"line": 549,"col": 30,"name": "self"},{"file": 40,"line": 209,"col": 21,"name": "self"},{"file": 40,"line": 209,"col": 35,"name": "allocator"},{"file": 40,"line": 474,"col": 18,"name": "self"},{"file": 40,"line": 404,"col": 23,"name": "self"},{"file": 40,"line": 492,"col": 20,"name": "self"},{"file": 40,"line": 467,"col": 19,"name": "self"},{"file": 40,"line": 260,"col": 30,"name": "self"},{"file": 40,"line": 260,"col": 44,"name": "allocator"},{"file": 40,"line": 481,"col": 19,"name": "self"},{"file": 40,"line": 350,"col": 24,"name": "text"},{"file": 40,"line": 430,"col": 27,"name": "self"},{"file": 40,"line": 499,"col": 21,"name": "self"},{"file": 40,"line": 411,"col": 20,"name": "self"},{"file": 40,"line": 527,"col": 21,"name": "self"},{"file": 40,"line": 485,"col": 17,"name": "self"},{"file": 40,"line": 254,"col": 28,"name": "self"},{"file": 40,"line": 254,"col": 42,"name": "allocator"},{"file": 40,"line": 221,"col": 24,"name": "allocator"},{"file": 40,"line": 221,"col": 51,"name": "target"},{"file": 40,"line": 221,"col": 67,"name": "linkage"},{"file": 40,"line": 440,"col": 28,"name": "self"},{"file": 40,"line": 545,"col": 26,"name": "self"},{"file": 40,"line": 270,"col": 23,"name": "self"},{"file": 40,"line": 270,"col": 37,"name": "allocator"},{"file": 40,"line": 541,"col": 33,"name": "self"},{"file": 40,"line": 371,"col": 19,"name": "text"},{"file": 40,"line": 460,"col": 17,"name": "self"},{"file": 40,"line": 450,"col": 21,"name": "self"},{"file": 40,"line": 534,"col": 20,"name": "self"},{"file": 40,"line": 280,"col": 17,"name": "text"},{"file": 40,"line": 506,"col": 19,"name": "self"},{"file": 40,"line": 616,"col": 31,"name": "self"},{"file": 40,"line": 381,"col": 20,"name": "text"},{"file": 40,"line": 513,"col": 18,"name": "self"},{"file": 40,"line": 295,"col": 22,"name": "arch"},{"file": 40,"line": 295,"col": 34,"name": "target_os"},{"file": 40,"line": 520,"col": 18,"name": "self"},{"file": 40,"line": 391,"col": 23,"name": "arch"},{"file": 36,"line": 21,"col": 19,"name": "self"},{"file": 30,"line": 37,"col": 17,"name": "allocator"},{"file": 30,"line": 454,"col": 16,"name": "allocator"},{"file": 30,"line": 454,"col": 43,"name": "args_alloc"},{"file": 30,"line": 515,"col": 24,"name": "name"},{"file": 30,"line": 389,"col": 17,"name": "allocator"},{"file": 30,"line": 18,"col": 14,"name": "out_buffer"},{"file": 30,"line": 506,"col": 19,"name": "name"},{"file": 30,"line": 491,"col": 22,"name": "input_cmd_line"},{"file": 30,"line": 491,"col": 51,"name": "expected_args"},{"file": 33,"line": 138,"col": 19,"name": "path_w"},{"file": 33,"line": 176,"col": 23,"name": "path"},{"file": 33,"line": 716,"col": 15,"name": "path"},{"file": 33,"line": 964,"col": 16,"name": "allocator"},{"file": 33,"line": 964,"col": 39,"name": "from"},{"file": 33,"line": 964,"col": 57,"name": "to"},{"file": 33,"line": 570,"col": 20,"name": "allocator"},{"file": 33,"line": 570,"col": 43,"name": "paths"},{"file": 33,"line": 724,"col": 22,"name": "path"},{"file": 33,"line": 84,"col": 17,"name": "allocator"},{"file": 33,"line": 84,"col": 40,"name": "paths"},{"file": 33,"line": 758,"col": 20,"name": "path"},{"file": 33,"line": 972,"col": 23,"name": "allocator"},{"file": 33,"line": 972,"col": 46,"name": "from"},{"file": 33,"line": 972,"col": 64,"name": "to"},{"file": 33,"line": 78,"col": 19,"name": "allocator"},{"file": 33,"line": 78,"col": 42,"name": "paths"},{"file": 33,"line": 308,"col": 22,"name": "path"},{"file": 33,"line": 316,"col": 29,"name": "path"},{"file": 33,"line": 23,"col": 13,"name": "byte"},{"file": 33,"line": 1045,"col": 21,"name": "allocator"},{"file": 33,"line": 1045,"col": 44,"name": "from"},{"file": 33,"line": 1045,"col": 62,"name": "to"},{"file": 33,"line": 856,"col": 21,"name": "path"},{"file": 33,"line": 33,"col": 11,"name": "allocator"},{"file": 33,"line": 33,"col": 34,"name": "separator"},{"file": 33,"line": 33,"col": 49,"name": "paths"},{"file": 33,"line": 213,"col": 23,"name": "path"},{"file": 33,"line": 213,"col": 41,"name": "expected_result"},{"file": 33,"line": 710,"col": 20,"name": "paths"},{"file": 33,"line": 956,"col": 23,"name": "input"},{"file": 33,"line": 956,"col": 42,"name": "expected_output"},{"file": 33,"line": 840,"col": 22,"name": "input"},{"file": 33,"line": 840,"col": 41,"name": "expected_output"},{"file": 33,"line": 209,"col": 25,"name": "path"},{"file": 33,"line": 209,"col": 43,"name": "expected_result"},{"file": 33,"line": 948,"col": 16,"name": "input"},{"file": 33,"line": 948,"col": 35,"name": "expected_output"},{"file": 33,"line": 95,"col": 17,"name": "paths"},{"file": 33,"line": 95,"col": 44,"name": "expected"},{"file": 33,"line": 832,"col": 20,"name": "input"},{"file": 33,"line": 832,"col": 39,"name": "expected_output"},{"file": 33,"line": 320,"col": 26,"name": "ns1"},{"file": 33,"line": 320,"col": 43,"name": "ns2"},{"file": 33,"line": 1139,"col": 23,"name": "from"},{"file": 33,"line": 1139,"col": 41,"name": "to"},{"file": 33,"line": 1139,"col": 57,"name": "expected_output"},{"file": 33,"line": 88,"col": 19,"name": "paths"},{"file": 33,"line": 88,"col": 46,"name": "expected"},{"file": 33,"line": 706,"col": 22,"name": "paths"},{"file": 33,"line": 1134,"col": 21,"name": "from"},{"file": 33,"line": 1134,"col": 39,"name": "to"},{"file": 33,"line": 1134,"col": 55,"name": "expected_output"},{"file": 33,"line": 952,"col": 21,"name": "input"},{"file": 33,"line": 952,"col": 40,"name": "expected_output"},{"file": 34,"line": 157,"col": 10,"name": "ctx"},{"file": 29,"line": 166,"col": 17,"name": "self"},{"file": 29,"line": 171,"col": 15,"name": "self"},{"file": 39,"line": 942,"col": 24,"name": "h"},{"file": 39,"line": 942,"col": 42,"name": "did_it"},{"file": 41,"line": 58,"col": 13,"name": "name","comptime": true},{"file": 41,"line": 155,"col": 16,"name": "T","comptime": true},{"file": 41,"line": 338,"col": 19,"name": "T","comptime": true},{"file": 41,"line": 22,"col": 18,"name": "traits","comptime": true},{"file": 41,"line": 300,"col": 16,"name": "T","comptime": true},{"file": 41,"line": 197,"col": 21,"name": "T","comptime": true},{"file": 41,"line": 244,"col": 21,"name": "T","comptime": true},{"file": 41,"line": 212,"col": 19,"name": "T","comptime": true},{"file": 41,"line": 277,"col": 19,"name": "T","comptime": true},{"file": 41,"line": 134,"col": 15,"name": "id","comptime": true},{"file": 41,"line": 176,"col": 16,"name": "T","comptime": true},{"file": 41,"line": 82,"col": 16,"name": "name","comptime": true},{"file": 41,"line": 11,"col": 21,"name": "T","comptime": true},{"file": 45,"line": 792,"col": 19,"name": "hns"},{"file": 45,"line": 187,"col": 4,"name": "file_handle"},{"file": 45,"line": 188,"col": 4,"name": "existing_completion_port"},{"file": 45,"line": 189,"col": 4,"name": "completion_key"},{"file": 45,"line": 190,"col": 4,"name": "concurrent_thread_count"},{"file": 45,"line": 156,"col": 21,"name": "dir_path"},{"file": 45,"line": 156,"col": 43,"name": "find_file_data"},{"file": 45,"line": 733,"col": 19,"name": "hHeap"},{"file": 45,"line": 100,"col": 28,"name": "h"},{"file": 45,"line": 100,"col": 39,"name": "mask"},{"file": 45,"line": 100,"col": 52,"name": "flags"},{"file": 45,"line": 136,"col": 27,"name": "handle"},{"file": 45,"line": 136,"col": 43,"name": "milliseconds"},{"file": 45,"line": 518,"col": 4,"name": "hFile"},{"file": 45,"line": 519,"col": 4,"name": "buf_ptr"},{"file": 45,"line": 520,"col": 4,"name": "buf_len"},{"file": 45,"line": 521,"col": 4,"name": "flags"},{"file": 45,"line": 385,"col": 18,"name": "old_path"},{"file": 45,"line": 385,"col": 40,"name": "new_path"},{"file": 45,"line": 385,"col": 62,"name": "flags"},{"file": 45,"line": 345,"col": 4,"name": "sym_link_path"},{"file": 45,"line": 346,"col": 4,"name": "target_path"},{"file": 45,"line": 347,"col": 4,"name": "flags"},{"file": 45,"line": 391,"col": 19,"name": "old_path"},{"file": 45,"line": 391,"col": 43,"name": "new_path"},{"file": 45,"line": 391,"col": 67,"name": "flags"},{"file": 45,"line": 174,"col": 20,"name": "handle"},{"file": 45,"line": 174,"col": 36,"name": "find_file_data"},{"file": 45,"line": 802,"col": 29,"name": "ft"},{"file": 45,"line": 426,"col": 23,"name": "dir_path"},{"file": 45,"line": 90,"col": 18,"name": "rd"},{"file": 45,"line": 90,"col": 31,"name": "wr"},{"file": 45,"line": 90,"col": 44,"name": "sattr"},{"file": 45,"line": 431,"col": 24,"name": "dir_path_w"},{"file": 45,"line": 560,"col": 26,"name": "lpFileName"},{"file": 45,"line": 797,"col": 17,"name": "ns"},{"file": 45,"line": 725,"col": 27,"name": "InitOnce"},{"file": 45,"line": 725,"col": 49,"name": "InitFn"},{"file": 45,"line": 725,"col": 71,"name": "Parameter"},{"file": 45,"line": 725,"col": 92,"name": "Context"},{"file": 45,"line": 703,"col": 19,"name": "hModule"},{"file": 45,"line": 625,"col": 31,"name": "penv"},{"file": 45,"line": 405,"col": 23,"name": "pathname"},{"file": 45,"line": 405,"col": 45,"name": "attrs"},{"file": 45,"line": 587,"col": 24,"name": "hProcess"},{"file": 45,"line": 587,"col": 42,"name": "uExitCode"},{"file": 45,"line": 204,"col": 4,"name": "completion_port"},{"file": 45,"line": 205,"col": 4,"name": "bytes_transferred_count"},{"file": 45,"line": 206,"col": 4,"name": "completion_key"},{"file": 45,"line": 207,"col": 4,"name": "lpOverlapped"},{"file": 45,"line": 113,"col": 20,"name": "output"},{"file": 45,"line": 555,"col": 25,"name": "filename"},{"file": 45,"line": 692,"col": 20,"name": "lpLibFileName"},{"file": 45,"line": 255,"col": 17,"name": "hFindFile"},{"file": 45,"line": 410,"col": 24,"name": "pathname"},{"file": 45,"line": 410,"col": 48,"name": "attrs"},{"file": 45,"line": 816,"col": 27,"name": "s"},{"file": 45,"line": 496,"col": 36,"name": "handle"},{"file": 45,"line": 335,"col": 4,"name": "sym_link_path"},{"file": 45,"line": 336,"col": 4,"name": "target_path"},{"file": 45,"line": 337,"col": 4,"name": "flags"},{"file": 45,"line": 808,"col": 29,"name": "ns"},{"file": 45,"line": 729,"col": 16,"name": "hHeap"},{"file": 45,"line": 729,"col": 31,"name": "dwFlags"},{"file": 45,"line": 729,"col": 47,"name": "lpMem"},{"file": 45,"line": 364,"col": 18,"name": "filename"},{"file": 45,"line": 224,"col": 4,"name": "completion_port"},{"file": 45,"line": 225,"col": 4,"name": "bytes_transferred_count"},{"file": 45,"line": 226,"col": 4,"name": "lpCompletionKey"},{"file": 45,"line": 227,"col": 4,"name": "lpOverlapped"},{"file": 45,"line": 228,"col": 4,"name": "dwMilliseconds"},{"file": 45,"line": 446,"col": 20,"name": "handle_id"},{"file": 45,"line": 872,"col": 24,"name": "status"},{"file": 45,"line": 369,"col": 19,"name": "filename"},{"file": 45,"line": 755,"col": 4,"name": "hFile"},{"file": 45,"line": 756,"col": 4,"name": "lpCreationTime"},{"file": 45,"line": 757,"col": 4,"name": "lpLastAccessTime"},{"file": 45,"line": 758,"col": 4,"name": "lpLastWriteTime"},{"file": 45,"line": 740,"col": 4,"name": "hFile"},{"file": 45,"line": 485,"col": 28,"name": "handle"},{"file": 45,"line": 485,"col": 44,"name": "offset"},{"file": 45,"line": 48,"col": 4,"name": "file_path"},{"file": 45,"line": 49,"col": 4,"name": "desired_access"},{"file": 45,"line": 50,"col": 4,"name": "share_mode"},{"file": 45,"line": 51,"col": 4,"name": "lpSecurityAttributes"},{"file": 45,"line": 52,"col": 4,"name": "creation_disposition"},{"file": 45,"line": 53,"col": 4,"name": "flags_and_attrs"},{"file": 45,"line": 54,"col": 4,"name": "hTemplateFile"},{"file": 45,"line": 653,"col": 4,"name": "lpApplicationName"},{"file": 45,"line": 654,"col": 4,"name": "lpCommandLine"},{"file": 45,"line": 655,"col": 4,"name": "lpProcessAttributes"},{"file": 45,"line": 656,"col": 4,"name": "lpThreadAttributes"},{"file": 45,"line": 657,"col": 4,"name": "bInheritHandles"},{"file": 45,"line": 658,"col": 4,"name": "dwCreationFlags"},{"file": 45,"line": 659,"col": 4,"name": "lpEnvironment"},{"file": 45,"line": 660,"col": 4,"name": "lpCurrentDirectory"},{"file": 45,"line": 661,"col": 4,"name": "lpStartupInfo"},{"file": 45,"line": 662,"col": 4,"name": "lpProcessInformation"},{"file": 16,"line": 1215,"col": 23,"name": "lhs"},{"file": 16,"line": 1215,"col": 41,"name": "rhs"},{"file": 16,"line": 1211,"col": 15,"name": "self"},{"file": 39,"line": 678,"col": 26,"name": "self"},{"file": 39,"line": 615,"col": 22,"name": "self"},{"file": 39,"line": 615,"col": 35,"name": "node"},{"file": 39,"line": 110,"col": 30,"name": "self"},{"file": 39,"line": 674,"col": 25,"name": "self"},{"file": 39,"line": 162,"col": 18,"name": "self"},{"file": 39,"line": 439,"col": 22,"name": "self"},{"file": 39,"line": 439,"col": 35,"name": "fd"},{"file": 39,"line": 439,"col": 44,"name": "op"},{"file": 39,"line": 439,"col": 53,"name": "flags"},{"file": 39,"line": 439,"col": 65,"name": "resume_node"},{"file": 39,"line": 652,"col": 17,"name": "self"},{"file": 39,"line": 508,"col": 31,"name": "self"},{"file": 39,"line": 508,"col": 44,"name": "fd"},{"file": 39,"line": 448,"col": 25,"name": "self"},{"file": 39,"line": 448,"col": 38,"name": "fd"},{"file": 39,"line": 627,"col": 15,"name": "self"},{"file": 39,"line": 549,"col": 24,"name": "self"},{"file": 39,"line": 549,"col": 37,"name": "ident"},{"file": 39,"line": 549,"col": 51,"name": "filter"},{"file": 39,"line": 120,"col": 29,"name": "self"},{"file": 39,"line": 533,"col": 21,"name": "self"},{"file": 39,"line": 533,"col": 34,"name": "resume_node"},{"file": 39,"line": 533,"col": 66,"name": "ident"},{"file": 39,"line": 533,"col": 80,"name": "filter"},{"file": 39,"line": 533,"col": 93,"name": "fflags"},{"file": 39,"line": 516,"col": 28,"name": "self"},{"file": 39,"line": 516,"col": 41,"name": "ident"},{"file": 39,"line": 516,"col": 55,"name": "filter"},{"file": 39,"line": 516,"col": 68,"name": "fflags"},{"file": 39,"line": 621,"col": 28,"name": "self"},{"file": 39,"line": 621,"col": 41,"name": "node"},{"file": 39,"line": 453,"col": 23,"name": "self"},{"file": 39,"line": 453,"col": 36,"name": "fd"},{"file": 39,"line": 453,"col": 45,"name": "flags"},{"file": 39,"line": 512,"col": 41,"name": "self"},{"file": 39,"line": 512,"col": 54,"name": "fd"},{"file": 39,"line": 98,"col": 16,"name": "self"},{"file": 39,"line": 504,"col": 31,"name": "self"},{"file": 39,"line": 504,"col": 44,"name": "fd"},{"file": 39,"line": 129,"col": 26,"name": "self"},{"file": 39,"line": 129,"col": 39,"name": "thread_count"},{"file": 39,"line": 427,"col": 22,"name": "self"},{"file": 39,"line": 427,"col": 35,"name": "fd"},{"file": 39,"line": 427,"col": 44,"name": "resume_node"},{"file": 39,"line": 427,"col": 70,"name": "flags"},{"file": 39,"line": 806,"col": 22,"name": "self"},{"file": 39,"line": 806,"col": 35,"name": "request_node"},{"file": 39,"line": 173,"col": 18,"name": "self"},{"file": 39,"line": 173,"col": 31,"name": "extra_thread_count"},{"file": 39,"line": 406,"col": 20,"name": "self"},{"file": 39,"line": 836,"col": 18,"name": "self"},{"file": 39,"line": 828,"col": 21,"name": "self"},{"file": 39,"line": 828,"col": 34,"name": "request_node"},{"file": 39,"line": 713,"col": 17,"name": "self"},{"file": 39,"line": 564,"col": 16,"name": "self"},{"file": 46,"line": 55,"col": 17,"name": "hasher"},{"file": 46,"line": 55,"col": 30,"name": "key"},{"file": 46,"line": 55,"col": 40,"name": "strat","comptime": true},{"file": 46,"line": 23,"col": 19,"name": "hasher"},{"file": 46,"line": 23,"col": 32,"name": "key"},{"file": 46,"line": 23,"col": 42,"name": "strat","comptime": true},{"file": 46,"line": 200,"col": 16,"name": "key"},{"file": 46,"line": 186,"col": 12,"name": "key"},{"file": 46,"line": 207,"col": 25,"name": "key"},{"file": 46,"line": 193,"col": 19,"name": "key"},{"file": 51,"line": 23,"col": 40,"name": "Handle"},{"file": 51,"line": 58,"col": 4,"name": "EventHandle"},{"file": 51,"line": 59,"col": 4,"name": "Key"},{"file": 51,"line": 60,"col": 4,"name": "Alertable"},{"file": 51,"line": 61,"col": 4,"name": "Timeout"},{"file": 51,"line": 11,"col": 4,"name": "FileHandle"},{"file": 51,"line": 12,"col": 4,"name": "DesiredAccess"},{"file": 51,"line": 13,"col": 4,"name": "ObjectAttributes"},{"file": 51,"line": 14,"col": 4,"name": "IoStatusBlock"},{"file": 51,"line": 15,"col": 4,"name": "AllocationSize"},{"file": 51,"line": 16,"col": 4,"name": "FileAttributes"},{"file": 51,"line": 17,"col": 4,"name": "ShareAccess"},{"file": 51,"line": 18,"col": 4,"name": "CreateDisposition"},{"file": 51,"line": 19,"col": 4,"name": "CreateOptions"},{"file": 51,"line": 20,"col": 4,"name": "EaBuffer"},{"file": 51,"line": 21,"col": 4,"name": "EaLength"},{"file": 51,"line": 52,"col": 4,"name": "EventHandle"},{"file": 51,"line": 53,"col": 4,"name": "Key"},{"file": 51,"line": 54,"col": 4,"name": "Alertable"},{"file": 51,"line": 55,"col": 4,"name": "Timeout"},{"file": 51,"line": 30,"col": 53,"name": "UnicodeString"},{"file": 51,"line": 2,"col": 57,"name": "FramesToSkip"},{"file": 51,"line": 2,"col": 78,"name": "FramesToCapture"},{"file": 51,"line": 2,"col": 102,"name": "BackTrace"},{"file": 51,"line": 2,"col": 123,"name": "BackTraceHash"},{"file": 51,"line": 25,"col": 4,"name": "DosPathName"},{"file": 51,"line": 26,"col": 4,"name": "NtPathName"},{"file": 51,"line": 27,"col": 4,"name": "NtFileNamePart"},{"file": 51,"line": 28,"col": 4,"name": "DirectoryInfo"},{"file": 51,"line": 33,"col": 4,"name": "FileHandle"},{"file": 51,"line": 34,"col": 4,"name": "Event"},{"file": 51,"line": 35,"col": 4,"name": "ApcRoutine"},{"file": 51,"line": 36,"col": 4,"name": "ApcContext"},{"file": 51,"line": 37,"col": 4,"name": "IoStatusBlock"},{"file": 51,"line": 38,"col": 4,"name": "FileInformation"},{"file": 51,"line": 39,"col": 4,"name": "Length"},{"file": 51,"line": 40,"col": 4,"name": "FileInformationClass"},{"file": 51,"line": 41,"col": 4,"name": "ReturnSingleEntry"},{"file": 51,"line": 42,"col": 4,"name": "FileName"},{"file": 51,"line": 43,"col": 4,"name": "RestartScan"},{"file": 51,"line": 4,"col": 4,"name": "FileHandle"},{"file": 51,"line": 5,"col": 4,"name": "IoStatusBlock"},{"file": 51,"line": 6,"col": 4,"name": "FileInformation"},{"file": 51,"line": 7,"col": 4,"name": "Length"},{"file": 51,"line": 8,"col": 4,"name": "FileInformationClass"},{"file": 51,"line": 46,"col": 4,"name": "KeyedEventHandle"},{"file": 51,"line": 47,"col": 4,"name": "DesiredAccess"},{"file": 51,"line": 48,"col": 4,"name": "ObjectAttributes"},{"file": 51,"line": 49,"col": 4,"name": "Flags"},{"file": 52,"line": 43,"col": 58,"name": "FileHandle"},{"file": 52,"line": 43,"col": 78,"name": "ExistingCompletionPort"},{"file": 52,"line": 43,"col": 111,"name": "CompletionKey"},{"file": 52,"line": 43,"col": 137,"name": "NumberOfConcurrentThreads"},{"file": 52,"line": 197,"col": 4,"name": "in_hFile"},{"file": 52,"line": 198,"col": 4,"name": "in_lpBuffer"},{"file": 52,"line": 199,"col": 4,"name": "in_nNumberOfBytesToWrite"},{"file": 52,"line": 200,"col": 4,"name": "out_lpNumberOfBytesWritten"},{"file": 52,"line": 201,"col": 4,"name": "in_out_lpOverlapped"},{"file": 52,"line": 116,"col": 47,"name": "hHeap"},{"file": 52,"line": 7,"col": 47,"name": "hObject"},{"file": 52,"line": 131,"col": 47,"name": "lpAddress"},{"file": 52,"line": 131,"col": 67,"name": "dwSize"},{"file": 52,"line": 131,"col": 83,"name": "dwFreeType"},{"file": 52,"line": 213,"col": 56,"name": "lpCriticalSection"},{"file": 52,"line": 76,"col": 54,"name": "hProcess"},{"file": 52,"line": 76,"col": 72,"name": "lpExitCode"},{"file": 52,"line": 182,"col": 56,"name": "hObject"},{"file": 52,"line": 182,"col": 73,"name": "dwMask"},{"file": 52,"line": 182,"col": 88,"name": "dwFlags"},{"file": 52,"line": 194,"col": 55,"name": "hHandle"},{"file": 52,"line": 194,"col": 72,"name": "dwMilliseconds"},{"file": 52,"line": 184,"col": 41,"name": "dwMilliseconds"},{"file": 52,"line": 63,"col": 50,"name": "in_hConsoleHandle"},{"file": 52,"line": 63,"col": 77,"name": "out_lpMode"},{"file": 52,"line": 53,"col": 50,"name": "lpFileName"},{"file": 52,"line": 53,"col": 76,"name": "lpFindFileData"},{"file": 52,"line": 101,"col": 4,"name": "hFile"},{"file": 52,"line": 102,"col": 4,"name": "lpszFilePath"},{"file": 52,"line": 103,"col": 4,"name": "cchFilePath"},{"file": 52,"line": 104,"col": 4,"name": "dwFlags"},{"file": 52,"line": 65,"col": 62,"name": "hConsoleOutput"},{"file": 52,"line": 65,"col": 86,"name": "lpConsoleScreenBufferInfo"},{"file": 52,"line": 130,"col": 48,"name": "lpAddress"},{"file": 52,"line": 130,"col": 68,"name": "dwSize"},{"file": 52,"line": 130,"col": 84,"name": "flAllocationType"},{"file": 52,"line": 130,"col": 109,"name": "flProtect"},{"file": 52,"line": 212,"col": 61,"name": "lpCriticalSection"},{"file": 52,"line": 2,"col": 63,"name": "First"},{"file": 52,"line": 2,"col": 79,"name": "Handler"},{"file": 52,"line": 41,"col": 55,"name": "lpSymlinkFileName"},{"file": 52,"line": 41,"col": 88,"name": "lpTargetFileName"},{"file": 52,"line": 41,"col": 120,"name": "dwFlags"},{"file": 52,"line": 134,"col": 4,"name": "lpExistingFileName"},{"file": 52,"line": 135,"col": 4,"name": "lpNewFileName"},{"file": 52,"line": 136,"col": 4,"name": "dwFlags"},{"file": 52,"line": 112,"col": 49,"name": "lpSystemInfo"},{"file": 52,"line": 51,"col": 47,"name": "exit_code"},{"file": 52,"line": 157,"col": 4,"name": "in_hFile"},{"file": 52,"line": 158,"col": 4,"name": "out_lpBuffer"},{"file": 52,"line": 159,"col": 4,"name": "in_nNumberOfBytesToRead"},{"file": 52,"line": 160,"col": 4,"name": "out_lpNumberOfBytesRead"},{"file": 52,"line": 161,"col": 4,"name": "in_out_lpOverlapped"},{"file": 52,"line": 3,"col": 66,"name": "Handle"},{"file": 52,"line": 67,"col": 56,"name": "nBufferLength"},{"file": 52,"line": 67,"col": 78,"name": "lpBuffer"},{"file": 52,"line": 22,"col": 4,"name": "hReadPipe"},{"file": 52,"line": 23,"col": 4,"name": "hWritePipe"},{"file": 52,"line": 24,"col": 4,"name": "lpPipeAttributes"},{"file": 52,"line": 25,"col": 4,"name": "nSize"},{"file": 52,"line": 124,"col": 45,"name": "hHeap"},{"file": 52,"line": 124,"col": 60,"name": "dwFlags"},{"file": 52,"line": 124,"col": 76,"name": "dwBytes"},{"file": 52,"line": 204,"col": 47,"name": "hFile"},{"file": 52,"line": 204,"col": 62,"name": "lpBuffer"},{"file": 52,"line": 204,"col": 85,"name": "nNumberOfBytesToWrite"},{"file": 52,"line": 204,"col": 115,"name": "lpOverlapped"},{"file": 52,"line": 204,"col": 143,"name": "lpCompletionRoutine"},{"file": 52,"line": 115,"col": 46,"name": "flOptions"},{"file": 52,"line": 115,"col": 64,"name": "dwInitialSize"},{"file": 52,"line": 115,"col": 87,"name": "dwMaximumSize"},{"file": 52,"line": 164,"col": 52,"name": "lpPathName"},{"file": 52,"line": 80,"col": 54,"name": "lpFileName"},{"file": 52,"line": 217,"col": 55,"name": "InitOnce"},{"file": 52,"line": 217,"col": 77,"name": "InitFn"},{"file": 52,"line": 217,"col": 99,"name": "Parameter"},{"file": 52,"line": 217,"col": 120,"name": "Context"},{"file": 52,"line": 57,"col": 50,"name": "dwFlags"},{"file": 52,"line": 57,"col": 66,"name": "lpSource"},{"file": 52,"line": 57,"col": 85,"name": "dwMessageId"},{"file": 52,"line": 57,"col": 105,"name": "dwLanguageId"},{"file": 52,"line": 57,"col": 126,"name": "lpBuffer"},{"file": 52,"line": 57,"col": 144,"name": "nSize"},{"file": 52,"line": 57,"col": 158,"name": "Arguments"},{"file": 52,"line": 128,"col": 48,"name": "hHeap"},{"file": 52,"line": 128,"col": 63,"name": "dwFlags"},{"file": 52,"line": 128,"col": 79,"name": "lpMem"},{"file": 52,"line": 84,"col": 52,"name": "lpModuleName"},{"file": 52,"line": 210,"col": 47,"name": "hModule"},{"file": 52,"line": 59,"col": 59,"name": "penv"},{"file": 52,"line": 143,"col": 61,"name": "lpFrequency"},{"file": 52,"line": 82,"col": 54,"name": "hModule"},{"file": 52,"line": 82,"col": 73,"name": "lpFilename"},{"file": 52,"line": 82,"col": 93,"name": "nSize"},{"file": 52,"line": 107,"col": 55,"name": "hFile"},{"file": 52,"line": 107,"col": 70,"name": "lpOverlapped"},{"file": 52,"line": 107,"col": 97,"name": "lpNumberOfBytesTransferred"},{"file": 52,"line": 107,"col": 133,"name": "bWait"},{"file": 52,"line": 119,"col": 47,"name": "hHeap"},{"file": 52,"line": 119,"col": 62,"name": "dwFlags"},{"file": 52,"line": 45,"col": 48,"name": "lpThreadAttributes"},{"file": 52,"line": 45,"col": 92,"name": "dwStackSize"},{"file": 52,"line": 45,"col": 113,"name": "lpStartAddress"},{"file": 52,"line": 45,"col": 153,"name": "lpParameter"},{"file": 52,"line": 45,"col": 175,"name": "dwCreationFlags"},{"file": 52,"line": 45,"col": 199,"name": "lpThreadId"},{"file": 52,"line": 55,"col": 49,"name": "hFindFile"},{"file": 52,"line": 55,"col": 68,"name": "lpFindFileData"},{"file": 52,"line": 120,"col": 47,"name": "hHeap"},{"file": 52,"line": 120,"col": 62,"name": "dwFlags"},{"file": 52,"line": 120,"col": 78,"name": "lpSummary"},{"file": 52,"line": 188,"col": 52,"name": "hProcess"},{"file": 52,"line": 188,"col": 70,"name": "uExitCode"},{"file": 52,"line": 117,"col": 47,"name": "hHeap"},{"file": 52,"line": 117,"col": 62,"name": "dwFlags"},{"file": 52,"line": 117,"col": 78,"name": "lpMem"},{"file": 52,"line": 117,"col": 94,"name": "dwBytes"},{"file": 52,"line": 141,"col": 59,"name": "lpPerformanceCount"},{"file": 52,"line": 139,"col": 62,"name": "CompletionPort"},{"file": 52,"line": 139,"col": 86,"name": "dwNumberOfBytesTransferred"},{"file": 52,"line": 139,"col": 121,"name": "dwCompletionKey"},{"file": 52,"line": 139,"col": 149,"name": "lpOverlapped"},{"file": 52,"line": 206,"col": 48,"name": "lpLibFileName"},{"file": 52,"line": 146,"col": 4,"name": "hDirectory"},{"file": 52,"line": 147,"col": 4,"name": "lpBuffer"},{"file": 52,"line": 148,"col": 4,"name": "nBufferLength"},{"file": 52,"line": 149,"col": 4,"name": "bWatchSubtree"},{"file": 52,"line": 150,"col": 4,"name": "dwNotifyFilter"},{"file": 52,"line": 151,"col": 4,"name": "lpBytesReturned"},{"file": 52,"line": 152,"col": 4,"name": "lpOverlapped"},{"file": 52,"line": 153,"col": 4,"name": "lpCompletionRoutine"},{"file": 52,"line": 5,"col": 46,"name": "hFile"},{"file": 52,"line": 5,"col": 61,"name": "lpOverlapped"},{"file": 52,"line": 54,"col": 45,"name": "hFindFile"},{"file": 52,"line": 9,"col": 52,"name": "lpPathName"},{"file": 52,"line": 9,"col": 78,"name": "lpSecurityAttributes"},{"file": 52,"line": 94,"col": 4,"name": "in_hFile"},{"file": 52,"line": 95,"col": 4,"name": "in_FileInformationClass"},{"file": 52,"line": 96,"col": 4,"name": "out_lpFileInformation"},{"file": 52,"line": 97,"col": 4,"name": "in_dwBufferSize"},{"file": 52,"line": 166,"col": 59,"name": "hConsoleOutput"},{"file": 52,"line": 166,"col": 83,"name": "wAttributes"},{"file": 52,"line": 192,"col": 43,"name": "dwTlsIndex"},{"file": 52,"line": 208,"col": 50,"name": "hModule"},{"file": 52,"line": 208,"col": 68,"name": "lpProcName"},{"file": 52,"line": 118,"col": 44,"name": "hHeap"},{"file": 52,"line": 118,"col": 59,"name": "dwFlags"},{"file": 52,"line": 118,"col": 75,"name": "lpMem"},{"file": 52,"line": 126,"col": 44,"name": "hHeap"},{"file": 52,"line": 126,"col": 59,"name": "dwFlags"},{"file": 52,"line": 126,"col": 75,"name": "lpMem"},{"file": 52,"line": 214,"col": 56,"name": "lpCriticalSection"},{"file": 52,"line": 169,"col": 4,"name": "in_fFile"},{"file": 52,"line": 170,"col": 4,"name": "in_liDistanceToMove"},{"file": 52,"line": 171,"col": 4,"name": "out_opt_ldNewFilePointer"},{"file": 52,"line": 172,"col": 4,"name": "in_dwMoveMethod"},{"file": 52,"line": 215,"col": 57,"name": "lpCriticalSection"},{"file": 52,"line": 110,"col": 61,"name": "CompletionPort"},{"file": 52,"line": 110,"col": 85,"name": "lpNumberOfBytesTransferred"},{"file": 52,"line": 110,"col": 122,"name": "lpCompletionKey"},{"file": 52,"line": 110,"col": 151,"name": "lpOverlapped"},{"file": 52,"line": 110,"col": 180,"name": "dwMilliseconds"},{"file": 52,"line": 122,"col": 48,"name": "in_nStdHandle"},{"file": 52,"line": 113,"col": 59},{"file": 52,"line": 47,"col": 47,"name": "lpFileName"},{"file": 52,"line": 74,"col": 59,"name": "lpName"},{"file": 52,"line": 74,"col": 75,"name": "lpBuffer"},{"file": 52,"line": 74,"col": 93,"name": "nSize"},{"file": 52,"line": 176,"col": 4,"name": "hFile"},{"file": 52,"line": 177,"col": 4,"name": "lpCreationTime"},{"file": 52,"line": 178,"col": 4,"name": "lpLastAccessTime"},{"file": 52,"line": 179,"col": 4,"name": "lpLastWriteTime"},{"file": 52,"line": 12,"col": 4,"name": "lpFileName"},{"file": 52,"line": 13,"col": 4,"name": "dwDesiredAccess"},{"file": 52,"line": 14,"col": 4,"name": "dwShareMode"},{"file": 52,"line": 15,"col": 4,"name": "lpSecurityAttributes"},{"file": 52,"line": 16,"col": 4,"name": "dwCreationDisposition"},{"file": 52,"line": 17,"col": 4,"name": "dwFlagsAndAttributes"},{"file": 52,"line": 18,"col": 4,"name": "hTemplateFile"},{"file": 52,"line": 78,"col": 49,"name": "hFile"},{"file": 52,"line": 78,"col": 64,"name": "lpFileSize"},{"file": 52,"line": 89,"col": 4,"name": "hFile"},{"file": 52,"line": 90,"col": 4,"name": "lpFileInformation"},{"file": 52,"line": 49,"col": 51,"name": "hSourceProcessHandle"},{"file": 52,"line": 49,"col": 81,"name": "hSourceHandle"},{"file": 52,"line": 49,"col": 104,"name": "hTargetProcessHandle"},{"file": 52,"line": 49,"col": 134,"name": "lpTargetHandle"},{"file": 52,"line": 49,"col": 159,"name": "dwDesiredAccess"},{"file": 52,"line": 49,"col": 183,"name": "bInheritHandle"},{"file": 52,"line": 49,"col": 205,"name": "dwOptions"},{"file": 52,"line": 29,"col": 4,"name": "lpApplicationName"},{"file": 52,"line": 30,"col": 4,"name": "lpCommandLine"},{"file": 52,"line": 31,"col": 4,"name": "lpProcessAttributes"},{"file": 52,"line": 32,"col": 4,"name": "lpThreadAttributes"},{"file": 52,"line": 33,"col": 4,"name": "bInheritHandles"},{"file": 52,"line": 34,"col": 4,"name": "dwCreationFlags"},{"file": 52,"line": 35,"col": 4,"name": "lpEnvironment"},{"file": 52,"line": 36,"col": 4,"name": "lpCurrentDirectory"},{"file": 52,"line": 37,"col": 4,"name": "lpStartupInfo"},{"file": 52,"line": 38,"col": 4,"name": "lpProcessInformation"}],"files": ["E:\\Projects\\zig-sparse-set\\src\\sparse_set.zig","C:\\Users\\Srekel\\AppData\\Local\\zig\\stage1\\builtin\\5cX3brdpG-OgsxGkb_SV_aVyNgoX2AlhXiBV97cYFx_aC1EQ0GeZGT_-V7WKDiJg\\builtin.zig","E:\\Programs\\zig\\lib\\zig\\std\\std.zig","E:\\Programs\\zig\\lib\\zig\\std\\special\\test_runner.zig","E:\\Programs\\zig\\lib\\zig\\std\\array_list.zig","E:\\Programs\\zig\\lib\\zig\\std\\linked_list.zig","E:\\Programs\\zig\\lib\\zig\\std\\lazy_init.zig","E:\\Programs\\zig\\lib\\zig\\std\\builtin.zig","E:\\Programs\\zig\\lib\\zig\\std\\atomic\\queue.zig","E:\\Programs\\zig\\lib\\zig\\std\\atomic\\stack.zig","E:\\Programs\\zig\\lib\\zig\\std\\hash_map.zig","E:\\Programs\\zig\\lib\\zig\\std\\io\\in_stream.zig","E:\\Programs\\zig\\lib\\zig\\std\\io\\out_stream.zig","E:\\Programs\\zig\\lib\\zig\\std\\mem.zig","E:\\Programs\\zig\\lib\\zig\\std\\math.zig","E:\\Programs\\zig\\lib\\zig\\std\\os.zig","E:\\Programs\\zig\\lib\\zig\\std\\debug.zig","E:\\Programs\\zig\\lib\\zig\\std\\testing.zig","E:\\Programs\\zig\\lib\\zig\\std\\event.zig","E:\\Programs\\zig\\lib\\zig\\std\\unicode.zig","E:\\Programs\\zig\\lib\\zig\\std\\io.zig","E:\\Programs\\zig\\lib\\zig\\std\\fmt.zig","E:\\Programs\\zig\\lib\\zig\\std\\atomic.zig","E:\\Programs\\zig\\lib\\zig\\std\\pdb.zig","E:\\Programs\\zig\\lib\\zig\\std\\coff.zig","E:\\Programs\\zig\\lib\\zig\\std\\hash.zig","E:\\Programs\\zig\\lib\\zig\\std\\meta.zig","E:\\Programs\\zig\\lib\\zig\\std\\fs.zig","E:\\Programs\\zig\\lib\\zig\\std\\heap.zig","E:\\Programs\\zig\\lib\\zig\\std\\time.zig","E:\\Programs\\zig\\lib\\zig\\std\\process.zig","E:\\Programs\\zig\\lib\\zig\\std\\macho.zig","E:\\Programs\\zig\\lib\\zig\\std\\fs\\file.zig","E:\\Programs\\zig\\lib\\zig\\std\\fs\\path.zig","E:\\Programs\\zig\\lib\\zig\\std\\mutex.zig","E:\\Programs\\zig\\lib\\zig\\std\\parker.zig","E:\\Programs\\zig\\lib\\zig\\std\\spinlock.zig","E:\\Programs\\zig\\lib\\zig\\std\\hash\\wyhash.zig","E:\\Programs\\zig\\lib\\zig\\std\\progress.zig","E:\\Programs\\zig\\lib\\zig\\std\\event\\loop.zig","E:\\Programs\\zig\\lib\\zig\\std\\target.zig","E:\\Programs\\zig\\lib\\zig\\std\\meta\\trait.zig","E:\\Programs\\zig\\lib\\zig\\std\\thread.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\bits\\windows.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\bits.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows.zig","E:\\Programs\\zig\\lib\\zig\\std\\hash\\auto_hash.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows\\bits.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows\\lang.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows\\sublang.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows\\error.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows\\ntdll.zig","E:\\Programs\\zig\\lib\\zig\\std\\os\\windows\\kernel32.zig","E:\\Programs\\zig\\lib\\zig\\std\\special\\start.zig"]};